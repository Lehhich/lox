{
  "version": 3,
  "sources": ["../../vuetify/src/components/VSelect/VSelect.tsx", "../../vuetify/src/components/VCheckbox/VCheckbox.tsx", "../../vuetify/src/components/VSelectionControl/VSelectionControl.tsx", "../../vuetify/src/components/VSelectionControlGroup/VSelectionControlGroup.tsx", "../../vuetify/src/components/VCheckbox/VCheckboxBtn.tsx", "../../vuetify/src/components/VChip/VChip.tsx", "../../vuetify/src/components/VChipGroup/VChipGroup.tsx", "../../vuetify/src/components/VSlideGroup/VSlideGroup.tsx", "../../vuetify/src/components/VSlideGroup/helpers.ts", "../../vuetify/src/components/VList/VList.tsx", "../../vuetify/src/components/VList/list.ts", "../../vuetify/src/composables/nested/activeStrategies.ts", "../../vuetify/src/composables/nested/openStrategies.ts", "../../vuetify/src/composables/nested/selectStrategies.ts", "../../vuetify/src/composables/nested/nested.ts", "../../vuetify/src/components/VList/VListGroup.tsx", "../../vuetify/src/components/VList/VListItem.tsx", "../../vuetify/src/components/VList/VListItemSubtitle.tsx", "../../vuetify/src/components/VList/VListItemTitle.ts", "../../vuetify/src/components/VList/VListSubheader.tsx", "../../vuetify/src/components/VDivider/VDivider.tsx", "../../vuetify/src/components/VList/VListChildren.tsx", "../../vuetify/src/composables/list-items.ts", "../../vuetify/src/components/VList/VListImg.ts", "../../vuetify/src/components/VList/VListItemAction.tsx", "../../vuetify/src/components/VList/VListItemMedia.tsx", "../../vuetify/src/components/VMenu/VMenu.tsx", "../../vuetify/src/components/VOverlay/VOverlay.tsx", "../../vuetify/src/components/VOverlay/util/point.ts", "../../vuetify/src/components/VOverlay/locationStrategies.ts", "../../vuetify/src/components/VOverlay/requestNewFrame.ts", "../../vuetify/src/components/VOverlay/scrollStrategies.ts", "../../vuetify/src/components/VMenu/shared.ts", "../../vuetify/src/composables/delay.ts", "../../vuetify/src/components/VOverlay/useActivator.tsx", "../../vuetify/src/composables/hydration.ts", "../../vuetify/src/composables/lazy.ts", "../../vuetify/src/composables/scopeId.ts", "../../vuetify/src/composables/stack.ts", "../../vuetify/src/composables/teleport.ts", "../../vuetify/src/directives/click-outside/index.ts", "../../vuetify/src/components/VSelect/useScrolling.ts"],
  "sourcesContent": ["// Styles\nimport './VSelect.sass'\n\n// Components\nimport { VDialogTransition } from '@/components/transitions'\nimport { VAvatar } from '@/components/VAvatar'\nimport { VCheckboxBtn } from '@/components/VCheckbox'\nimport { VChip } from '@/components/VChip'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\nimport { VList, VListItem } from '@/components/VList'\nimport { VMenu } from '@/components/VMenu'\nimport { makeVTextFieldProps, VTextField } from '@/components/VTextField/VTextField'\nimport { VVirtualScroll } from '@/components/VVirtualScroll'\n\n// Composables\nimport { useScrolling } from './useScrolling'\nimport { useForm } from '@/composables/form'\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { IconValue } from '@/composables/icons'\nimport { makeItemsProps, useItems } from '@/composables/list-items'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { makeTransitionProps } from '@/composables/transition'\n\n// Utilities\nimport { computed, mergeProps, nextTick, ref, shallowRef, watch } from 'vue'\nimport {\n  checkPrintable,\n  ensureValidVNode,\n  genericComponent,\n  IN_BROWSER,\n  matchesSelector,\n  omit,\n  propsFactory,\n  useRender,\n  wrapInArray,\n} from '@/util'\n\n// Types\nimport type { Component, PropType } from 'vue'\nimport type { VFieldSlots } from '@/components/VField/VField'\nimport type { VInputSlots } from '@/components/VInput/VInput'\nimport type { ListItem } from '@/composables/list-items'\nimport type { GenericProps, SelectItemKey } from '@/util'\n\ntype Primitive = string | number | boolean | symbol\n\ntype Val <T, ReturnObject extends boolean> = [T] extends [Primitive]\n  ? T\n  : (ReturnObject extends true ? T : any)\n\ntype Value <T, ReturnObject extends boolean, Multiple extends boolean> =\n  Multiple extends true\n    ? readonly Val<T, ReturnObject>[]\n    : Val<T, ReturnObject> | null\n\nexport const makeSelectProps = propsFactory({\n  chips: Boolean,\n  closableChips: Boolean,\n  closeText: {\n    type: String,\n    default: '$vuetify.close',\n  },\n  openText: {\n    type: String,\n    default: '$vuetify.open',\n  },\n  eager: Boolean,\n  hideNoData: Boolean,\n  hideSelected: Boolean,\n  listProps: {\n    type: Object as PropType<VList['$props']>,\n  },\n  menu: Boolean,\n  menuIcon: {\n    type: IconValue,\n    default: '$dropdown',\n  },\n  menuProps: {\n    type: Object as PropType<VMenu['$props']>,\n  },\n  multiple: Boolean,\n  noDataText: {\n    type: String,\n    default: '$vuetify.noDataText',\n  },\n  openOnClear: Boolean,\n  itemColor: String,\n\n  ...makeItemsProps({ itemChildren: false }),\n}, 'Select')\n\nexport const makeVSelectProps = propsFactory({\n  ...makeSelectProps(),\n  ...omit(makeVTextFieldProps({\n    modelValue: null,\n    role: 'combobox',\n  }), ['validationValue', 'dirty', 'appendInnerIcon']),\n  ...makeTransitionProps({ transition: { component: VDialogTransition as Component } }),\n}, 'VSelect')\n\ntype ItemType<T> = T extends readonly (infer U)[] ? U : never\n\nexport const VSelect = genericComponent<new <\n  T extends readonly any[],\n  Item = ItemType<T>,\n  ReturnObject extends boolean = false,\n  Multiple extends boolean = false,\n  V extends Value<Item, ReturnObject, Multiple> = Value<Item, ReturnObject, Multiple>\n>(\n  props: {\n    items?: T\n    itemTitle?: SelectItemKey<ItemType<T>>\n    itemValue?: SelectItemKey<ItemType<T>>\n    itemProps?: SelectItemKey<ItemType<T>>\n    returnObject?: ReturnObject\n    multiple?: Multiple\n    modelValue?: V | null\n    'onUpdate:modelValue'?: (value: V) => void\n  },\n  slots: Omit<VInputSlots & VFieldSlots, 'default'> & {\n    item: { item: ListItem<Item>, index: number, props: Record<string, unknown> }\n    chip: { item: ListItem<Item>, index: number, props: Record<string, unknown> }\n    selection: { item: ListItem<Item>, index: number }\n    'prepend-item': never\n    'append-item': never\n    'no-data': never\n  }\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VSelect',\n\n  props: makeVSelectProps(),\n\n  emits: {\n    'update:focused': (focused: boolean) => true,\n    'update:modelValue': (value: any) => true,\n    'update:menu': (ue: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const { t } = useLocale()\n    const vTextFieldRef = ref()\n    const vMenuRef = ref<VMenu>()\n    const vVirtualScrollRef = ref<VVirtualScroll>()\n    const _menu = useProxiedModel(props, 'menu')\n    const menu = computed({\n      get: () => _menu.value,\n      set: v => {\n        if (_menu.value && !v && vMenuRef.value?.Î¨openChildren.size) return\n        _menu.value = v\n      },\n    })\n    const { items, transformIn, transformOut } = useItems(props)\n    const model = useProxiedModel(\n      props,\n      'modelValue',\n      [],\n      v => transformIn(v === null ? [null] : wrapInArray(v)),\n      v => {\n        const transformed = transformOut(v)\n        return props.multiple ? transformed : (transformed[0] ?? null)\n      }\n    )\n    const counterValue = computed(() => {\n      return typeof props.counterValue === 'function' ? props.counterValue(model.value)\n        : typeof props.counterValue === 'number' ? props.counterValue\n        : model.value.length\n    })\n    const form = useForm()\n    const selectedValues = computed(() => model.value.map(selection => selection.value))\n    const isFocused = shallowRef(false)\n    const label = computed(() => menu.value ? props.closeText : props.openText)\n\n    let keyboardLookupPrefix = ''\n    let keyboardLookupLastTime: number\n\n    const displayItems = computed(() => {\n      if (props.hideSelected) {\n        return items.value.filter(item => !model.value.some(s => props.valueComparator(s, item)))\n      }\n      return items.value\n    })\n\n    const menuDisabled = computed(() => (\n      (props.hideNoData && !displayItems.value.length) ||\n      props.readonly || form?.isReadonly.value\n    ))\n\n    const computedMenuProps = computed(() => {\n      return {\n        ...props.menuProps,\n        activatorProps: {\n          ...(props.menuProps?.activatorProps || {}),\n          'aria-haspopup': 'listbox', // Set aria-haspopup to 'listbox'\n        },\n      }\n    })\n\n    const listRef = ref<VList>()\n    const listEvents = useScrolling(listRef, vTextFieldRef)\n    function onClear (e: MouseEvent) {\n      if (props.openOnClear) {\n        menu.value = true\n      }\n    }\n    function onMousedownControl () {\n      if (menuDisabled.value) return\n\n      menu.value = !menu.value\n    }\n    function onListKeydown (e: KeyboardEvent) {\n      if (checkPrintable(e)) {\n        onKeydown(e)\n      }\n    }\n    function onKeydown (e: KeyboardEvent) {\n      if (!e.key || props.readonly || form?.isReadonly.value) return\n\n      if (['Enter', ' ', 'ArrowDown', 'ArrowUp', 'Home', 'End'].includes(e.key)) {\n        e.preventDefault()\n      }\n\n      if (['Enter', 'ArrowDown', ' '].includes(e.key)) {\n        menu.value = true\n      }\n\n      if (['Escape', 'Tab'].includes(e.key)) {\n        menu.value = false\n      }\n\n      if (e.key === 'Home') {\n        listRef.value?.focus('first')\n      } else if (e.key === 'End') {\n        listRef.value?.focus('last')\n      }\n\n      // html select hotkeys\n      const KEYBOARD_LOOKUP_THRESHOLD = 1000 // milliseconds\n\n      if (props.multiple || !checkPrintable(e)) return\n\n      const now = performance.now()\n      if (now - keyboardLookupLastTime > KEYBOARD_LOOKUP_THRESHOLD) {\n        keyboardLookupPrefix = ''\n      }\n      keyboardLookupPrefix += e.key.toLowerCase()\n      keyboardLookupLastTime = now\n\n      const item = items.value.find(item => item.title.toLowerCase().startsWith(keyboardLookupPrefix))\n      if (item !== undefined) {\n        model.value = [item]\n        const index = displayItems.value.indexOf(item)\n        IN_BROWSER && window.requestAnimationFrame(() => {\n          index >= 0 && vVirtualScrollRef.value?.scrollToIndex(index)\n        })\n      }\n    }\n\n    /** @param set - null means toggle */\n    function select (item: ListItem, set: boolean | null = true) {\n      if (item.props.disabled) return\n\n      if (props.multiple) {\n        const index = model.value.findIndex(selection => props.valueComparator(selection.value, item.value))\n        const add = set == null ? !~index : set\n\n        if (~index) {\n          const value = add ? [...model.value, item] : [...model.value]\n          value.splice(index, 1)\n          model.value = value\n        } else if (add) {\n          model.value = [...model.value, item]\n        }\n      } else {\n        const add = set !== false\n        model.value = add ? [item] : []\n\n        nextTick(() => {\n          menu.value = false\n        })\n      }\n    }\n    function onBlur (e: FocusEvent) {\n      if (!listRef.value?.$el.contains(e.relatedTarget as HTMLElement)) {\n        menu.value = false\n      }\n    }\n    function onAfterEnter () {\n      if (props.eager) {\n        vVirtualScrollRef.value?.calculateVisibleItems()\n      }\n    }\n    function onAfterLeave () {\n      if (isFocused.value) {\n        vTextFieldRef.value?.focus()\n      }\n    }\n    function onFocusin (e: FocusEvent) {\n      isFocused.value = true\n    }\n    function onModelUpdate (v: any) {\n      if (v == null) model.value = []\n      else if (matchesSelector(vTextFieldRef.value, ':autofill') || matchesSelector(vTextFieldRef.value, ':-webkit-autofill')) {\n        const item = items.value.find(item => item.title === v)\n        if (item) {\n          select(item)\n        }\n      } else if (vTextFieldRef.value) {\n        vTextFieldRef.value.value = ''\n      }\n    }\n\n    watch(menu, () => {\n      if (!props.hideSelected && menu.value && model.value.length) {\n        const index = displayItems.value.findIndex(\n          item => model.value.some(s => props.valueComparator(s.value, item.value))\n        )\n        IN_BROWSER && window.requestAnimationFrame(() => {\n          index >= 0 && vVirtualScrollRef.value?.scrollToIndex(index)\n        })\n      }\n    })\n\n    watch(() => props.items, (newVal, oldVal) => {\n      if (menu.value) return\n\n      if (isFocused.value && !oldVal.length && newVal.length) {\n        menu.value = true\n      }\n    })\n\n    useRender(() => {\n      const hasChips = !!(props.chips || slots.chip)\n      const hasList = !!(\n        (!props.hideNoData || displayItems.value.length) ||\n        slots['prepend-item'] ||\n        slots['append-item'] ||\n        slots['no-data']\n      )\n      const isDirty = model.value.length > 0\n      const textFieldProps = VTextField.filterProps(props)\n\n      const placeholder = isDirty || (\n        !isFocused.value &&\n        props.label &&\n        !props.persistentPlaceholder\n      ) ? undefined : props.placeholder\n\n      return (\n        <VTextField\n          ref={ vTextFieldRef }\n          { ...textFieldProps }\n          modelValue={ model.value.map(v => v.props.value).join(', ') }\n          onUpdate:modelValue={ onModelUpdate }\n          v-model:focused={ isFocused.value }\n          validationValue={ model.externalValue }\n          counterValue={ counterValue.value }\n          dirty={ isDirty }\n          class={[\n            'v-select',\n            {\n              'v-select--active-menu': menu.value,\n              'v-select--chips': !!props.chips,\n              [`v-select--${props.multiple ? 'multiple' : 'single'}`]: true,\n              'v-select--selected': model.value.length,\n              'v-select--selection-slot': !!slots.selection,\n            },\n            props.class,\n          ]}\n          style={ props.style }\n          inputmode=\"none\"\n          placeholder={ placeholder }\n          onClick:clear={ onClear }\n          onMousedown:control={ onMousedownControl }\n          onBlur={ onBlur }\n          onKeydown={ onKeydown }\n          aria-label={ t(label.value) }\n          title={ t(label.value) }\n        >\n          {{\n            ...slots,\n            default: () => (\n              <>\n                <VMenu\n                  ref={ vMenuRef }\n                  v-model={ menu.value }\n                  activator=\"parent\"\n                  contentClass=\"v-select__content\"\n                  disabled={ menuDisabled.value }\n                  eager={ props.eager }\n                  maxHeight={ 310 }\n                  openOnClick={ false }\n                  closeOnContentClick={ false }\n                  transition={ props.transition }\n                  onAfterEnter={ onAfterEnter }\n                  onAfterLeave={ onAfterLeave }\n                  { ...computedMenuProps.value }\n                >\n                  { hasList && (\n                    <VList\n                      ref={ listRef }\n                      selected={ selectedValues.value }\n                      selectStrategy={ props.multiple ? 'independent' : 'single-independent' }\n                      onMousedown={ (e: MouseEvent) => e.preventDefault() }\n                      onKeydown={ onListKeydown }\n                      onFocusin={ onFocusin }\n                      tabindex=\"-1\"\n                      aria-live=\"polite\"\n                      color={ props.itemColor ?? props.color }\n                      { ...listEvents }\n                      { ...props.listProps }\n                    >\n                      { slots['prepend-item']?.() }\n\n                      { !displayItems.value.length && !props.hideNoData && (slots['no-data']?.() ?? (\n                        <VListItem title={ t(props.noDataText) } />\n                      ))}\n\n                      <VVirtualScroll ref={ vVirtualScrollRef } renderless items={ displayItems.value }>\n                        { ({ item, index, itemRef }) => {\n                          const itemProps = mergeProps(item.props, {\n                            ref: itemRef,\n                            key: index,\n                            onClick: () => select(item, null),\n                          })\n\n                          return slots.item?.({\n                            item,\n                            index,\n                            props: itemProps,\n                          }) ?? (\n                            <VListItem { ...itemProps } role=\"option\">\n                              {{\n                                prepend: ({ isSelected }) => (\n                                  <>\n                                    { props.multiple && !props.hideSelected ? (\n                                      <VCheckboxBtn\n                                        key={ item.value }\n                                        modelValue={ isSelected }\n                                        ripple={ false }\n                                        tabindex=\"-1\"\n                                      />\n                                    ) : undefined }\n\n                                    { item.props.prependAvatar && (\n                                      <VAvatar image={ item.props.prependAvatar } />\n                                    )}\n\n                                    { item.props.prependIcon && (\n                                      <VIcon icon={ item.props.prependIcon } />\n                                    )}\n                                  </>\n                                ),\n                              }}\n                            </VListItem>\n                          )\n                        }}\n                      </VVirtualScroll>\n\n                      { slots['append-item']?.() }\n                    </VList>\n                  )}\n                </VMenu>\n\n                { model.value.map((item, index) => {\n                  function onChipClose (e: Event) {\n                    e.stopPropagation()\n                    e.preventDefault()\n\n                    select(item, false)\n                  }\n\n                  const slotProps = {\n                    'onClick:close': onChipClose,\n                    onKeydown (e: KeyboardEvent) {\n                      if (e.key !== 'Enter' && e.key !== ' ') return\n\n                      e.preventDefault()\n                      e.stopPropagation()\n\n                      onChipClose(e)\n                    },\n                    onMousedown (e: MouseEvent) {\n                      e.preventDefault()\n                      e.stopPropagation()\n                    },\n                    modelValue: true,\n                    'onUpdate:modelValue': undefined,\n                  }\n\n                  const hasSlot = hasChips ? !!slots.chip : !!slots.selection\n                  const slotContent = hasSlot\n                    ? ensureValidVNode(\n                      hasChips\n                        ? slots.chip!({ item, index, props: slotProps })\n                        : slots.selection!({ item, index })\n                    )\n                    : undefined\n\n                  if (hasSlot && !slotContent) return undefined\n\n                  return (\n                    <div key={ item.value } class=\"v-select__selection\">\n                      { hasChips ? (\n                        !slots.chip ? (\n                          <VChip\n                            key=\"chip\"\n                            closable={ props.closableChips }\n                            size=\"small\"\n                            text={ item.title }\n                            disabled={ item.props.disabled }\n                            { ...slotProps }\n                          />\n                        ) : (\n                          <VDefaultsProvider\n                            key=\"chip-defaults\"\n                            defaults={{\n                              VChip: {\n                                closable: props.closableChips,\n                                size: 'small',\n                                text: item.title,\n                              },\n                            }}\n                          >\n                            { slotContent }\n                          </VDefaultsProvider>\n                        )\n                      ) : (\n                        slotContent ?? (\n                          <span class=\"v-select__selection-text\">\n                            { item.title }\n                            { props.multiple && (index < model.value.length - 1) && (\n                              <span class=\"v-select__selection-comma\">,</span>\n                            )}\n                          </span>\n                        )\n                      )}\n                    </div>\n                  )\n                })}\n              </>\n            ),\n            'append-inner': (...args) => (\n              <>\n                { slots['append-inner']?.(...args) }\n                { props.menuIcon ? (\n                  <VIcon\n                    class=\"v-select__menu-icon\"\n                    icon={ props.menuIcon }\n                  />\n                ) : undefined }\n              </>\n            ),\n          }}\n        </VTextField>\n      )\n    })\n\n    return forwardRefs({\n      isFocused,\n      menu,\n      select,\n    }, vTextFieldRef)\n  },\n})\n\nexport type VSelect = InstanceType<typeof VSelect>\n", "// Styles\nimport './VCheckbox.sass'\n\n// Components\nimport { makeVCheckboxBtnProps, VCheckboxBtn } from './VCheckboxBtn'\nimport { makeVInputProps, VInput } from '@/components/VInput/VInput'\n\n// Composables\nimport { useFocus } from '@/composables/focus'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed } from 'vue'\nimport { filterInputAttrs, genericComponent, getUid, omit, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { VSelectionControlSlots } from '../VSelectionControl/VSelectionControl'\nimport type { VInputSlots } from '@/components/VInput/VInput'\nimport type { GenericProps } from '@/util'\n\nexport type VCheckboxSlots = Omit<VInputSlots, 'default'> & VSelectionControlSlots\n\nexport const makeVCheckboxProps = propsFactory({\n  ...makeVInputProps(),\n  ...omit(makeVCheckboxBtnProps(), ['inline']),\n}, 'VCheckbox')\n\nexport const VCheckbox = genericComponent<new <T>(\n  props: {\n    modelValue?: T | null\n    'onUpdate:modelValue'?: (value: T | null) => void\n  },\n  slots: VCheckboxSlots,\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VCheckbox',\n\n  inheritAttrs: false,\n\n  props: makeVCheckboxProps(),\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n    'update:focused': (focused: boolean) => true,\n  },\n\n  setup (props, { attrs, slots }) {\n    const model = useProxiedModel(props, 'modelValue')\n    const { isFocused, focus, blur } = useFocus(props)\n\n    const uid = getUid()\n    const id = computed(() => props.id || `checkbox-${uid}`)\n\n    useRender(() => {\n      const [rootAttrs, controlAttrs] = filterInputAttrs(attrs)\n      const inputProps = VInput.filterProps(props)\n      const checkboxProps = VCheckboxBtn.filterProps(props)\n\n      return (\n        <VInput\n          class={[\n            'v-checkbox',\n            props.class,\n          ]}\n          { ...rootAttrs }\n          { ...inputProps }\n          v-model={ model.value }\n          id={ id.value }\n          focused={ isFocused.value }\n          style={ props.style }\n        >\n          {{\n            ...slots,\n            default: ({\n              id,\n              messagesId,\n              isDisabled,\n              isReadonly,\n              isValid,\n            }) => (\n              <VCheckboxBtn\n                { ...checkboxProps }\n                id={ id.value }\n                aria-describedby={ messagesId.value }\n                disabled={ isDisabled.value }\n                readonly={ isReadonly.value }\n                { ...controlAttrs }\n                error={ isValid.value === false }\n                v-model={ model.value }\n                onFocus={ focus }\n                onBlur={ blur }\n                v-slots={ slots }\n              />\n            ),\n          }}\n        </VInput>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VCheckbox = InstanceType<typeof VCheckbox>\n", "// Styles\nimport './VSelectionControl.sass'\n\n// Components\nimport { VIcon } from '@/components/VIcon'\nimport { VLabel } from '@/components/VLabel'\nimport { makeSelectionControlGroupProps, VSelectionControlGroupSymbol } from '@/components/VSelectionControlGroup/VSelectionControlGroup'\n\n// Composables\nimport { useBackgroundColor, useTextColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { useDensity } from '@/composables/density'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Directives\nimport { Ripple } from '@/directives/ripple'\n\n// Utilities\nimport { computed, inject, nextTick, ref, shallowRef } from 'vue'\nimport {\n  filterInputAttrs,\n  genericComponent,\n  getUid,\n  matchesSelector,\n  propsFactory,\n  useRender,\n  wrapInArray,\n} from '@/util'\n\n// Types\nimport type { CSSProperties, ExtractPropTypes, Ref, VNode, WritableComputedRef } from 'vue'\nimport type { IconValue } from '@/composables/icons'\nimport type { EventProp, GenericProps } from '@/util'\n\nexport type SelectionControlSlot = {\n  model: WritableComputedRef<boolean>\n  textColorClasses: Ref<string[]>\n  textColorStyles: Ref<CSSProperties>\n  backgroundColorClasses: Ref<string[]>\n  backgroundColorStyles: Ref<CSSProperties>\n  inputNode: VNode\n  icon: IconValue | undefined\n  props: {\n    onBlur: (e: Event) => void\n    onFocus: (e: FocusEvent) => void\n    id: string\n  }\n}\n\nexport type VSelectionControlSlots = {\n  default: {\n    backgroundColorClasses: Ref<string[]>\n    backgroundColorStyles: Ref<CSSProperties>\n  }\n  label: { label: string | undefined, props: Record<string, unknown> }\n  input: SelectionControlSlot\n}\n\nexport const makeVSelectionControlProps = propsFactory({\n  label: String,\n  baseColor: String,\n  trueValue: null,\n  falseValue: null,\n  value: null,\n\n  ...makeComponentProps(),\n  ...makeSelectionControlGroupProps(),\n}, 'VSelectionControl')\n\nexport function useSelectionControl (\n  props: ExtractPropTypes<ReturnType<typeof makeVSelectionControlProps>> & {\n    'onUpdate:modelValue': EventProp | undefined\n  }\n) {\n  const group = inject(VSelectionControlGroupSymbol, undefined)\n  const { densityClasses } = useDensity(props)\n  const modelValue = useProxiedModel(props, 'modelValue')\n  const trueValue = computed(() => (\n    props.trueValue !== undefined ? props.trueValue\n    : props.value !== undefined ? props.value\n    : true\n  ))\n  const falseValue = computed(() => props.falseValue !== undefined ? props.falseValue : false)\n  const isMultiple = computed(() => (\n    !!props.multiple ||\n    (props.multiple == null && Array.isArray(modelValue.value))\n  ))\n  const model = computed({\n    get () {\n      const val = group ? group.modelValue.value : modelValue.value\n\n      return isMultiple.value\n        ? wrapInArray(val).some((v: any) => props.valueComparator(v, trueValue.value))\n        : props.valueComparator(val, trueValue.value)\n    },\n    set (val: boolean) {\n      if (props.readonly) return\n\n      const currentValue = val ? trueValue.value : falseValue.value\n\n      let newVal = currentValue\n\n      if (isMultiple.value) {\n        newVal = val\n          ? [...wrapInArray(modelValue.value), currentValue]\n          : wrapInArray(modelValue.value).filter((item: any) => !props.valueComparator(item, trueValue.value))\n      }\n\n      if (group) {\n        group.modelValue.value = newVal\n      } else {\n        modelValue.value = newVal\n      }\n    },\n  })\n  const { textColorClasses, textColorStyles } = useTextColor(computed(() => {\n    if (props.error || props.disabled) return undefined\n\n    return model.value ? props.color : props.baseColor\n  }))\n  const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(computed(() => {\n    return (\n      model.value &&\n      !props.error &&\n      !props.disabled\n    ) ? props.color : props.baseColor\n  }))\n  const icon = computed(() => model.value ? props.trueIcon : props.falseIcon)\n\n  return {\n    group,\n    densityClasses,\n    trueValue,\n    falseValue,\n    model,\n    textColorClasses,\n    textColorStyles,\n    backgroundColorClasses,\n    backgroundColorStyles,\n    icon,\n  }\n}\n\nexport const VSelectionControl = genericComponent<new <T>(\n  props: {\n    modelValue?: T\n    'onUpdate:modelValue'?: (value: T) => void\n  },\n  slots: VSelectionControlSlots,\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VSelectionControl',\n\n  directives: { Ripple },\n\n  inheritAttrs: false,\n\n  props: makeVSelectionControlProps(),\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { attrs, slots }) {\n    const {\n      group,\n      densityClasses,\n      icon,\n      model,\n      textColorClasses,\n      textColorStyles,\n      backgroundColorClasses,\n      backgroundColorStyles,\n      trueValue,\n    } = useSelectionControl(props)\n    const uid = getUid()\n    const isFocused = shallowRef(false)\n    const isFocusVisible = shallowRef(false)\n    const input = ref<HTMLInputElement>()\n    const id = computed(() => props.id || `input-${uid}`)\n    const isInteractive = computed(() => !props.disabled && !props.readonly)\n\n    group?.onForceUpdate(() => {\n      if (input.value) {\n        input.value.checked = model.value\n      }\n    })\n\n    function onFocus (e: FocusEvent) {\n      if (!isInteractive.value) return\n\n      isFocused.value = true\n      if (matchesSelector(e.target as HTMLElement, ':focus-visible') !== false) {\n        isFocusVisible.value = true\n      }\n    }\n\n    function onBlur () {\n      isFocused.value = false\n      isFocusVisible.value = false\n    }\n\n    function onClickLabel (e: Event) {\n      e.stopPropagation()\n    }\n\n    function onInput (e: Event) {\n      if (!isInteractive.value) {\n        if (input.value) {\n          // model value is not updated when input is not interactive\n          // but the internal checked state of the input is still updated,\n          // so here it's value is restored\n          input.value.checked = model.value\n        }\n\n        return\n      }\n\n      if (props.readonly && group) {\n        nextTick(() => group.forceUpdate())\n      }\n      model.value = (e.target as HTMLInputElement).checked\n    }\n\n    useRender(() => {\n      const label = slots.label\n        ? slots.label({\n          label: props.label,\n          props: { for: id.value },\n        })\n        : props.label\n      const [rootAttrs, inputAttrs] = filterInputAttrs(attrs)\n\n      const inputNode = (\n        <input\n          ref={ input }\n          checked={ model.value }\n          disabled={ !!props.disabled }\n          id={ id.value }\n          onBlur={ onBlur }\n          onFocus={ onFocus }\n          onInput={ onInput }\n          aria-disabled={ !!props.disabled }\n          aria-label={ props.label }\n          type={ props.type }\n          value={ trueValue.value }\n          name={ props.name }\n          aria-checked={ props.type === 'checkbox' ? model.value : undefined }\n          { ...inputAttrs }\n        />\n      )\n\n      return (\n        <div\n          class={[\n            'v-selection-control',\n            {\n              'v-selection-control--dirty': model.value,\n              'v-selection-control--disabled': props.disabled,\n              'v-selection-control--error': props.error,\n              'v-selection-control--focused': isFocused.value,\n              'v-selection-control--focus-visible': isFocusVisible.value,\n              'v-selection-control--inline': props.inline,\n            },\n            densityClasses.value,\n            props.class,\n          ]}\n          { ...rootAttrs }\n          style={ props.style }\n        >\n          <div\n            class={[\n              'v-selection-control__wrapper',\n              textColorClasses.value,\n            ]}\n            style={ textColorStyles.value }\n          >\n            { slots.default?.({\n              backgroundColorClasses,\n              backgroundColorStyles,\n            })}\n\n            <div\n              class={[\n                'v-selection-control__input',\n              ]}\n              v-ripple={ props.ripple && [\n                !props.disabled && !props.readonly,\n                null,\n                ['center', 'circle'],\n              ]}\n            >\n              { slots.input?.({\n                model,\n                textColorClasses,\n                textColorStyles,\n                backgroundColorClasses,\n                backgroundColorStyles,\n                inputNode,\n                icon: icon.value,\n                props: {\n                  onFocus,\n                  onBlur,\n                  id: id.value,\n                },\n              } satisfies SelectionControlSlot) ?? (\n                <>\n                  { icon.value && <VIcon key=\"icon\" icon={ icon.value } /> }\n\n                  { inputNode }\n                </>\n              )}\n            </div>\n          </div>\n\n          { label && (\n            <VLabel for={ id.value } onClick={ onClickLabel }>\n              { label }\n            </VLabel>\n          )}\n        </div>\n      )\n    })\n\n    return {\n      isFocused,\n      input,\n    }\n  },\n})\n\nexport type VSelectionControl = InstanceType<typeof VSelectionControl>\n", "// Styles\nimport './VSelectionControlGroup.sass'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { provideDefaults } from '@/composables/defaults'\nimport { makeDensityProps } from '@/composables/density'\nimport { IconValue } from '@/composables/icons'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { makeThemeProps } from '@/composables/theme'\n\n// Utilities\nimport { computed, onScopeDispose, provide, toRef } from 'vue'\nimport { deepEqual, genericComponent, getUid, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { InjectionKey, PropType, Ref } from 'vue'\nimport type { RippleDirectiveBinding } from '@/directives/ripple'\nimport type { GenericProps } from '@/util'\n\nexport interface VSelectionGroupContext {\n  modelValue: Ref<any>\n  forceUpdate: () => void\n  onForceUpdate: (fn: () => void) => void\n}\n\nexport const VSelectionControlGroupSymbol: InjectionKey<VSelectionGroupContext> = Symbol.for('vuetify:selection-control-group')\n\nexport const makeSelectionControlGroupProps = propsFactory({\n  color: String,\n  disabled: {\n    type: Boolean as PropType<boolean | null>,\n    default: null,\n  },\n  defaultsTarget: String,\n  error: Boolean,\n  id: String,\n  inline: Boolean,\n  falseIcon: IconValue,\n  trueIcon: IconValue,\n  ripple: {\n    type: [Boolean, Object] as PropType<RippleDirectiveBinding['value']>,\n    default: true,\n  },\n  multiple: {\n    type: Boolean as PropType<boolean | null>,\n    default: null,\n  },\n  name: String,\n  readonly: {\n    type: Boolean as PropType<boolean | null>,\n    default: null,\n  },\n  modelValue: null,\n  type: String,\n  valueComparator: {\n    type: Function as PropType<typeof deepEqual>,\n    default: deepEqual,\n  },\n\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...makeThemeProps(),\n}, 'SelectionControlGroup')\n\nexport const makeVSelectionControlGroupProps = propsFactory({\n  ...makeSelectionControlGroupProps({\n    defaultsTarget: 'VSelectionControl',\n  }),\n}, 'VSelectionControlGroup')\n\nexport const VSelectionControlGroup = genericComponent<new <T>(\n  props: {\n    modelValue?: T\n    'onUpdate:modelValue'?: (value: T) => void\n  },\n  slots: { default: never },\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VSelectionControlGroup',\n\n  props: makeVSelectionControlGroupProps(),\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const modelValue = useProxiedModel(props, 'modelValue')\n    const uid = getUid()\n    const id = computed(() => props.id || `v-selection-control-group-${uid}`)\n    const name = computed(() => props.name || id.value)\n\n    const updateHandlers = new Set<() => void>()\n    provide(VSelectionControlGroupSymbol, {\n      modelValue,\n      forceUpdate: () => {\n        updateHandlers.forEach(fn => fn())\n      },\n      onForceUpdate: cb => {\n        updateHandlers.add(cb)\n        onScopeDispose(() => {\n          updateHandlers.delete(cb)\n        })\n      },\n    })\n\n    provideDefaults({\n      [props.defaultsTarget]: {\n        color: toRef(props, 'color'),\n        disabled: toRef(props, 'disabled'),\n        density: toRef(props, 'density'),\n        error: toRef(props, 'error'),\n        inline: toRef(props, 'inline'),\n        modelValue,\n        multiple: computed(() => !!props.multiple || (props.multiple == null && Array.isArray(modelValue.value))),\n        name,\n        falseIcon: toRef(props, 'falseIcon'),\n        trueIcon: toRef(props, 'trueIcon'),\n        readonly: toRef(props, 'readonly'),\n        ripple: toRef(props, 'ripple'),\n        type: toRef(props, 'type'),\n        valueComparator: toRef(props, 'valueComparator'),\n      },\n    })\n\n    useRender(() => (\n      <div\n        class={[\n          'v-selection-control-group',\n          { 'v-selection-control-group--inline': props.inline },\n          props.class,\n        ]}\n        style={ props.style }\n        role={ props.type === 'radio' ? 'radiogroup' : undefined }\n      >\n        { slots.default?.() }\n      </div>\n    ))\n\n    return {}\n  },\n})\n\nexport type VSelectionControlGroup = InstanceType<typeof VSelectionControlGroup>\n", "// Components\nimport { makeVSelectionControlProps, VSelectionControl } from '@/components/VSelectionControl/VSelectionControl'\n\n// Composables\nimport { IconValue } from '@/composables/icons'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed } from 'vue'\nimport { genericComponent, omit, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { VSelectionControlSlots } from '@/components/VSelectionControl/VSelectionControl'\nimport type { GenericProps } from '@/util'\n\nexport const makeVCheckboxBtnProps = propsFactory({\n  indeterminate: Boolean,\n  indeterminateIcon: {\n    type: IconValue,\n    default: '$checkboxIndeterminate',\n  },\n\n  ...makeVSelectionControlProps({\n    falseIcon: '$checkboxOff',\n    trueIcon: '$checkboxOn',\n  }),\n}, 'VCheckboxBtn')\n\nexport const VCheckboxBtn = genericComponent<new <T>(\n  props: {\n    modelValue?: T\n    'onUpdate:modelValue'?: (value: T) => void\n  },\n  slots: VSelectionControlSlots,\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VCheckboxBtn',\n\n  props: makeVCheckboxBtnProps(),\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n    'update:indeterminate': (value: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const indeterminate = useProxiedModel(props, 'indeterminate')\n    const model = useProxiedModel(props, 'modelValue')\n\n    function onChange (v: any) {\n      if (indeterminate.value) {\n        indeterminate.value = false\n      }\n    }\n\n    const falseIcon = computed(() => {\n      return indeterminate.value\n        ? props.indeterminateIcon\n        : props.falseIcon\n    })\n\n    const trueIcon = computed(() => {\n      return indeterminate.value\n        ? props.indeterminateIcon\n        : props.trueIcon\n    })\n\n    useRender(() => {\n      const controlProps = omit(VSelectionControl.filterProps(props), ['modelValue'])\n      return (\n        <VSelectionControl\n          { ...controlProps }\n          v-model={ model.value }\n          class={[\n            'v-checkbox-btn',\n            props.class,\n          ]}\n          style={ props.style }\n          type=\"checkbox\"\n          onUpdate:modelValue={ onChange }\n          falseIcon={ falseIcon.value }\n          trueIcon={ trueIcon.value }\n          aria-checked={ indeterminate.value ? 'mixed' : undefined }\n          v-slots={ slots }\n        />\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VCheckboxBtn = InstanceType<typeof VCheckboxBtn>\n", "/* eslint-disable complexity */\n// Styles\nimport './VChip.sass'\n\n// Components\nimport { VExpandXTransition } from '@/components/transitions'\nimport { VAvatar } from '@/components/VAvatar'\nimport { VChipGroupSymbol } from '@/components/VChipGroup/VChipGroup'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeGroupItemProps, useGroupItem } from '@/composables/group'\nimport { IconValue } from '@/composables/icons'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeRouterProps, useLink } from '@/composables/router'\nimport { makeSizeProps, useSize } from '@/composables/size'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\n\n// Directives\nimport { Ripple } from '@/directives/ripple'\n\n// Utilities\nimport { computed } from 'vue'\nimport { EventProp, genericComponent, propsFactory } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { RippleDirectiveBinding } from '@/directives/ripple'\n\nexport type VChipSlots = {\n  default: {\n    isSelected: boolean | undefined\n    selectedClass: boolean | (string | undefined)[] | undefined\n    select: ((value: boolean) => void) | undefined\n    toggle: (() => void) | undefined\n    value: unknown\n    disabled: boolean\n  }\n  label: never\n  prepend: never\n  append: never\n  close: never\n  filter: never\n}\n\nexport const makeVChipProps = propsFactory({\n  activeClass: String,\n  appendAvatar: String,\n  appendIcon: IconValue,\n  closable: Boolean,\n  closeIcon: {\n    type: IconValue,\n    default: '$delete',\n  },\n  closeLabel: {\n    type: String,\n    default: '$vuetify.close',\n  },\n  draggable: Boolean,\n  filter: Boolean,\n  filterIcon: {\n    type: String,\n    default: '$complete',\n  },\n  label: Boolean,\n  link: {\n    type: Boolean,\n    default: undefined,\n  },\n  pill: Boolean,\n  prependAvatar: String,\n  prependIcon: IconValue,\n  ripple: {\n    type: [Boolean, Object] as PropType<RippleDirectiveBinding['value']>,\n    default: true,\n  },\n  text: String,\n  modelValue: {\n    type: Boolean,\n    default: true,\n  },\n\n  onClick: EventProp<[MouseEvent]>(),\n  onClickOnce: EventProp<[MouseEvent]>(),\n\n  ...makeBorderProps(),\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...makeElevationProps(),\n  ...makeGroupItemProps(),\n  ...makeRoundedProps(),\n  ...makeRouterProps(),\n  ...makeSizeProps(),\n  ...makeTagProps({ tag: 'span' }),\n  ...makeThemeProps(),\n  ...makeVariantProps({ variant: 'tonal' } as const),\n}, 'VChip')\n\nexport const VChip = genericComponent<VChipSlots>()({\n  name: 'VChip',\n\n  directives: { Ripple },\n\n  props: makeVChipProps(),\n\n  emits: {\n    'click:close': (e: MouseEvent) => true,\n    'update:modelValue': (value: boolean) => true,\n    'group:selected': (val: { value: boolean }) => true,\n    click: (e: MouseEvent | KeyboardEvent) => true,\n  },\n\n  setup (props, { attrs, emit, slots }) {\n    const { t } = useLocale()\n    const { borderClasses } = useBorder(props)\n    const { colorClasses, colorStyles, variantClasses } = useVariant(props)\n    const { densityClasses } = useDensity(props)\n    const { elevationClasses } = useElevation(props)\n    const { roundedClasses } = useRounded(props)\n    const { sizeClasses } = useSize(props)\n    const { themeClasses } = provideTheme(props)\n\n    const isActive = useProxiedModel(props, 'modelValue')\n    const group = useGroupItem(props, VChipGroupSymbol, false)\n    const link = useLink(props, attrs)\n    const isLink = computed(() => props.link !== false && link.isLink.value)\n    const isClickable = computed(() =>\n      !props.disabled &&\n      props.link !== false &&\n      (!!group || props.link || link.isClickable.value)\n    )\n    const closeProps = computed(() => ({\n      'aria-label': t(props.closeLabel),\n      onClick (e: MouseEvent) {\n        e.preventDefault()\n        e.stopPropagation()\n\n        isActive.value = false\n\n        emit('click:close', e)\n      },\n    }))\n\n    function onClick (e: MouseEvent) {\n      emit('click', e)\n\n      if (!isClickable.value) return\n\n      link.navigate?.(e)\n      group?.toggle()\n    }\n\n    function onKeyDown (e: KeyboardEvent) {\n      if (e.key === 'Enter' || e.key === ' ') {\n        e.preventDefault()\n        onClick(e as any as MouseEvent)\n      }\n    }\n\n    return () => {\n      const Tag = (link.isLink.value) ? 'a' : props.tag\n      const hasAppendMedia = !!(props.appendIcon || props.appendAvatar)\n      const hasAppend = !!(hasAppendMedia || slots.append)\n      const hasClose = !!(slots.close || props.closable)\n      const hasFilter = !!(slots.filter || props.filter) && group\n      const hasPrependMedia = !!(props.prependIcon || props.prependAvatar)\n      const hasPrepend = !!(hasPrependMedia || slots.prepend)\n      const hasColor = !group || group.isSelected.value\n\n      return isActive.value && (\n        <Tag\n          class={[\n            'v-chip',\n            {\n              'v-chip--disabled': props.disabled,\n              'v-chip--label': props.label,\n              'v-chip--link': isClickable.value,\n              'v-chip--filter': hasFilter,\n              'v-chip--pill': props.pill,\n            },\n            themeClasses.value,\n            borderClasses.value,\n            hasColor ? colorClasses.value : undefined,\n            densityClasses.value,\n            elevationClasses.value,\n            roundedClasses.value,\n            sizeClasses.value,\n            variantClasses.value,\n            group?.selectedClass.value,\n            props.class,\n          ]}\n          style={[\n            hasColor ? colorStyles.value : undefined,\n            props.style,\n          ]}\n          disabled={ props.disabled || undefined }\n          draggable={ props.draggable }\n          href={ link.href.value }\n          tabindex={ isClickable.value ? 0 : undefined }\n          onClick={ onClick }\n          onKeydown={ isClickable.value && !isLink.value && onKeyDown }\n          v-ripple={[isClickable.value && props.ripple, null]}\n        >\n          { genOverlays(isClickable.value, 'v-chip') }\n\n          { hasFilter && (\n            <VExpandXTransition key=\"filter\">\n              <div\n                class=\"v-chip__filter\"\n                v-show={ group.isSelected.value }\n              >\n                { !slots.filter ? (\n                  <VIcon\n                    key=\"filter-icon\"\n                    icon={ props.filterIcon }\n                  />\n                ) : (\n                  <VDefaultsProvider\n                    key=\"filter-defaults\"\n                    disabled={ !props.filterIcon }\n                    defaults={{\n                      VIcon: { icon: props.filterIcon },\n                    }}\n                    v-slots:default={ slots.filter }\n                  />\n                )}\n              </div>\n            </VExpandXTransition>\n          )}\n\n          { hasPrepend && (\n            <div key=\"prepend\" class=\"v-chip__prepend\">\n              { !slots.prepend ? (\n                <>\n                  { props.prependIcon && (\n                    <VIcon\n                      key=\"prepend-icon\"\n                      icon={ props.prependIcon }\n                      start\n                    />\n                  )}\n\n                  { props.prependAvatar && (\n                    <VAvatar\n                      key=\"prepend-avatar\"\n                      image={ props.prependAvatar }\n                      start\n                    />\n                  )}\n                </>\n              ) : (\n                <VDefaultsProvider\n                  key=\"prepend-defaults\"\n                  disabled={ !hasPrependMedia }\n                  defaults={{\n                    VAvatar: {\n                      image: props.prependAvatar,\n                      start: true,\n                    },\n                    VIcon: {\n                      icon: props.prependIcon,\n                      start: true,\n                    },\n                  }}\n                  v-slots:default={ slots.prepend }\n                />\n              )}\n            </div>\n          )}\n\n          <div class=\"v-chip__content\" data-no-activator=\"\">\n            { slots.default?.({\n              isSelected: group?.isSelected.value,\n              selectedClass: group?.selectedClass.value,\n              select: group?.select,\n              toggle: group?.toggle,\n              value: group?.value.value,\n              disabled: props.disabled,\n            }) ?? props.text }\n          </div>\n\n          { hasAppend && (\n            <div key=\"append\" class=\"v-chip__append\">\n              { !slots.append ? (\n                <>\n                  { props.appendIcon && (\n                    <VIcon\n                      key=\"append-icon\"\n                      end\n                      icon={ props.appendIcon }\n                    />\n                  )}\n\n                  { props.appendAvatar && (\n                    <VAvatar\n                      key=\"append-avatar\"\n                      end\n                      image={ props.appendAvatar }\n                    />\n                  )}\n                </>\n              ) : (\n                <VDefaultsProvider\n                  key=\"append-defaults\"\n                  disabled={ !hasAppendMedia }\n                  defaults={{\n                    VAvatar: {\n                      end: true,\n                      image: props.appendAvatar,\n                    },\n                    VIcon: {\n                      end: true,\n                      icon: props.appendIcon,\n                    },\n                  }}\n                  v-slots:default={ slots.append }\n                />\n              )}\n            </div>\n          )}\n\n          { hasClose && (\n            <button\n              key=\"close\"\n              class=\"v-chip__close\"\n              type=\"button\"\n              { ...closeProps.value }\n            >\n              { !slots.close ? (\n                <VIcon\n                  key=\"close-icon\"\n                  icon={ props.closeIcon }\n                  size=\"x-small\"\n                />\n              ) : (\n                <VDefaultsProvider\n                  key=\"close-defaults\"\n                  defaults={{\n                    VIcon: {\n                      icon: props.closeIcon,\n                      size: 'x-small',\n                    },\n                  }}\n                  v-slots:default={ slots.close }\n                />\n              )}\n            </button>\n          )}\n        </Tag>\n      )\n    }\n  },\n})\n\nexport type VChip = InstanceType<typeof VChip>\n", "// Styles\nimport './VChipGroup.sass'\n\n// Components\nimport { makeVSlideGroupProps, VSlideGroup } from '@/components/VSlideGroup/VSlideGroup'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { provideDefaults } from '@/composables/defaults'\nimport { makeGroupProps, useGroup } from '@/composables/group'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { makeVariantProps } from '@/composables/variant'\n\n// Utilities\nimport { toRef } from 'vue'\nimport { deepEqual, genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { GenericProps } from '@/util'\n\nexport const VChipGroupSymbol = Symbol.for('vuetify:v-chip-group')\n\nexport const makeVChipGroupProps = propsFactory({\n  column: Boolean,\n  filter: Boolean,\n  valueComparator: {\n    type: Function as PropType<typeof deepEqual>,\n    default: deepEqual,\n  },\n\n  ...makeVSlideGroupProps(),\n  ...makeComponentProps(),\n  ...makeGroupProps({ selectedClass: 'v-chip--selected' }),\n  ...makeTagProps(),\n  ...makeThemeProps(),\n  ...makeVariantProps({ variant: 'tonal' } as const),\n}, 'VChipGroup')\n\ntype VChipGroupSlots = {\n  default: {\n    isSelected: (id: number) => boolean\n    select: (id: number, value: boolean) => void\n    next: () => void\n    prev: () => void\n    selected: readonly number[]\n  }\n}\n\nexport const VChipGroup = genericComponent<new <T>(\n  props: {\n    modelValue?: T\n    'onUpdate:modelValue'?: (value: T) => void\n  },\n  slots: VChipGroupSlots,\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VChipGroup',\n\n  props: makeVChipGroupProps(),\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { isSelected, select, next, prev, selected } = useGroup(props, VChipGroupSymbol)\n\n    provideDefaults({\n      VChip: {\n        color: toRef(props, 'color'),\n        disabled: toRef(props, 'disabled'),\n        filter: toRef(props, 'filter'),\n        variant: toRef(props, 'variant'),\n      },\n    })\n\n    useRender(() => {\n      const slideGroupProps = VSlideGroup.filterProps(props)\n\n      return (\n        <VSlideGroup\n          { ...slideGroupProps }\n          class={[\n            'v-chip-group',\n            {\n              'v-chip-group--column': props.column,\n            },\n            themeClasses.value,\n            props.class,\n          ]}\n          style={ props.style }\n        >\n          { slots.default?.({\n            isSelected,\n            select,\n            next,\n            prev,\n            selected: selected.value,\n          })}\n        </VSlideGroup>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VChipGroup = InstanceType<typeof VChipGroup>\n", "// Styles\nimport './VSlideGroup.sass'\n\n// Components\nimport { VFadeTransition } from '@/components/transitions'\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDisplayProps, useDisplay } from '@/composables/display'\nimport { useGoTo } from '@/composables/goto'\nimport { makeGroupProps, useGroup } from '@/composables/group'\nimport { IconValue } from '@/composables/icons'\nimport { useRtl } from '@/composables/locale'\nimport { useResizeObserver } from '@/composables/resizeObserver'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { computed, shallowRef, watch } from 'vue'\nimport {\n  calculateCenteredTarget,\n  calculateUpdatedTarget,\n  getClientSize,\n  getOffsetSize,\n  getScrollPosition,\n  getScrollSize,\n} from './helpers'\nimport { focusableChildren, genericComponent, IN_BROWSER, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { InjectionKey, PropType } from 'vue'\nimport type { GoToOptions } from '@/composables/goto'\nimport type { GroupProvide } from '@/composables/group'\nimport type { GenericProps } from '@/util'\n\nexport const VSlideGroupSymbol: InjectionKey<GroupProvide> = Symbol.for('vuetify:v-slide-group')\n\ninterface SlideGroupSlot {\n  next: GroupProvide['next']\n  prev: GroupProvide['prev']\n  select: GroupProvide['select']\n  isSelected: GroupProvide['isSelected']\n}\n\ntype VSlideGroupSlots = {\n  default: SlideGroupSlot\n  prev: SlideGroupSlot\n  next: SlideGroupSlot\n}\n\nexport const makeVSlideGroupProps = propsFactory({\n  centerActive: Boolean,\n  direction: {\n    type: String as PropType<'horizontal' | 'vertical'>,\n    default: 'horizontal',\n  },\n  symbol: {\n    type: null,\n    default: VSlideGroupSymbol,\n  },\n  nextIcon: {\n    type: IconValue,\n    default: '$next',\n  },\n  prevIcon: {\n    type: IconValue,\n    default: '$prev',\n  },\n  showArrows: {\n    type: [Boolean, String],\n    validator: (v: any) => (\n      typeof v === 'boolean' || [\n        'always',\n        'desktop',\n        'mobile',\n      ].includes(v)\n    ),\n  },\n\n  ...makeComponentProps(),\n  ...makeDisplayProps({ mobile: null }),\n  ...makeTagProps(),\n  ...makeGroupProps({\n    selectedClass: 'v-slide-group-item--active',\n  }),\n}, 'VSlideGroup')\n\nexport const VSlideGroup = genericComponent<new <T>(\n  props: {\n    modelValue?: T\n    'onUpdate:modelValue'?: (value: T) => void\n  },\n  slots: VSlideGroupSlots,\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VSlideGroup',\n\n  props: makeVSlideGroupProps(),\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const { isRtl } = useRtl()\n    const { displayClasses, mobile } = useDisplay(props)\n    const group = useGroup(props, props.symbol)\n    const isOverflowing = shallowRef(false)\n    const scrollOffset = shallowRef(0)\n    const containerSize = shallowRef(0)\n    const contentSize = shallowRef(0)\n    const isHorizontal = computed(() => props.direction === 'horizontal')\n\n    const { resizeRef: containerRef, contentRect: containerRect } = useResizeObserver()\n    const { resizeRef: contentRef, contentRect } = useResizeObserver()\n\n    const goTo = useGoTo()\n    const goToOptions = computed<Partial<GoToOptions>>(() => {\n      return {\n        container: containerRef.el,\n        duration: 200,\n        easing: 'easeOutQuart',\n      }\n    })\n\n    const firstSelectedIndex = computed(() => {\n      if (!group.selected.value.length) return -1\n\n      return group.items.value.findIndex(item => item.id === group.selected.value[0])\n    })\n\n    const lastSelectedIndex = computed(() => {\n      if (!group.selected.value.length) return -1\n\n      return group.items.value.findIndex(item => item.id === group.selected.value[group.selected.value.length - 1])\n    })\n\n    if (IN_BROWSER) {\n      let frame = -1\n      watch(() => [group.selected.value, containerRect.value, contentRect.value, isHorizontal.value], () => {\n        cancelAnimationFrame(frame)\n        frame = requestAnimationFrame(() => {\n          if (containerRect.value && contentRect.value) {\n            const sizeProperty = isHorizontal.value ? 'width' : 'height'\n\n            containerSize.value = containerRect.value[sizeProperty]\n            contentSize.value = contentRect.value[sizeProperty]\n\n            isOverflowing.value = containerSize.value + 1 < contentSize.value\n          }\n\n          if (firstSelectedIndex.value >= 0 && contentRef.el) {\n            // TODO: Is this too naive? Should we store element references in group composable?\n            const selectedElement = contentRef.el.children[lastSelectedIndex.value] as HTMLElement\n\n            scrollToChildren(selectedElement, props.centerActive)\n          }\n        })\n      })\n    }\n\n    const isFocused = shallowRef(false)\n\n    function scrollToChildren (children: HTMLElement, center?: boolean) {\n      let target = 0\n\n      if (center) {\n        target = calculateCenteredTarget({\n          containerElement: containerRef.el!,\n          isHorizontal: isHorizontal.value,\n          selectedElement: children,\n        })\n      } else {\n        target = calculateUpdatedTarget({\n          containerElement: containerRef.el!,\n          isHorizontal: isHorizontal.value,\n          isRtl: isRtl.value,\n          selectedElement: children,\n        })\n      }\n\n      scrollToPosition(target)\n    }\n\n    function scrollToPosition (newPosition: number) {\n      if (!IN_BROWSER || !containerRef.el) return\n\n      const offsetSize = getOffsetSize(isHorizontal.value, containerRef.el)\n      const scrollPosition = getScrollPosition(isHorizontal.value, isRtl.value, containerRef.el)\n      const scrollSize = getScrollSize(isHorizontal.value, containerRef.el)\n\n      if (\n        scrollSize <= offsetSize ||\n        // Prevent scrolling by only a couple of pixels, which doesn't look smooth\n        Math.abs(newPosition - scrollPosition) < 16\n      ) return\n\n      if (isHorizontal.value && isRtl.value && containerRef.el) {\n        const { scrollWidth, offsetWidth: containerWidth } = containerRef.el!\n\n        newPosition = (scrollWidth - containerWidth) - newPosition\n      }\n\n      if (isHorizontal.value) {\n        goTo.horizontal(newPosition, goToOptions.value)\n      } else {\n        goTo(newPosition, goToOptions.value)\n      }\n    }\n\n    function onScroll (e: Event) {\n      const { scrollTop, scrollLeft } = e.target as HTMLElement\n\n      scrollOffset.value = isHorizontal.value ? scrollLeft : scrollTop\n    }\n\n    function onFocusin (e: FocusEvent) {\n      isFocused.value = true\n\n      if (!isOverflowing.value || !contentRef.el) return\n\n      // Focused element is likely to be the root of an item, so a\n      // breadth-first search will probably find it in the first iteration\n      for (const el of e.composedPath()) {\n        for (const item of contentRef.el.children) {\n          if (item === el) {\n            scrollToChildren(item as HTMLElement)\n            return\n          }\n        }\n      }\n    }\n\n    function onFocusout (e: FocusEvent) {\n      isFocused.value = false\n    }\n\n    // Affix clicks produce onFocus that we have to ignore to avoid extra scrollToChildren\n    let ignoreFocusEvent = false\n    function onFocus (e: FocusEvent) {\n      if (\n        !ignoreFocusEvent &&\n        !isFocused.value &&\n        !(e.relatedTarget && contentRef.el?.contains(e.relatedTarget as Node))\n      ) focus()\n\n      ignoreFocusEvent = false\n    }\n\n    function onFocusAffixes () {\n      ignoreFocusEvent = true\n    }\n\n    function onKeydown (e: KeyboardEvent) {\n      if (!contentRef.el) return\n\n      function toFocus (location: Parameters<typeof focus>[0]) {\n        e.preventDefault()\n        focus(location)\n      }\n\n      if (isHorizontal.value) {\n        if (e.key === 'ArrowRight') {\n          toFocus(isRtl.value ? 'prev' : 'next')\n        } else if (e.key === 'ArrowLeft') {\n          toFocus(isRtl.value ? 'next' : 'prev')\n        }\n      } else {\n        if (e.key === 'ArrowDown') {\n          toFocus('next')\n        } else if (e.key === 'ArrowUp') {\n          toFocus('prev')\n        }\n      }\n\n      if (e.key === 'Home') {\n        toFocus('first')\n      } else if (e.key === 'End') {\n        toFocus('last')\n      }\n    }\n\n    function focus (location?: 'next' | 'prev' | 'first' | 'last') {\n      if (!contentRef.el) return\n\n      let el: HTMLElement | undefined\n\n      if (!location) {\n        const focusable = focusableChildren(contentRef.el)\n        el = focusable[0]\n      } else if (location === 'next') {\n        el = contentRef.el.querySelector(':focus')?.nextElementSibling as HTMLElement | undefined\n\n        if (!el) return focus('first')\n      } else if (location === 'prev') {\n        el = contentRef.el.querySelector(':focus')?.previousElementSibling as HTMLElement | undefined\n\n        if (!el) return focus('last')\n      } else if (location === 'first') {\n        el = (contentRef.el.firstElementChild as HTMLElement)\n      } else if (location === 'last') {\n        el = (contentRef.el.lastElementChild as HTMLElement)\n      }\n\n      if (el) {\n        el.focus({ preventScroll: true })\n      }\n    }\n\n    function scrollTo (location: 'prev' | 'next') {\n      const direction = isHorizontal.value && isRtl.value ? -1 : 1\n\n      const offsetStep = (location === 'prev' ? -direction : direction) * containerSize.value\n\n      let newPosition = scrollOffset.value + offsetStep\n\n      // TODO: improve it\n      if (isHorizontal.value && isRtl.value && containerRef.el) {\n        const { scrollWidth, offsetWidth: containerWidth } = containerRef.el!\n\n        newPosition += scrollWidth - containerWidth\n      }\n\n      scrollToPosition(newPosition)\n    }\n\n    const slotProps = computed(() => ({\n      next: group.next,\n      prev: group.prev,\n      select: group.select,\n      isSelected: group.isSelected,\n    }))\n\n    const hasAffixes = computed(() => {\n      switch (props.showArrows) {\n        // Always show arrows on desktop & mobile\n        case 'always': return true\n\n        // Always show arrows on desktop\n        case 'desktop': return !mobile.value\n\n        // Show arrows on mobile when overflowing.\n        // This matches the default 2.2 behavior\n        case true: return isOverflowing.value || Math.abs(scrollOffset.value) > 0\n\n        // Always show on mobile\n        case 'mobile': return (\n          mobile.value ||\n          (isOverflowing.value || Math.abs(scrollOffset.value) > 0)\n        )\n\n        // https://material.io/components/tabs#scrollable-tabs\n        // Always show arrows when\n        // overflowed on desktop\n        default: return (\n          !mobile.value &&\n          (isOverflowing.value || Math.abs(scrollOffset.value) > 0)\n        )\n      }\n    })\n\n    const hasPrev = computed(() => {\n      // 1 pixel in reserve, may be lost after rounding\n      return Math.abs(scrollOffset.value) > 1\n    })\n\n    const hasNext = computed(() => {\n      if (!containerRef.value) return false\n\n      const scrollSize = getScrollSize(isHorizontal.value, containerRef.el)\n      const clientSize = getClientSize(isHorizontal.value, containerRef.el)\n\n      const scrollSizeMax = scrollSize - clientSize\n\n      // 1 pixel in reserve, may be lost after rounding\n      return scrollSizeMax - Math.abs(scrollOffset.value) > 1\n    })\n\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-slide-group',\n          {\n            'v-slide-group--vertical': !isHorizontal.value,\n            'v-slide-group--has-affixes': hasAffixes.value,\n            'v-slide-group--is-overflowing': isOverflowing.value,\n          },\n          displayClasses.value,\n          props.class,\n        ]}\n        style={ props.style }\n        tabindex={ (isFocused.value || group.selected.value.length) ? -1 : 0 }\n        onFocus={ onFocus }\n      >\n        { hasAffixes.value && (\n          <div\n            key=\"prev\"\n            class={[\n              'v-slide-group__prev',\n              { 'v-slide-group__prev--disabled': !hasPrev.value },\n            ]}\n            onMousedown={ onFocusAffixes }\n            onClick={ () => hasPrev.value && scrollTo('prev') }\n          >\n            { slots.prev?.(slotProps.value) ?? (\n              <VFadeTransition>\n                <VIcon icon={ isRtl.value ? props.nextIcon : props.prevIcon }></VIcon>\n              </VFadeTransition>\n            )}\n          </div>\n        )}\n\n        <div\n          key=\"container\"\n          ref={ containerRef }\n          class=\"v-slide-group__container\"\n          onScroll={ onScroll }\n        >\n          <div\n            ref={ contentRef }\n            class=\"v-slide-group__content\"\n            onFocusin={ onFocusin }\n            onFocusout={ onFocusout }\n            onKeydown={ onKeydown }\n          >\n            { slots.default?.(slotProps.value) }\n          </div>\n        </div>\n\n        { hasAffixes.value && (\n          <div\n            key=\"next\"\n            class={[\n              'v-slide-group__next',\n              { 'v-slide-group__next--disabled': !hasNext.value },\n            ]}\n            onMousedown={ onFocusAffixes }\n            onClick={ () => hasNext.value && scrollTo('next') }\n          >\n            { slots.next?.(slotProps.value) ?? (\n              <VFadeTransition>\n                <VIcon icon={ isRtl.value ? props.prevIcon : props.nextIcon }></VIcon>\n              </VFadeTransition>\n            )}\n          </div>\n        )}\n      </props.tag>\n    ))\n\n    return {\n      selected: group.selected,\n      scrollTo,\n      scrollOffset,\n      focus,\n      hasPrev,\n      hasNext,\n    }\n  },\n})\n\nexport type VSlideGroup = InstanceType<typeof VSlideGroup>\n", "export function calculateUpdatedTarget ({\n  selectedElement,\n  containerElement,\n  isRtl,\n  isHorizontal,\n}: {\n  selectedElement: HTMLElement\n  containerElement: HTMLElement\n  isRtl: boolean\n  isHorizontal: boolean\n}): number {\n  const containerSize = getOffsetSize(isHorizontal, containerElement)\n  const scrollPosition = getScrollPosition(isHorizontal, isRtl, containerElement)\n\n  const childrenSize = getOffsetSize(isHorizontal, selectedElement)\n  const childrenStartPosition = getOffsetPosition(isHorizontal, selectedElement)\n\n  const additionalOffset = childrenSize * 0.4\n\n  if (scrollPosition > childrenStartPosition) {\n    return childrenStartPosition - additionalOffset\n  } else if (scrollPosition + containerSize < childrenStartPosition + childrenSize) {\n    return childrenStartPosition - containerSize + childrenSize + additionalOffset\n  }\n\n  return scrollPosition\n}\n\nexport function calculateCenteredTarget ({\n  selectedElement,\n  containerElement,\n  isHorizontal,\n}: {\n  selectedElement: HTMLElement\n  containerElement: HTMLElement\n  isHorizontal: boolean\n}): number {\n  const containerOffsetSize = getOffsetSize(isHorizontal, containerElement)\n  const childrenOffsetPosition = getOffsetPosition(isHorizontal, selectedElement)\n  const childrenOffsetSize = getOffsetSize(isHorizontal, selectedElement)\n\n  return childrenOffsetPosition - (containerOffsetSize / 2) + (childrenOffsetSize / 2)\n}\n\nexport function getScrollSize (isHorizontal: boolean, element?: HTMLElement) {\n  const key = isHorizontal ? 'scrollWidth' : 'scrollHeight'\n  return element?.[key] || 0\n}\n\nexport function getClientSize (isHorizontal: boolean, element?: HTMLElement) {\n  const key = isHorizontal ? 'clientWidth' : 'clientHeight'\n  return element?.[key] || 0\n}\n\nexport function getScrollPosition (isHorizontal: boolean, rtl: boolean, element?: HTMLElement) {\n  if (!element) {\n    return 0\n  }\n\n  const {\n    scrollLeft,\n    offsetWidth,\n    scrollWidth,\n  } = element\n\n  if (isHorizontal) {\n    return rtl\n      ? scrollWidth - offsetWidth + scrollLeft\n      : scrollLeft\n  }\n\n  return element.scrollTop\n}\n\nexport function getOffsetSize (isHorizontal: boolean, element?: HTMLElement) {\n  const key = isHorizontal ? 'offsetWidth' : 'offsetHeight'\n  return element?.[key] || 0\n}\n\nexport function getOffsetPosition (isHorizontal: boolean, element?: HTMLElement) {\n  const key = isHorizontal ? 'offsetLeft' : 'offsetTop'\n  return element?.[key] || 0\n}\n", "// Styles\nimport './VList.sass'\n\n// Components\nimport { VListChildren } from './VListChildren'\n\n// Composables\nimport { createList } from './list'\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { useBackgroundColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { provideDefaults } from '@/composables/defaults'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeItemsProps } from '@/composables/list-items'\nimport { makeNestedProps, useNested } from '@/composables/nested/nested'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { makeVariantProps } from '@/composables/variant'\n\n// Utilities\nimport { computed, ref, shallowRef, toRef } from 'vue'\nimport { EventProp, focusChild, genericComponent, getPropertyFromItem, omit, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { VListChildrenSlots } from './VListChildren'\nimport type { ItemProps, ListItem } from '@/composables/list-items'\nimport type { GenericProps, SelectItemKey } from '@/util'\n\nexport interface InternalListItem<T = any> extends ListItem<T> {\n  type?: 'item' | 'subheader' | 'divider'\n}\n\nfunction isPrimitive (value: unknown): value is string | number | boolean {\n  return typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean'\n}\n\nfunction transformItem (props: ItemProps & { itemType?: string }, item: any): InternalListItem {\n  const type = getPropertyFromItem(item, props.itemType, 'item')\n  const title = isPrimitive(item) ? item : getPropertyFromItem(item, props.itemTitle)\n  const value = getPropertyFromItem(item, props.itemValue, undefined)\n  const children = getPropertyFromItem(item, props.itemChildren)\n  const itemProps = props.itemProps === true\n    ? omit(item, ['children'])\n    : getPropertyFromItem(item, props.itemProps)\n\n  const _props = {\n    title,\n    value,\n    ...itemProps,\n  }\n\n  return {\n    type,\n    title: _props.title,\n    value: _props.value,\n    props: _props,\n    children: type === 'item' && children ? transformItems(props, children) : undefined,\n    raw: item,\n  }\n}\n\nfunction transformItems (props: ItemProps & { itemType?: string }, items: (string | object)[]) {\n  const array: InternalListItem[] = []\n\n  for (const item of items) {\n    array.push(transformItem(props, item))\n  }\n\n  return array\n}\n\nexport function useListItems (props: ItemProps & { itemType?: string }) {\n  const items = computed(() => transformItems(props, props.items))\n\n  return { items }\n}\n\nexport const makeVListProps = propsFactory({\n  baseColor: String,\n  /* @deprecated */\n  activeColor: String,\n  activeClass: String,\n  bgColor: String,\n  disabled: Boolean,\n  expandIcon: String,\n  collapseIcon: String,\n  lines: {\n    type: [Boolean, String] as PropType<'one' | 'two' | 'three' | false>,\n    default: 'one',\n  },\n  slim: Boolean,\n  nav: Boolean,\n\n  'onClick:open': EventProp<[{ id: unknown, value: boolean, path: unknown[] }]>(),\n  'onClick:select': EventProp<[{ id: unknown, value: boolean, path: unknown[] }]>(),\n  'onUpdate:opened': EventProp<[]>(),\n  ...makeNestedProps({\n    selectStrategy: 'single-leaf' as const,\n    openStrategy: 'list' as const,\n  }),\n  ...makeBorderProps(),\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...makeDimensionProps(),\n  ...makeElevationProps(),\n  itemType: {\n    type: String,\n    default: 'type',\n  },\n  ...makeItemsProps(),\n  ...makeRoundedProps(),\n  ...makeTagProps(),\n  ...makeThemeProps(),\n  ...makeVariantProps({ variant: 'text' } as const),\n}, 'VList')\n\ntype ItemType<T> = T extends readonly (infer U)[] ? U : never\n\nexport const VList = genericComponent<new <\n  T extends readonly any[],\n  S = unknown,\n  O = unknown\n>(\n  props: {\n    items?: T\n    itemTitle?: SelectItemKey<ItemType<T>>\n    itemValue?: SelectItemKey<ItemType<T>>\n    itemChildren?: SelectItemKey<ItemType<T>>\n    itemProps?: SelectItemKey<ItemType<T>>\n    selected?: S\n    'onUpdate:selected'?: (value: S) => void\n    'onClick:open'?: (value: { id: unknown, value: boolean, path: unknown[] }) => void\n    'onClick:select'?: (value: { id: unknown, value: boolean, path: unknown[] }) => void\n    opened?: O\n    'onUpdate:opened'?: (value: O) => void\n  },\n  slots: VListChildrenSlots<ItemType<T>>\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VList',\n\n  props: makeVListProps(),\n\n  emits: {\n    'update:selected': (value: unknown) => true,\n    'update:activated': (value: unknown) => true,\n    'update:opened': (value: unknown) => true,\n    'click:open': (value: { id: unknown, value: boolean, path: unknown[] }) => true,\n    'click:activate': (value: { id: unknown, value: boolean, path: unknown[] }) => true,\n    'click:select': (value: { id: unknown, value: boolean, path: unknown[] }) => true,\n  },\n\n  setup (props, { slots }) {\n    const { items } = useListItems(props)\n    const { themeClasses } = provideTheme(props)\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'bgColor'))\n    const { borderClasses } = useBorder(props)\n    const { densityClasses } = useDensity(props)\n    const { dimensionStyles } = useDimension(props)\n    const { elevationClasses } = useElevation(props)\n    const { roundedClasses } = useRounded(props)\n    const { children, open, parents, select } = useNested(props)\n    const lineClasses = computed(() => props.lines ? `v-list--${props.lines}-line` : undefined)\n    const activeColor = toRef(props, 'activeColor')\n    const baseColor = toRef(props, 'baseColor')\n    const color = toRef(props, 'color')\n\n    createList()\n\n    provideDefaults({\n      VListGroup: {\n        activeColor,\n        baseColor,\n        color,\n        expandIcon: toRef(props, 'expandIcon'),\n        collapseIcon: toRef(props, 'collapseIcon'),\n      },\n      VListItem: {\n        activeClass: toRef(props, 'activeClass'),\n        activeColor,\n        baseColor,\n        color,\n        density: toRef(props, 'density'),\n        disabled: toRef(props, 'disabled'),\n        lines: toRef(props, 'lines'),\n        nav: toRef(props, 'nav'),\n        slim: toRef(props, 'slim'),\n        variant: toRef(props, 'variant'),\n      },\n    })\n\n    const isFocused = shallowRef(false)\n    const contentRef = ref<HTMLElement>()\n    function onFocusin (e: FocusEvent) {\n      isFocused.value = true\n    }\n\n    function onFocusout (e: FocusEvent) {\n      isFocused.value = false\n    }\n\n    function onFocus (e: FocusEvent) {\n      if (\n        !isFocused.value &&\n        !(e.relatedTarget && contentRef.value?.contains(e.relatedTarget as Node))\n      ) focus()\n    }\n\n    function onKeydown (e: KeyboardEvent) {\n      const target = e.target as HTMLElement\n\n      if (!contentRef.value || ['INPUT', 'TEXTAREA'].includes(target.tagName)) return\n\n      if (e.key === 'ArrowDown') {\n        focus('next')\n      } else if (e.key === 'ArrowUp') {\n        focus('prev')\n      } else if (e.key === 'Home') {\n        focus('first')\n      } else if (e.key === 'End') {\n        focus('last')\n      } else {\n        return\n      }\n\n      e.preventDefault()\n    }\n\n    function onMousedown (e: MouseEvent) {\n      isFocused.value = true\n    }\n\n    function focus (location?: 'next' | 'prev' | 'first' | 'last') {\n      if (contentRef.value) {\n        return focusChild(contentRef.value, location)\n      }\n    }\n\n    useRender(() => {\n      return (\n        <props.tag\n          ref={ contentRef }\n          class={[\n            'v-list',\n            {\n              'v-list--disabled': props.disabled,\n              'v-list--nav': props.nav,\n              'v-list--slim': props.slim,\n            },\n            themeClasses.value,\n            backgroundColorClasses.value,\n            borderClasses.value,\n            densityClasses.value,\n            elevationClasses.value,\n            lineClasses.value,\n            roundedClasses.value,\n            props.class,\n          ]}\n          style={[\n            backgroundColorStyles.value,\n            dimensionStyles.value,\n            props.style,\n          ]}\n          tabindex={ (props.disabled || isFocused.value) ? -1 : 0 }\n          role=\"listbox\"\n          aria-activedescendant={ undefined }\n          onFocusin={ onFocusin }\n          onFocusout={ onFocusout }\n          onFocus={ onFocus }\n          onKeydown={ onKeydown }\n          onMousedown={ onMousedown }\n        >\n          <VListChildren\n            items={ items.value }\n            returnObject={ props.returnObject }\n            v-slots={ slots }\n          />\n        </props.tag>\n      )\n    })\n\n    return {\n      open,\n      select,\n      focus,\n      children,\n      parents,\n    }\n  },\n})\n\nexport type VList = InstanceType<typeof VList>\n", "// Utilities\nimport { computed, inject, provide, shallowRef } from 'vue'\n\n// Types\nimport type { InjectionKey, Ref } from 'vue'\n\n// Depth\nexport const DepthKey: InjectionKey<Ref<number>> = Symbol.for('vuetify:depth')\n\nexport function useDepth (hasPrepend?: Ref<boolean>) {\n  const parent = inject(DepthKey, shallowRef(-1))\n\n  const depth = computed(() => parent.value + 1 + (hasPrepend?.value ? 1 : 0))\n\n  provide(DepthKey, depth)\n\n  return depth\n}\n\n// List\nexport const ListKey: InjectionKey<{\n  hasPrepend: Ref<boolean>\n  updateHasPrepend: (value: boolean) => void\n}> = Symbol.for('vuetify:list')\n\nexport function createList () {\n  const parent = inject(ListKey, { hasPrepend: shallowRef(false), updateHasPrepend: () => null })\n\n  const data = {\n    hasPrepend: shallowRef(false),\n    updateHasPrepend: (value: boolean) => {\n      if (value) data.hasPrepend.value = value\n    },\n  }\n\n  provide(ListKey, data)\n\n  return parent\n}\n\nexport function useList () {\n  return inject(ListKey, null)\n}\n", "/* eslint-disable sonarjs/no-identical-functions */\n// Utilities\nimport { toRaw } from 'vue'\nimport { wrapInArray } from '@/util'\n\nexport type ActiveStrategyFn = (data: {\n  id: unknown\n  value: boolean\n  activated: Set<unknown>\n  children: Map<unknown, unknown[]>\n  parents: Map<unknown, unknown>\n  event?: Event\n}) => Set<unknown>\n\nexport type ActiveStrategyTransformInFn = (\n  v: unknown | undefined,\n  children: Map<unknown, unknown[]>,\n  parents: Map<unknown, unknown>,\n) => Set<unknown>\n\nexport type ActiveStrategyTransformOutFn = (\n  v: Set<unknown>,\n  children: Map<unknown, unknown[]>,\n  parents: Map<unknown, unknown>,\n) => unknown\n\nexport type ActiveStrategy = {\n  activate: ActiveStrategyFn\n  in: ActiveStrategyTransformInFn\n  out: ActiveStrategyTransformOutFn\n}\n\nexport const independentActiveStrategy = (mandatory?: boolean): ActiveStrategy => {\n  const strategy: ActiveStrategy = {\n    activate: ({ id, value, activated }) => {\n      id = toRaw(id)\n\n      // When mandatory and we're trying to deselect when id\n      // is the only currently selected item then do nothing\n      if (mandatory && !value && activated.size === 1 && activated.has(id)) return activated\n\n      if (value) {\n        activated.add(id)\n      } else {\n        activated.delete(id)\n      }\n\n      return activated\n    },\n    in: (v, children, parents) => {\n      let set = new Set()\n\n      if (v != null) {\n        for (const id of wrapInArray(v)) {\n          set = strategy.activate({\n            id,\n            value: true,\n            activated: new Set(set),\n            children,\n            parents,\n          })\n        }\n      }\n\n      return set\n    },\n    out: v => {\n      return Array.from(v)\n    },\n  }\n\n  return strategy\n}\n\nexport const independentSingleActiveStrategy = (mandatory?: boolean): ActiveStrategy => {\n  const parentStrategy = independentActiveStrategy(mandatory)\n\n  const strategy: ActiveStrategy = {\n    activate: ({ activated, id, ...rest }) => {\n      id = toRaw(id)\n      const singleSelected = activated.has(id) ? new Set([id]) : new Set()\n      return parentStrategy.activate({ ...rest, id, activated: singleSelected })\n    },\n    in: (v, children, parents) => {\n      let set = new Set()\n\n      if (v != null) {\n        const arr = wrapInArray(v)\n        if (arr.length) {\n          set = parentStrategy.in(arr.slice(0, 1), children, parents)\n        }\n      }\n\n      return set\n    },\n    out: (v, children, parents) => {\n      return parentStrategy.out(v, children, parents)\n    },\n  }\n\n  return strategy\n}\n\nexport const leafActiveStrategy = (mandatory?: boolean): ActiveStrategy => {\n  const parentStrategy = independentActiveStrategy(mandatory)\n\n  const strategy: ActiveStrategy = {\n    activate: ({ id, activated, children, ...rest }) => {\n      id = toRaw(id)\n      if (children.has(id)) return activated\n\n      return parentStrategy.activate({ id, activated, children, ...rest })\n    },\n    in: parentStrategy.in,\n    out: parentStrategy.out,\n  }\n\n  return strategy\n}\n\nexport const leafSingleActiveStrategy = (mandatory?: boolean): ActiveStrategy => {\n  const parentStrategy = independentSingleActiveStrategy(mandatory)\n\n  const strategy: ActiveStrategy = {\n    activate: ({ id, activated, children, ...rest }) => {\n      id = toRaw(id)\n      if (children.has(id)) return activated\n\n      return parentStrategy.activate({ id, activated, children, ...rest })\n    },\n    in: parentStrategy.in,\n    out: parentStrategy.out,\n  }\n\n  return strategy\n}\n", "// Utilities\nimport { toRaw } from 'vue'\n\nexport type OpenStrategyFn = (data: {\n  id: unknown\n  value: boolean\n  opened: Set<unknown>\n  children: Map<unknown, unknown[]>\n  parents: Map<unknown, unknown>\n  event?: Event\n}) => Set<unknown>\n\nexport type OpenSelectStrategyFn = (data: {\n  id: unknown\n  value: boolean\n  opened: Set<unknown>\n  selected: Map<unknown, 'on' | 'off' | 'indeterminate'>\n  children: Map<unknown, unknown[]>\n  parents: Map<unknown, unknown>\n  event?: Event\n}) => Set<unknown> | null\n\nexport type OpenStrategy = {\n  open: OpenStrategyFn\n  select: OpenSelectStrategyFn\n}\n\nexport const singleOpenStrategy: OpenStrategy = {\n  open: ({ id, value, opened, parents }) => {\n    if (value) {\n      const newOpened = new Set<unknown>()\n      newOpened.add(id)\n\n      let parent = parents.get(id)\n\n      while (parent != null) {\n        newOpened.add(parent)\n        parent = parents.get(parent)\n      }\n\n      return newOpened\n    } else {\n      opened.delete(id)\n      return opened\n    }\n  },\n  select: () => null,\n}\n\nexport const multipleOpenStrategy: OpenStrategy = {\n  open: ({ id, value, opened, parents }) => {\n    if (value) {\n      let parent = toRaw(parents.get(id))\n      opened.add(id)\n\n      while (parent != null && parent !== id) {\n        opened.add(parent)\n        parent = toRaw(parents.get(parent))\n      }\n\n      return opened\n    } else {\n      opened.delete(id)\n    }\n    return opened\n  },\n  select: () => null,\n}\n\nexport const listOpenStrategy: OpenStrategy = {\n  open: multipleOpenStrategy.open,\n  select: ({ id, value, opened, parents }) => {\n    if (!value) return opened\n\n    const path: unknown[] = []\n\n    let parent = parents.get(id)\n\n    while (parent != null) {\n      path.push(parent)\n      parent = parents.get(parent)\n    }\n\n    return new Set(path)\n  },\n}\n", "/* eslint-disable sonarjs/no-identical-functions */\n// Utilities\nimport { toRaw } from 'vue'\n\nexport type SelectStrategyFn = (data: {\n  id: unknown\n  value: boolean\n  selected: Map<unknown, 'on' | 'off' | 'indeterminate'>\n  children: Map<unknown, unknown[]>\n  parents: Map<unknown, unknown>\n  event?: Event\n}) => Map<unknown, 'on' | 'off' | 'indeterminate'>\n\nexport type SelectStrategyTransformInFn = (\n  v: readonly unknown[] | undefined,\n  children: Map<unknown, unknown[]>,\n  parents: Map<unknown, unknown>,\n) => Map<unknown, 'on' | 'off' | 'indeterminate'>\n\nexport type SelectStrategyTransformOutFn = (\n  v: Map<unknown, 'on' | 'off' | 'indeterminate'>,\n  children: Map<unknown, unknown[]>,\n  parents: Map<unknown, unknown>,\n) => unknown[]\n\nexport type SelectStrategy = {\n  select: SelectStrategyFn\n  in: SelectStrategyTransformInFn\n  out: SelectStrategyTransformOutFn\n}\n\nexport const independentSelectStrategy = (mandatory?: boolean): SelectStrategy => {\n  const strategy: SelectStrategy = {\n    select: ({ id, value, selected }) => {\n      id = toRaw(id)\n\n      // When mandatory and we're trying to deselect when id\n      // is the only currently selected item then do nothing\n      if (mandatory && !value) {\n        const on = Array.from(selected.entries())\n          .reduce((arr, [key, value]) => {\n            if (value === 'on') arr.push(key)\n            return arr\n          }, [] as unknown[])\n        if (on.length === 1 && on[0] === id) return selected\n      }\n\n      selected.set(id, value ? 'on' : 'off')\n\n      return selected\n    },\n    in: (v, children, parents) => {\n      let map = new Map()\n\n      for (const id of (v || [])) {\n        map = strategy.select({\n          id,\n          value: true,\n          selected: new Map(map),\n          children,\n          parents,\n        })\n      }\n\n      return map\n    },\n    out: v => {\n      const arr = []\n\n      for (const [key, value] of v.entries()) {\n        if (value === 'on') arr.push(key)\n      }\n\n      return arr\n    },\n  }\n\n  return strategy\n}\n\nexport const independentSingleSelectStrategy = (mandatory?: boolean): SelectStrategy => {\n  const parentStrategy = independentSelectStrategy(mandatory)\n\n  const strategy: SelectStrategy = {\n    select: ({ selected, id, ...rest }) => {\n      id = toRaw(id)\n      const singleSelected = selected.has(id) ? new Map([[id, selected.get(id)!]]) : new Map()\n      return parentStrategy.select({ ...rest, id, selected: singleSelected })\n    },\n    in: (v, children, parents) => {\n      let map = new Map()\n\n      if (v?.length) {\n        map = parentStrategy.in(v.slice(0, 1), children, parents)\n      }\n\n      return map\n    },\n    out: (v, children, parents) => {\n      return parentStrategy.out(v, children, parents)\n    },\n  }\n\n  return strategy\n}\n\nexport const leafSelectStrategy = (mandatory?: boolean): SelectStrategy => {\n  const parentStrategy = independentSelectStrategy(mandatory)\n\n  const strategy: SelectStrategy = {\n    select: ({ id, selected, children, ...rest }) => {\n      id = toRaw(id)\n      if (children.has(id)) return selected\n\n      return parentStrategy.select({ id, selected, children, ...rest })\n    },\n    in: parentStrategy.in,\n    out: parentStrategy.out,\n  }\n\n  return strategy\n}\n\nexport const leafSingleSelectStrategy = (mandatory?: boolean): SelectStrategy => {\n  const parentStrategy = independentSingleSelectStrategy(mandatory)\n\n  const strategy: SelectStrategy = {\n    select: ({ id, selected, children, ...rest }) => {\n      id = toRaw(id)\n      if (children.has(id)) return selected\n\n      return parentStrategy.select({ id, selected, children, ...rest })\n    },\n    in: parentStrategy.in,\n    out: parentStrategy.out,\n  }\n\n  return strategy\n}\n\nexport const classicSelectStrategy = (mandatory?: boolean): SelectStrategy => {\n  const strategy: SelectStrategy = {\n    select: ({ id, value, selected, children, parents }) => {\n      id = toRaw(id)\n      const original = new Map(selected)\n\n      const items = [id]\n\n      while (items.length) {\n        const item = items.shift()!\n\n        selected.set(toRaw(item), value ? 'on' : 'off')\n\n        if (children.has(item)) {\n          items.push(...children.get(item)!)\n        }\n      }\n\n      let parent = toRaw(parents.get(id))\n\n      while (parent) {\n        const childrenIds = children.get(parent)!\n        const everySelected = childrenIds.every(cid => selected.get(toRaw(cid)) === 'on')\n        const noneSelected = childrenIds.every(cid => !selected.has(toRaw(cid)) || selected.get(toRaw(cid)) === 'off')\n\n        selected.set(parent, everySelected ? 'on' : noneSelected ? 'off' : 'indeterminate')\n\n        parent = toRaw(parents.get(parent))\n      }\n\n      // If mandatory and planned deselect results in no selected\n      // items then we can't do it, so return original state\n      if (mandatory && !value) {\n        const on = Array.from(selected.entries())\n          .reduce((arr, [key, value]) => {\n            if (value === 'on') arr.push(key)\n            return arr\n          }, [] as unknown[])\n        if (on.length === 0) return original\n      }\n\n      return selected\n    },\n    in: (v, children, parents) => {\n      let map = new Map()\n\n      for (const id of (v || [])) {\n        map = strategy.select({\n          id,\n          value: true,\n          selected: new Map(map),\n          children,\n          parents,\n        })\n      }\n\n      return map\n    },\n    out: (v, children) => {\n      const arr = []\n\n      for (const [key, value] of v.entries()) {\n        if (value === 'on' && !children.has(key)) arr.push(key)\n      }\n\n      return arr\n    },\n  }\n\n  return strategy\n}\n", "// Composables\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed, inject, onBeforeUnmount, provide, ref, shallowRef, toRaw, toRef } from 'vue'\nimport {\n  independentActiveStrategy,\n  independentSingleActiveStrategy,\n  leafActiveStrategy,\n  leafSingleActiveStrategy,\n} from './activeStrategies'\nimport { listOpenStrategy, multipleOpenStrategy, singleOpenStrategy } from './openStrategies'\nimport {\n  classicSelectStrategy,\n  independentSelectStrategy,\n  independentSingleSelectStrategy,\n  leafSelectStrategy,\n  leafSingleSelectStrategy,\n} from './selectStrategies'\nimport { getCurrentInstance, getUid, propsFactory } from '@/util'\n\n// Types\nimport type { InjectionKey, PropType, Ref } from 'vue'\nimport type { ActiveStrategy } from './activeStrategies'\nimport type { OpenStrategy } from './openStrategies'\nimport type { SelectStrategy } from './selectStrategies'\nimport type { EventProp } from '@/util'\n\nexport type ActiveStrategyProp =\n  | 'single-leaf'\n  | 'leaf'\n  | 'independent'\n  | 'single-independent'\n  | ActiveStrategy\n  | ((mandatory: boolean) => ActiveStrategy)\nexport type SelectStrategyProp =\n  | 'single-leaf'\n  | 'leaf'\n  | 'independent'\n  | 'single-independent'\n  | 'classic'\n  | SelectStrategy\n  | ((mandatory: boolean) => SelectStrategy)\nexport type OpenStrategyProp = 'single' | 'multiple' | 'list' | OpenStrategy\n\nexport interface NestedProps {\n  activatable: boolean\n  selectable: boolean\n  activeStrategy: ActiveStrategyProp | undefined\n  selectStrategy: SelectStrategyProp | undefined\n  openStrategy: OpenStrategyProp | undefined\n  activated: any\n  selected: any\n  opened: any\n  mandatory: boolean\n  'onUpdate:activated': EventProp<[any]> | undefined\n  'onUpdate:selected': EventProp<[any]> | undefined\n  'onUpdate:opened': EventProp<[any]> | undefined\n}\n\ntype NestedProvide = {\n  id: Ref<unknown>\n  isGroupActivator?: boolean\n  root: {\n    children: Ref<Map<unknown, unknown[]>>\n    parents: Ref<Map<unknown, unknown>>\n    activatable: Ref<boolean>\n    selectable: Ref<boolean>\n    opened: Ref<Set<unknown>>\n    activated: Ref<Set<unknown>>\n    selected: Ref<Map<unknown, 'on' | 'off' | 'indeterminate'>>\n    selectedValues: Ref<unknown[]>\n    register: (id: unknown, parentId: unknown, isGroup?: boolean) => void\n    unregister: (id: unknown) => void\n    open: (id: unknown, value: boolean, event?: Event) => void\n    activate: (id: unknown, value: boolean, event?: Event) => void\n    select: (id: unknown, value: boolean, event?: Event) => void\n    openOnSelect: (id: unknown, value: boolean, event?: Event) => void\n  }\n}\n\nexport const VNestedSymbol: InjectionKey<NestedProvide> = Symbol.for('vuetify:nested')\n\nexport const emptyNested: NestedProvide = {\n  id: shallowRef(),\n  root: {\n    register: () => null,\n    unregister: () => null,\n    parents: ref(new Map()),\n    children: ref(new Map()),\n    open: () => null,\n    openOnSelect: () => null,\n    activate: () => null,\n    select: () => null,\n    activatable: ref(false),\n    selectable: ref(false),\n    opened: ref(new Set()),\n    activated: ref(new Set()),\n    selected: ref(new Map()),\n    selectedValues: ref([]),\n  },\n}\n\nexport const makeNestedProps = propsFactory({\n  activatable: Boolean,\n  selectable: Boolean,\n  activeStrategy: [String, Function, Object] as PropType<ActiveStrategyProp>,\n  selectStrategy: [String, Function, Object] as PropType<SelectStrategyProp>,\n  openStrategy: [String, Object] as PropType<OpenStrategyProp>,\n  opened: null,\n  activated: null,\n  selected: null,\n  mandatory: Boolean,\n}, 'nested')\n\nexport const useNested = (props: NestedProps) => {\n  let isUnmounted = false\n  const children = ref(new Map<unknown, unknown[]>())\n  const parents = ref(new Map<unknown, unknown>())\n\n  const opened = useProxiedModel(props, 'opened', props.opened, v => new Set(toRaw(v)), v => [...v.values()])\n\n  const activeStrategy = computed(() => {\n    if (typeof props.activeStrategy === 'object') return props.activeStrategy\n    if (typeof props.activeStrategy === 'function') return props.activeStrategy(props.mandatory)\n\n    switch (props.activeStrategy) {\n      case 'leaf': return leafActiveStrategy(props.mandatory)\n      case 'single-leaf': return leafSingleActiveStrategy(props.mandatory)\n      case 'independent': return independentActiveStrategy(props.mandatory)\n      case 'single-independent':\n      default: return independentSingleActiveStrategy(props.mandatory)\n    }\n  })\n\n  const selectStrategy = computed(() => {\n    if (typeof props.selectStrategy === 'object') return props.selectStrategy\n    if (typeof props.selectStrategy === 'function') return props.selectStrategy(props.mandatory)\n\n    switch (props.selectStrategy) {\n      case 'single-leaf': return leafSingleSelectStrategy(props.mandatory)\n      case 'leaf': return leafSelectStrategy(props.mandatory)\n      case 'independent': return independentSelectStrategy(props.mandatory)\n      case 'single-independent': return independentSingleSelectStrategy(props.mandatory)\n      case 'classic':\n      default: return classicSelectStrategy(props.mandatory)\n    }\n  })\n\n  const openStrategy = computed(() => {\n    if (typeof props.openStrategy === 'object') return props.openStrategy\n\n    switch (props.openStrategy) {\n      case 'list': return listOpenStrategy\n      case 'single': return singleOpenStrategy\n      case 'multiple':\n      default: return multipleOpenStrategy\n    }\n  })\n\n  const activated = useProxiedModel(\n    props,\n    'activated',\n    props.activated,\n    v => activeStrategy.value.in(v, children.value, parents.value),\n    v => activeStrategy.value.out(v, children.value, parents.value),\n  )\n  const selected = useProxiedModel(\n    props,\n    'selected',\n    props.selected,\n    v => selectStrategy.value.in(v, children.value, parents.value),\n    v => selectStrategy.value.out(v, children.value, parents.value),\n  )\n\n  onBeforeUnmount(() => {\n    isUnmounted = true\n  })\n\n  function getPath (id: unknown) {\n    const path: unknown[] = []\n    let parent: unknown = id\n\n    while (parent != null) {\n      path.unshift(parent)\n      parent = parents.value.get(parent)\n    }\n\n    return path\n  }\n\n  const vm = getCurrentInstance('nested')\n\n  const nested: NestedProvide = {\n    id: shallowRef(),\n    root: {\n      opened,\n      activatable: toRef(props, 'activatable'),\n      selectable: toRef(props, 'selectable'),\n      activated,\n      selected,\n      selectedValues: computed(() => {\n        const arr = []\n\n        for (const [key, value] of selected.value.entries()) {\n          if (value === 'on') arr.push(key)\n        }\n\n        return arr\n      }),\n      register: (id, parentId, isGroup) => {\n        parentId && id !== parentId && parents.value.set(id, parentId)\n\n        isGroup && children.value.set(id, [])\n\n        if (parentId != null) {\n          children.value.set(parentId, [...children.value.get(parentId) || [], id])\n        }\n      },\n      unregister: id => {\n        if (isUnmounted) return\n\n        children.value.delete(id)\n        const parent = parents.value.get(id)\n        if (parent) {\n          const list = children.value.get(parent) ?? []\n          children.value.set(parent, list.filter(child => child !== id))\n        }\n        parents.value.delete(id)\n      },\n      open: (id, value, event) => {\n        vm.emit('click:open', { id, value, path: getPath(id), event })\n\n        const newOpened = openStrategy.value.open({\n          id,\n          value,\n          opened: new Set(opened.value),\n          children: children.value,\n          parents: parents.value,\n          event,\n        })\n\n        newOpened && (opened.value = newOpened)\n      },\n      openOnSelect: (id, value, event) => {\n        const newOpened = openStrategy.value.select({\n          id,\n          value,\n          selected: new Map(selected.value),\n          opened: new Set(opened.value),\n          children: children.value,\n          parents: parents.value,\n          event,\n        })\n        newOpened && (opened.value = newOpened)\n      },\n      select: (id, value, event) => {\n        vm.emit('click:select', { id, value, path: getPath(id), event })\n\n        const newSelected = selectStrategy.value.select({\n          id,\n          value,\n          selected: new Map(selected.value),\n          children: children.value,\n          parents: parents.value,\n          event,\n        })\n        newSelected && (selected.value = newSelected)\n\n        nested.root.openOnSelect(id, value, event)\n      },\n      activate: (id, value, event) => {\n        if (!props.activatable) {\n          return nested.root.select(id, true, event)\n        }\n\n        vm.emit('click:activate', { id, value, path: getPath(id), event })\n\n        const newActivated = activeStrategy.value.activate({\n          id,\n          value,\n          activated: new Set(activated.value),\n          children: children.value,\n          parents: parents.value,\n          event,\n        })\n\n        newActivated && (activated.value = newActivated)\n      },\n      children,\n      parents,\n    },\n  }\n\n  provide(VNestedSymbol, nested)\n\n  return nested.root\n}\n\nexport const useNestedItem = (id: Ref<unknown>, isGroup: boolean) => {\n  const parent = inject(VNestedSymbol, emptyNested)\n\n  const uidSymbol = Symbol(getUid())\n  const computedId = computed(() => id.value !== undefined ? id.value : uidSymbol)\n\n  const item = {\n    ...parent,\n    id: computedId,\n    open: (open: boolean, e: Event) => parent.root.open(toRaw(computedId.value), open, e),\n    openOnSelect: (open: boolean, e?: Event) => parent.root.openOnSelect(computedId.value, open, e),\n    isOpen: computed(() => parent.root.opened.value.has(toRaw(computedId.value))),\n    parent: computed(() => parent.root.parents.value.get(computedId.value)),\n    activate: (activated: boolean, e?: Event) => parent.root.activate(computedId.value, activated, e),\n    isActivated: computed(() => parent.root.activated.value.has(toRaw(computedId.value))),\n    select: (selected: boolean, e?: Event) => parent.root.select(computedId.value, selected, e),\n    isSelected: computed(() => parent.root.selected.value.get(toRaw(computedId.value)) === 'on'),\n    isIndeterminate: computed(() => parent.root.selected.value.get(computedId.value) === 'indeterminate'),\n    isLeaf: computed(() => !parent.root.children.value.get(computedId.value)),\n    isGroupActivator: parent.isGroupActivator,\n  }\n\n  !parent.isGroupActivator && parent.root.register(computedId.value, parent.id.value, isGroup)\n\n  onBeforeUnmount(() => {\n    !parent.isGroupActivator && parent.root.unregister(computedId.value)\n  })\n\n  isGroup && provide(VNestedSymbol, item)\n\n  return item\n}\n\nexport const useNestedGroupActivator = () => {\n  const parent = inject(VNestedSymbol, emptyNested)\n\n  provide(VNestedSymbol, { ...parent, isGroupActivator: true })\n}\n", "// Components\nimport { VExpandTransition } from '@/components/transitions'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\n\n// Composables\nimport { useList } from './list'\nimport { makeComponentProps } from '@/composables/component'\nimport { IconValue } from '@/composables/icons'\nimport { useNestedGroupActivator, useNestedItem } from '@/composables/nested/nested'\nimport { useSsrBoot } from '@/composables/ssrBoot'\nimport { makeTagProps } from '@/composables/tag'\nimport { MaybeTransition } from '@/composables/transition'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { defineComponent, genericComponent, propsFactory, useRender } from '@/util'\n\nexport type VListGroupSlots = {\n  default: never\n  activator: { isOpen: boolean, props: Record<string, unknown> }\n}\n\nconst VListGroupActivator = defineComponent({\n  name: 'VListGroupActivator',\n\n  setup (_, { slots }) {\n    useNestedGroupActivator()\n\n    return () => slots.default?.()\n  },\n})\n\nexport const makeVListGroupProps = propsFactory({\n  /* @deprecated */\n  activeColor: String,\n  baseColor: String,\n  color: String,\n  collapseIcon: {\n    type: IconValue,\n    default: '$collapse',\n  },\n  expandIcon: {\n    type: IconValue,\n    default: '$expand',\n  },\n  prependIcon: IconValue,\n  appendIcon: IconValue,\n  fluid: Boolean,\n  subgroup: Boolean,\n  title: String,\n  value: null,\n\n  ...makeComponentProps(),\n  ...makeTagProps(),\n}, 'VListGroup')\n\nexport const VListGroup = genericComponent<VListGroupSlots>()({\n  name: 'VListGroup',\n\n  props: makeVListGroupProps(),\n\n  setup (props, { slots }) {\n    const { isOpen, open, id: _id } = useNestedItem(toRef(props, 'value'), true)\n    const id = computed(() => `v-list-group--id-${String(_id.value)}`)\n    const list = useList()\n    const { isBooted } = useSsrBoot()\n\n    function onClick (e: Event) {\n      e.stopPropagation()\n      open(!isOpen.value, e)\n    }\n\n    const activatorProps = computed(() => ({\n      onClick,\n      class: 'v-list-group__header',\n      id: id.value,\n    }))\n\n    const toggleIcon = computed(() => isOpen.value ? props.collapseIcon : props.expandIcon)\n    const activatorDefaults = computed(() => ({\n      VListItem: {\n        active: isOpen.value,\n        activeColor: props.activeColor,\n        baseColor: props.baseColor,\n        color: props.color,\n        prependIcon: props.prependIcon || (props.subgroup && toggleIcon.value),\n        appendIcon: props.appendIcon || (!props.subgroup && toggleIcon.value),\n        title: props.title,\n        value: props.value,\n      },\n    }))\n\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-list-group',\n          {\n            'v-list-group--prepend': list?.hasPrepend.value,\n            'v-list-group--fluid': props.fluid,\n            'v-list-group--subgroup': props.subgroup,\n            'v-list-group--open': isOpen.value,\n          },\n          props.class,\n        ]}\n        style={ props.style }\n      >\n        { slots.activator && (\n          <VDefaultsProvider defaults={ activatorDefaults.value }>\n            <VListGroupActivator>\n              { slots.activator({ props: activatorProps.value, isOpen: isOpen.value }) }\n            </VListGroupActivator>\n          </VDefaultsProvider>\n        )}\n\n        <MaybeTransition transition={{ component: VExpandTransition }} disabled={ !isBooted.value }>\n          <div class=\"v-list-group__items\" role=\"group\" aria-labelledby={ id.value } v-show={ isOpen.value }>\n            { slots.default?.() }\n          </div>\n        </MaybeTransition>\n      </props.tag>\n    ))\n\n    return {\n      isOpen,\n    }\n  },\n})\n\nexport type VListGroup = InstanceType<typeof VListGroup>\n", "// Styles\nimport './VListItem.sass'\n\n// Components\nimport { VListItemSubtitle } from './VListItemSubtitle'\nimport { VListItemTitle } from './VListItemTitle'\nimport { VAvatar } from '@/components/VAvatar'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { useList } from './list'\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { IconValue } from '@/composables/icons'\nimport { useNestedItem } from '@/composables/nested/nested'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeRouterProps, useLink } from '@/composables/router'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\n\n// Directives\nimport { Ripple } from '@/directives/ripple'\n\n// Utilities\nimport { computed, watch } from 'vue'\nimport { deprecate, EventProp, genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { RippleDirectiveBinding } from '@/directives/ripple'\n\nexport type ListItemSlot = {\n  isActive: boolean\n  isOpen: boolean\n  isSelected: boolean\n  isIndeterminate: boolean\n  select: (value: boolean) => void\n}\n\nexport type ListItemTitleSlot = {\n  title?: string | number\n}\n\nexport type ListItemSubtitleSlot = {\n  subtitle?: string | number\n}\n\nexport type VListItemSlots = {\n  prepend: ListItemSlot\n  append: ListItemSlot\n  default: ListItemSlot\n  title: ListItemTitleSlot\n  subtitle: ListItemSubtitleSlot\n}\n\nexport const makeVListItemProps = propsFactory({\n  active: {\n    type: Boolean,\n    default: undefined,\n  },\n  activeClass: String,\n  /* @deprecated */\n  activeColor: String,\n  appendAvatar: String,\n  appendIcon: IconValue,\n  baseColor: String,\n  disabled: Boolean,\n  lines: [Boolean, String] as PropType<'one' | 'two' | 'three' | false>,\n  link: {\n    type: Boolean,\n    default: undefined,\n  },\n  nav: Boolean,\n  prependAvatar: String,\n  prependIcon: IconValue,\n  ripple: {\n    type: [Boolean, Object] as PropType<RippleDirectiveBinding['value']>,\n    default: true,\n  },\n  slim: Boolean,\n  subtitle: [String, Number],\n  title: [String, Number],\n  value: null,\n\n  onClick: EventProp<[MouseEvent | KeyboardEvent]>(),\n  onClickOnce: EventProp<[MouseEvent]>(),\n\n  ...makeBorderProps(),\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...makeDimensionProps(),\n  ...makeElevationProps(),\n  ...makeRoundedProps(),\n  ...makeRouterProps(),\n  ...makeTagProps(),\n  ...makeThemeProps(),\n  ...makeVariantProps({ variant: 'text' } as const),\n}, 'VListItem')\n\nexport const VListItem = genericComponent<VListItemSlots>()({\n  name: 'VListItem',\n\n  directives: { Ripple },\n\n  props: makeVListItemProps(),\n\n  emits: {\n    click: (e: MouseEvent | KeyboardEvent) => true,\n  },\n\n  setup (props, { attrs, slots, emit }) {\n    const link = useLink(props, attrs)\n    const id = computed(() => props.value === undefined ? link.href.value : props.value)\n    const {\n      activate,\n      isActivated,\n      select,\n      isOpen,\n      isSelected,\n      isIndeterminate,\n      isGroupActivator,\n      root,\n      parent,\n      openOnSelect,\n    } = useNestedItem(id, false)\n    const list = useList()\n    const isActive = computed(() =>\n      props.active !== false &&\n      (props.active || link.isActive?.value || (root.activatable.value ? isActivated.value : isSelected.value))\n    )\n    const isLink = computed(() => props.link !== false && link.isLink.value)\n    const isClickable = computed(() =>\n      !props.disabled &&\n      props.link !== false &&\n      (props.link || link.isClickable.value || (!!list && (root.selectable.value || root.activatable.value || props.value != null)))\n    )\n\n    const roundedProps = computed(() => props.rounded || props.nav)\n    const color = computed(() => props.color ?? props.activeColor)\n    const variantProps = computed(() => ({\n      color: isActive.value ? color.value ?? props.baseColor : props.baseColor,\n      variant: props.variant,\n    }))\n\n    watch(() => link.isActive?.value, val => {\n      if (val && parent.value != null) {\n        root.open(parent.value, true)\n      }\n\n      if (val) {\n        openOnSelect(val)\n      }\n    }, { immediate: true })\n\n    const { themeClasses } = provideTheme(props)\n    const { borderClasses } = useBorder(props)\n    const { colorClasses, colorStyles, variantClasses } = useVariant(variantProps)\n    const { densityClasses } = useDensity(props)\n    const { dimensionStyles } = useDimension(props)\n    const { elevationClasses } = useElevation(props)\n    const { roundedClasses } = useRounded(roundedProps)\n    const lineClasses = computed(() => props.lines ? `v-list-item--${props.lines}-line` : undefined)\n\n    const slotProps = computed(() => ({\n      isActive: isActive.value,\n      select,\n      isOpen: isOpen.value,\n      isSelected: isSelected.value,\n      isIndeterminate: isIndeterminate.value,\n    } satisfies ListItemSlot))\n\n    function onClick (e: MouseEvent) {\n      emit('click', e)\n\n      if (!isClickable.value) return\n\n      link.navigate?.(e)\n\n      if (isGroupActivator) return\n\n      if (root.activatable.value) {\n        activate(!isActivated.value, e)\n      } else if (root.selectable.value) {\n        select(!isSelected.value, e)\n      } else if (props.value != null) {\n        select(!isSelected.value, e)\n      }\n    }\n\n    function onKeyDown (e: KeyboardEvent) {\n      if (e.key === 'Enter' || e.key === ' ') {\n        e.preventDefault()\n        e.target!.dispatchEvent(new MouseEvent('click', e))\n      }\n    }\n\n    useRender(() => {\n      const Tag = isLink.value ? 'a' : props.tag\n      const hasTitle = (slots.title || props.title != null)\n      const hasSubtitle = (slots.subtitle || props.subtitle != null)\n      const hasAppendMedia = !!(props.appendAvatar || props.appendIcon)\n      const hasAppend = !!(hasAppendMedia || slots.append)\n      const hasPrependMedia = !!(props.prependAvatar || props.prependIcon)\n      const hasPrepend = !!(hasPrependMedia || slots.prepend)\n\n      list?.updateHasPrepend(hasPrepend)\n\n      if (props.activeColor) {\n        deprecate('active-color', ['color', 'base-color'])\n      }\n\n      return (\n        <Tag\n          class={[\n            'v-list-item',\n            {\n              'v-list-item--active': isActive.value,\n              'v-list-item--disabled': props.disabled,\n              'v-list-item--link': isClickable.value,\n              'v-list-item--nav': props.nav,\n              'v-list-item--prepend': !hasPrepend && list?.hasPrepend.value,\n              'v-list-item--slim': props.slim,\n              [`${props.activeClass}`]: props.activeClass && isActive.value,\n            },\n            themeClasses.value,\n            borderClasses.value,\n            colorClasses.value,\n            densityClasses.value,\n            elevationClasses.value,\n            lineClasses.value,\n            roundedClasses.value,\n            variantClasses.value,\n            props.class,\n          ]}\n          style={[\n            colorStyles.value,\n            dimensionStyles.value,\n            props.style,\n          ]}\n          href={ link.href.value }\n          tabindex={ isClickable.value ? (list ? -2 : 0) : undefined }\n          onClick={ onClick }\n          onKeydown={ isClickable.value && !isLink.value && onKeyDown }\n          v-ripple={ isClickable.value && props.ripple }\n        >\n          { genOverlays(isClickable.value || isActive.value, 'v-list-item') }\n\n          { hasPrepend && (\n            <div key=\"prepend\" class=\"v-list-item__prepend\">\n              { !slots.prepend ? (\n                <>\n                  { props.prependAvatar && (\n                    <VAvatar\n                      key=\"prepend-avatar\"\n                      density={ props.density }\n                      image={ props.prependAvatar }\n                    />\n                  )}\n\n                  { props.prependIcon && (\n                    <VIcon\n                      key=\"prepend-icon\"\n                      density={ props.density }\n                      icon={ props.prependIcon }\n                    />\n                  )}\n                </>\n              ) : (\n                <VDefaultsProvider\n                  key=\"prepend-defaults\"\n                  disabled={ !hasPrependMedia }\n                  defaults={{\n                    VAvatar: {\n                      density: props.density,\n                      image: props.prependAvatar,\n                    },\n                    VIcon: {\n                      density: props.density,\n                      icon: props.prependIcon,\n                    },\n                    VListItemAction: {\n                      start: true,\n                    },\n                  }}\n                >\n                  { slots.prepend?.(slotProps.value) }\n                </VDefaultsProvider>\n              )}\n\n              <div class=\"v-list-item__spacer\" />\n            </div>\n          )}\n\n          <div class=\"v-list-item__content\" data-no-activator=\"\">\n            { hasTitle && (\n              <VListItemTitle key=\"title\">\n                { slots.title?.({ title: props.title }) ?? props.title }\n              </VListItemTitle>\n            )}\n\n            { hasSubtitle && (\n              <VListItemSubtitle key=\"subtitle\">\n                { slots.subtitle?.({ subtitle: props.subtitle }) ?? props.subtitle }\n              </VListItemSubtitle>\n            )}\n\n            { slots.default?.(slotProps.value) }\n          </div>\n\n          { hasAppend && (\n            <div key=\"append\" class=\"v-list-item__append\">\n              { !slots.append ? (\n                <>\n                  { props.appendIcon && (\n                    <VIcon\n                      key=\"append-icon\"\n                      density={ props.density }\n                      icon={ props.appendIcon }\n                    />\n                  )}\n\n                  { props.appendAvatar && (\n                    <VAvatar\n                      key=\"append-avatar\"\n                      density={ props.density }\n                      image={ props.appendAvatar }\n                    />\n                  )}\n                </>\n              ) : (\n                <VDefaultsProvider\n                  key=\"append-defaults\"\n                  disabled={ !hasAppendMedia }\n                  defaults={{\n                    VAvatar: {\n                      density: props.density,\n                      image: props.appendAvatar,\n                    },\n                    VIcon: {\n                      density: props.density,\n                      icon: props.appendIcon,\n                    },\n                    VListItemAction: {\n                      end: true,\n                    },\n                  }}\n                >\n                  { slots.append?.(slotProps.value) }\n                </VDefaultsProvider>\n              )}\n\n              <div class=\"v-list-item__spacer\" />\n            </div>\n          )}\n        </Tag>\n      )\n    })\n\n    return {\n      activate,\n      isActivated,\n      isGroupActivator,\n      isSelected,\n      list,\n      select,\n    }\n  },\n})\n\nexport type VListItem = InstanceType<typeof VListItem>\n", "// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVListItemSubtitleProps = propsFactory({\n  opacity: [Number, String],\n\n  ...makeComponentProps(),\n  ...makeTagProps(),\n}, 'VListItemSubtitle')\n\nexport const VListItemSubtitle = genericComponent()({\n  name: 'VListItemSubtitle',\n\n  props: makeVListItemSubtitleProps(),\n\n  setup (props, { slots }) {\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-list-item-subtitle',\n          props.class,\n        ]}\n        style={[\n          { '--v-list-item-subtitle-opacity': props.opacity },\n          props.style,\n        ]}\n        v-slots={ slots }\n      />\n    ))\n\n    return {}\n  },\n})\n\nexport type VListItemSubtitle = InstanceType<typeof VListItemSubtitle>\n", "// Utilities\nimport { createSimpleFunctional } from '@/util'\n\nexport const VListItemTitle = createSimpleFunctional('v-list-item-title')\n\nexport type VListItemTitle = InstanceType<typeof VListItemTitle>\n", "// Composables\nimport { useTextColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { toRef } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVListSubheaderProps = propsFactory({\n  color: String,\n  inset: Boolean,\n  sticky: Boolean,\n  title: String,\n\n  ...makeComponentProps(),\n  ...makeTagProps(),\n}, 'VListSubheader')\n\nexport const VListSubheader = genericComponent()({\n  name: 'VListSubheader',\n\n  props: makeVListSubheaderProps(),\n\n  setup (props, { slots }) {\n    const { textColorClasses, textColorStyles } = useTextColor(toRef(props, 'color'))\n\n    useRender(() => {\n      const hasText = !!(slots.default || props.title)\n\n      return (\n        <props.tag\n          class={[\n            'v-list-subheader',\n            {\n              'v-list-subheader--inset': props.inset,\n              'v-list-subheader--sticky': props.sticky,\n            },\n            textColorClasses.value,\n            props.class,\n          ]}\n          style={[\n            { textColorStyles },\n            props.style,\n          ]}\n        >\n          { hasText && (\n            <div class=\"v-list-subheader__text\">\n              { slots.default?.() ?? props.title }\n            </div>\n          )}\n        </props.tag>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VListSubheader = InstanceType<typeof VListSubheader>\n", "// Styles\nimport './VDivider.sass'\n\n// Composables\nimport { useTextColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { convertToUnit, genericComponent, propsFactory, useRender } from '@/util'\n\ntype DividerKey = 'borderRightWidth' | 'borderTopWidth' | 'height' | 'width'\ntype DividerStyles = Partial<Record<DividerKey, string>>\n\nexport const makeVDividerProps = propsFactory({\n  color: String,\n  inset: Boolean,\n  length: [Number, String],\n  opacity: [Number, String],\n  thickness: [Number, String],\n  vertical: Boolean,\n\n  ...makeComponentProps(),\n  ...makeThemeProps(),\n}, 'VDivider')\n\nexport const VDivider = genericComponent()({\n  name: 'VDivider',\n\n  props: makeVDividerProps(),\n\n  setup (props, { attrs, slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { textColorClasses, textColorStyles } = useTextColor(toRef(props, 'color'))\n    const dividerStyles = computed(() => {\n      const styles: DividerStyles = {}\n\n      if (props.length) {\n        styles[props.vertical ? 'height' : 'width'] = convertToUnit(props.length)\n      }\n\n      if (props.thickness) {\n        styles[props.vertical ? 'borderRightWidth' : 'borderTopWidth'] = convertToUnit(props.thickness)\n      }\n\n      return styles\n    })\n\n    useRender(() => {\n      const divider = (\n        <hr\n          class={[\n            {\n              'v-divider': true,\n              'v-divider--inset': props.inset,\n              'v-divider--vertical': props.vertical,\n            },\n            themeClasses.value,\n            textColorClasses.value,\n            props.class,\n          ]}\n          style={[\n            dividerStyles.value,\n            textColorStyles.value,\n            { '--v-border-opacity': props.opacity },\n            props.style,\n          ]}\n          aria-orientation={\n            !attrs.role || attrs.role === 'separator'\n              ? props.vertical ? 'vertical' : 'horizontal'\n              : undefined\n          }\n          role={ `${attrs.role || 'separator'}` }\n        />\n      )\n\n      if (!slots.default) return divider\n\n      return (\n        <div\n          class={[\n            'v-divider__wrapper',\n            {\n              'v-divider__wrapper--vertical': props.vertical,\n              'v-divider__wrapper--inset': props.inset,\n            },\n          ]}\n        >\n          { divider }\n\n          <div class=\"v-divider__content\">\n            { slots.default() }\n          </div>\n\n          { divider }\n        </div>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VDivider = InstanceType<typeof VDivider>\n", "// Components\nimport { VListGroup } from './VListGroup'\nimport { VListItem } from './VListItem'\nimport { VListSubheader } from './VListSubheader'\nimport { VDivider } from '../VDivider'\n\n// Utilities\nimport { createList } from './list'\nimport { genericComponent, propsFactory } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { InternalListItem } from './VList'\nimport type { VListItemSlots } from './VListItem'\nimport type { GenericProps } from '@/util'\n\nexport type VListChildrenSlots<T> = {\n  [K in keyof Omit<VListItemSlots, 'default'>]: VListItemSlots[K] & { item: T }\n} & {\n  default: never\n  item: { props: InternalListItem['props'] }\n  divider: { props: InternalListItem['props'] }\n  subheader: { props: InternalListItem['props'] }\n  header: { props: InternalListItem['props'] }\n}\n\nexport const makeVListChildrenProps = propsFactory({\n  items: Array as PropType<readonly InternalListItem[]>,\n  returnObject: Boolean,\n}, 'VListChildren')\n\nexport const VListChildren = genericComponent<new <T extends InternalListItem>(\n  props: {\n    items?: readonly T[]\n    returnObject?: boolean\n  },\n  slots: VListChildrenSlots<T>\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VListChildren',\n\n  props: makeVListChildrenProps(),\n\n  setup (props, { slots }) {\n    createList()\n\n    return () => slots.default?.() ?? props.items?.map(({ children, props: itemProps, type, raw: item }) => {\n      if (type === 'divider') {\n        return slots.divider?.({ props: itemProps }) ?? (\n          <VDivider { ...itemProps } />\n        )\n      }\n\n      if (type === 'subheader') {\n        return slots.subheader?.({ props: itemProps }) ?? (\n          <VListSubheader { ...itemProps } />\n        )\n      }\n\n      const slotsWithItem = {\n        subtitle: slots.subtitle ? (slotProps: any) => slots.subtitle?.({ ...slotProps, item }) : undefined,\n        prepend: slots.prepend ? (slotProps: any) => slots.prepend?.({ ...slotProps, item }) : undefined,\n        append: slots.append ? (slotProps: any) => slots.append?.({ ...slotProps, item }) : undefined,\n        title: slots.title ? (slotProps: any) => slots.title?.({ ...slotProps, item }) : undefined,\n      }\n\n      const listGroupProps = VListGroup.filterProps(itemProps)\n\n      return children ? (\n        <VListGroup\n          value={ itemProps?.value }\n          { ...listGroupProps }\n        >\n          {{\n            activator: ({ props: activatorProps }) => {\n              const listItemProps = {\n                ...itemProps,\n                ...activatorProps,\n                value: props.returnObject ? item : itemProps.value,\n              }\n\n              return slots.header\n                ? slots.header({ props: listItemProps })\n                : (\n                  <VListItem { ...listItemProps } v-slots={ slotsWithItem } />\n                )\n            },\n            default: () => (\n              <VListChildren\n                items={ children }\n                returnObject={ props.returnObject }\n                v-slots={ slots }\n              />\n            ),\n          }}\n        </VListGroup>\n      ) : (\n        slots.item ? slots.item({ props: itemProps }) : (\n          <VListItem\n            { ...itemProps }\n            value={ props.returnObject ? item : itemProps.value }\n            v-slots={ slotsWithItem }\n          />\n        )\n      )\n    })\n  },\n})\n", "// Utilities\nimport { computed } from 'vue'\nimport { deepEqual, getPropertyFromItem, omit, propsFactory } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { InternalItem } from '@/composables/filter'\nimport type { SelectItemKey } from '@/util'\n\nexport interface ListItem<T = any> extends InternalItem<T> {\n  title: string\n  props: {\n    [key: string]: any\n    title: string\n    value: any\n  }\n  children?: ListItem<T>[]\n}\n\nexport interface ItemProps {\n  items: any[]\n  itemTitle: SelectItemKey\n  itemValue: SelectItemKey\n  itemChildren: SelectItemKey\n  itemProps: SelectItemKey\n  returnObject: boolean\n  valueComparator: typeof deepEqual\n}\n\n// Composables\nexport const makeItemsProps = propsFactory({\n  items: {\n    type: Array as PropType<ItemProps['items']>,\n    default: () => ([]),\n  },\n  itemTitle: {\n    type: [String, Array, Function] as PropType<SelectItemKey>,\n    default: 'title',\n  },\n  itemValue: {\n    type: [String, Array, Function] as PropType<SelectItemKey>,\n    default: 'value',\n  },\n  itemChildren: {\n    type: [Boolean, String, Array, Function] as PropType<SelectItemKey>,\n    default: 'children',\n  },\n  itemProps: {\n    type: [Boolean, String, Array, Function] as PropType<SelectItemKey>,\n    default: 'props',\n  },\n  returnObject: Boolean,\n  valueComparator: {\n    type: Function as PropType<typeof deepEqual>,\n    default: deepEqual,\n  },\n}, 'list-items')\n\nexport function transformItem (props: Omit<ItemProps, 'items'>, item: any): ListItem {\n  const title = getPropertyFromItem(item, props.itemTitle, item)\n  const value = getPropertyFromItem(item, props.itemValue, title)\n  const children = getPropertyFromItem(item, props.itemChildren)\n  const itemProps = props.itemProps === true\n    ? typeof item === 'object' && item != null && !Array.isArray(item)\n      ? 'children' in item\n        ? omit(item, ['children'])\n        : item\n      : undefined\n    : getPropertyFromItem(item, props.itemProps)\n\n  const _props = {\n    title,\n    value,\n    ...itemProps,\n  }\n\n  return {\n    title: String(_props.title ?? ''),\n    value: _props.value,\n    props: _props,\n    children: Array.isArray(children) ? transformItems(props, children) : undefined,\n    raw: item,\n  }\n}\n\nexport function transformItems (props: Omit<ItemProps, 'items'>, items: ItemProps['items']) {\n  const array: ListItem[] = []\n\n  for (const item of items) {\n    array.push(transformItem(props, item))\n  }\n\n  return array\n}\n\nexport function useItems (props: ItemProps) {\n  const items = computed(() => transformItems(props, props.items))\n  const hasNullItem = computed(() => items.value.some(item => item.value === null))\n\n  function transformIn (value: any[]): ListItem[] {\n    if (!hasNullItem.value) {\n      // When the model value is null, return an InternalItem\n      // based on null only if null is one of the items\n      value = value.filter(v => v !== null)\n    }\n\n    return value.map(v => {\n      if (props.returnObject && typeof v === 'string') {\n        // String model value means value is a custom input value from combobox\n        // Don't look up existing items if the model value is a string\n        return transformItem(props, v)\n      }\n      return items.value.find(item => props.valueComparator(v, item.value)) || transformItem(props, v)\n    })\n  }\n\n  function transformOut (value: ListItem[]): any[] {\n    return props.returnObject\n      ? value.map(({ raw }) => raw)\n      : value.map(({ value }) => value)\n  }\n\n  return { items, transformIn, transformOut }\n}\n", "// Utilities\nimport { createSimpleFunctional } from '@/util'\n\nexport const VListImg = createSimpleFunctional('v-list-img')\n\nexport type VListImg = InstanceType<typeof VListImg>\n", "// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVListItemActionProps = propsFactory({\n  start: Boolean,\n  end: Boolean,\n\n  ...makeComponentProps(),\n  ...makeTagProps(),\n}, 'VListItemAction')\n\nexport const VListItemAction = genericComponent()({\n  name: 'VListItemAction',\n\n  props: makeVListItemActionProps(),\n\n  setup (props, { slots }) {\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-list-item-action',\n          {\n            'v-list-item-action--start': props.start,\n            'v-list-item-action--end': props.end,\n          },\n          props.class,\n        ]}\n        style={ props.style }\n        v-slots={ slots }\n      />\n    ))\n\n    return {}\n  },\n})\n\nexport type VListItemAction = InstanceType<typeof VListItemAction>\n", "// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVListItemMediaProps = propsFactory({\n  start: Boolean,\n  end: Boolean,\n\n  ...makeComponentProps(),\n  ...makeTagProps(),\n}, 'VListItemMedia')\n\nexport const VListItemMedia = genericComponent()({\n  name: 'VListItemMedia',\n\n  props: makeVListItemMediaProps(),\n\n  setup (props, { slots }) {\n    useRender(() => {\n      return (\n        <props.tag\n          class={[\n            'v-list-item-media',\n            {\n              'v-list-item-media--start': props.start,\n              'v-list-item-media--end': props.end,\n            },\n            props.class,\n          ]}\n          style={ props.style }\n          v-slots={ slots }\n        />\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VListItemMedia = InstanceType<typeof VListItemMedia>\n", "// Styles\nimport './VMenu.sass'\n\n// Components\nimport { VDialogTransition } from '@/components/transitions'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VOverlay } from '@/components/VOverlay'\nimport { makeVOverlayProps } from '@/components/VOverlay/VOverlay'\n\n// Composables\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { useRtl } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useScopeId } from '@/composables/scopeId'\n\n// Utilities\nimport {\n  computed,\n  inject,\n  mergeProps,\n  nextTick,\n  onBeforeUnmount,\n  onDeactivated,\n  provide,\n  ref,\n  shallowRef,\n  watch,\n} from 'vue'\nimport { VMenuSymbol } from './shared'\nimport {\n  focusableChildren,\n  focusChild,\n  genericComponent,\n  getNextElement,\n  getUid,\n  isClickInsideElement,\n  omit,\n  propsFactory,\n  useRender,\n} from '@/util'\n\n// Types\nimport type { Component } from 'vue'\nimport type { OverlaySlots } from '@/components/VOverlay/VOverlay'\n\nexport const makeVMenuProps = propsFactory({\n  // TODO\n  // disableKeys: Boolean,\n  id: String,\n  submenu: Boolean,\n\n  ...omit(makeVOverlayProps({\n    closeDelay: 250,\n    closeOnContentClick: true,\n    locationStrategy: 'connected' as const,\n    location: undefined,\n    openDelay: 300,\n    scrim: false,\n    scrollStrategy: 'reposition' as const,\n    transition: { component: VDialogTransition as Component },\n  }), ['absolute']),\n}, 'VMenu')\n\nexport const VMenu = genericComponent<OverlaySlots>()({\n  name: 'VMenu',\n\n  props: makeVMenuProps(),\n\n  emits: {\n    'update:modelValue': (value: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const isActive = useProxiedModel(props, 'modelValue')\n    const { scopeId } = useScopeId()\n    const { isRtl } = useRtl()\n\n    const uid = getUid()\n    const id = computed(() => props.id || `v-menu-${uid}`)\n\n    const overlay = ref<VOverlay>()\n\n    const parent = inject(VMenuSymbol, null)\n    const openChildren = shallowRef(new Set<number>())\n    provide(VMenuSymbol, {\n      register () {\n        openChildren.value.add(uid)\n      },\n      unregister () {\n        openChildren.value.delete(uid)\n      },\n      closeParents (e) {\n        setTimeout(() => {\n          if (!openChildren.value.size &&\n            !props.persistent &&\n            (e == null || (overlay.value?.contentEl && !isClickInsideElement(e, overlay.value.contentEl)))\n          ) {\n            isActive.value = false\n            parent?.closeParents()\n          }\n        }, 40)\n      },\n    })\n\n    onBeforeUnmount(() => parent?.unregister())\n    onDeactivated(() => isActive.value = false)\n\n    async function onFocusIn (e: FocusEvent) {\n      const before = e.relatedTarget as HTMLElement | null\n      const after = e.target as HTMLElement | null\n\n      await nextTick()\n\n      if (\n        isActive.value &&\n        before !== after &&\n        overlay.value?.contentEl &&\n        // We're the topmost menu\n        overlay.value?.globalTop &&\n        // It isn't the document or the menu body\n        ![document, overlay.value.contentEl].includes(after!) &&\n        // It isn't inside the menu body\n        !overlay.value.contentEl.contains(after)\n      ) {\n        const focusable = focusableChildren(overlay.value.contentEl)\n        focusable[0]?.focus()\n      }\n    }\n\n    watch(isActive, val => {\n      if (val) {\n        parent?.register()\n        document.addEventListener('focusin', onFocusIn, { once: true })\n      } else {\n        parent?.unregister()\n        document.removeEventListener('focusin', onFocusIn)\n      }\n    })\n\n    function onClickOutside (e: MouseEvent) {\n      parent?.closeParents(e)\n    }\n\n    function onKeydown (e: KeyboardEvent) {\n      if (props.disabled) return\n\n      if (e.key === 'Tab' || (e.key === 'Enter' && !props.closeOnContentClick)) {\n        if (\n          e.key === 'Enter' &&\n          ((e.target instanceof HTMLTextAreaElement) ||\n          (e.target instanceof HTMLInputElement && !!e.target.closest('form')))\n        ) return\n        if (e.key === 'Enter') e.preventDefault()\n\n        const nextElement = getNextElement(\n          focusableChildren(overlay.value?.contentEl as Element, false),\n          e.shiftKey ? 'prev' : 'next',\n          (el: HTMLElement) => el.tabIndex >= 0\n        )\n        if (!nextElement) {\n          isActive.value = false\n          overlay.value?.activatorEl?.focus()\n        }\n      } else if (props.submenu && e.key === (isRtl.value ? 'ArrowRight' : 'ArrowLeft')) {\n        isActive.value = false\n        overlay.value?.activatorEl?.focus()\n      }\n    }\n\n    function onActivatorKeydown (e: KeyboardEvent) {\n      if (props.disabled) return\n\n      const el = overlay.value?.contentEl\n      if (el && isActive.value) {\n        if (e.key === 'ArrowDown') {\n          e.preventDefault()\n          e.stopImmediatePropagation()\n          focusChild(el, 'next')\n        } else if (e.key === 'ArrowUp') {\n          e.preventDefault()\n          e.stopImmediatePropagation()\n          focusChild(el, 'prev')\n        } else if (props.submenu) {\n          if (e.key === (isRtl.value ? 'ArrowRight' : 'ArrowLeft')) {\n            isActive.value = false\n          } else if (e.key === (isRtl.value ? 'ArrowLeft' : 'ArrowRight')) {\n            e.preventDefault()\n            focusChild(el, 'first')\n          }\n        }\n      } else if (\n        props.submenu\n          ? e.key === (isRtl.value ? 'ArrowLeft' : 'ArrowRight')\n          : ['ArrowDown', 'ArrowUp'].includes(e.key)\n      ) {\n        isActive.value = true\n        e.preventDefault()\n        setTimeout(() => setTimeout(() => onActivatorKeydown(e)))\n      }\n    }\n\n    const activatorProps = computed(() =>\n      mergeProps({\n        'aria-haspopup': 'menu',\n        'aria-expanded': String(isActive.value),\n        'aria-owns': id.value,\n        onKeydown: onActivatorKeydown,\n      }, props.activatorProps)\n    )\n\n    useRender(() => {\n      const overlayProps = VOverlay.filterProps(props)\n\n      return (\n        <VOverlay\n          ref={ overlay }\n          id={ id.value }\n          class={[\n            'v-menu',\n            props.class,\n          ]}\n          style={ props.style }\n          { ...overlayProps }\n          v-model={ isActive.value }\n          absolute\n          activatorProps={ activatorProps.value }\n          location={ props.location ?? (props.submenu ? 'end' : 'bottom') }\n          onClick:outside={ onClickOutside }\n          onKeydown={ onKeydown }\n          { ...scopeId }\n        >\n          {{\n            activator: slots.activator,\n            default: (...args) => (\n              <VDefaultsProvider root=\"VMenu\">\n                { slots.default?.(...args) }\n              </VDefaultsProvider>\n            ),\n          }}\n        </VOverlay>\n      )\n    })\n\n    return forwardRefs({ id, Î¨openChildren: openChildren }, overlay)\n  },\n})\n\nexport type VMenu = InstanceType<typeof VMenu>\n", "// Styles\nimport './VOverlay.sass'\n\n// Composables\nimport { makeLocationStrategyProps, useLocationStrategies } from './locationStrategies'\nimport { makeScrollStrategyProps, useScrollStrategies } from './scrollStrategies'\nimport { makeActivatorProps, useActivator } from './useActivator'\nimport { useBackgroundColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { useHydration } from '@/composables/hydration'\nimport { makeLazyProps, useLazy } from '@/composables/lazy'\nimport { useRtl } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useBackButton, useRouter } from '@/composables/router'\nimport { useScopeId } from '@/composables/scopeId'\nimport { useStack } from '@/composables/stack'\nimport { useTeleport } from '@/composables/teleport'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { useToggleScope } from '@/composables/toggleScope'\nimport { makeTransitionProps, MaybeTransition } from '@/composables/transition'\n\n// Directives\nimport { ClickOutside } from '@/directives/click-outside'\n\n// Utilities\nimport {\n  computed,\n  mergeProps,\n  onBeforeUnmount,\n  ref,\n  Teleport,\n  toRef,\n  Transition,\n  watch,\n} from 'vue'\nimport {\n  animate,\n  convertToUnit,\n  genericComponent,\n  getCurrentInstance,\n  getScrollParent,\n  IN_BROWSER,\n  propsFactory,\n  standardEasing,\n  useRender,\n} from '@/util'\n\n// Types\nimport type { PropType, Ref } from 'vue'\nimport type { BackgroundColorData } from '@/composables/color'\nimport type { TemplateRef } from '@/util'\n\ninterface ScrimProps {\n  [key: string]: unknown\n  modelValue: boolean\n  color: BackgroundColorData\n}\nfunction Scrim (props: ScrimProps) {\n  const { modelValue, color, ...rest } = props\n  return (\n    <Transition name=\"fade-transition\" appear>\n      { props.modelValue && (\n        <div\n          class={[\n            'v-overlay__scrim',\n            props.color.backgroundColorClasses.value,\n          ]}\n          style={ props.color.backgroundColorStyles.value }\n          { ...rest }\n        />\n      )}\n    </Transition>\n  )\n}\n\nexport type OverlaySlots = {\n  default: { isActive: Ref<boolean> }\n  activator: { isActive: boolean, props: Record<string, any>, targetRef: TemplateRef }\n}\n\nexport const makeVOverlayProps = propsFactory({\n  absolute: Boolean,\n  attach: [Boolean, String, Object] as PropType<boolean | string | Element>,\n  closeOnBack: {\n    type: Boolean,\n    default: true,\n  },\n  contained: Boolean,\n  contentClass: null,\n  contentProps: null,\n  disabled: Boolean,\n  opacity: [Number, String],\n  noClickAnimation: Boolean,\n  modelValue: Boolean,\n  persistent: Boolean,\n  scrim: {\n    type: [Boolean, String],\n    default: true,\n  },\n  zIndex: {\n    type: [Number, String],\n    default: 2000,\n  },\n\n  ...makeActivatorProps(),\n  ...makeComponentProps(),\n  ...makeDimensionProps(),\n  ...makeLazyProps(),\n  ...makeLocationStrategyProps(),\n  ...makeScrollStrategyProps(),\n  ...makeThemeProps(),\n  ...makeTransitionProps(),\n}, 'VOverlay')\n\nexport const VOverlay = genericComponent<OverlaySlots>()({\n  name: 'VOverlay',\n\n  directives: { ClickOutside },\n\n  inheritAttrs: false,\n\n  props: {\n    _disableGlobalStack: Boolean,\n\n    ...makeVOverlayProps(),\n  },\n\n  emits: {\n    'click:outside': (e: MouseEvent) => true,\n    'update:modelValue': (value: boolean) => true,\n    afterEnter: () => true,\n    afterLeave: () => true,\n  },\n\n  setup (props, { slots, attrs, emit }) {\n    const vm = getCurrentInstance('VOverlay')\n    const root = ref<HTMLElement>()\n    const scrimEl = ref<HTMLElement>()\n    const contentEl = ref<HTMLElement>()\n    const model = useProxiedModel(props, 'modelValue')\n    const isActive = computed({\n      get: () => model.value,\n      set: v => {\n        if (!(v && props.disabled)) model.value = v\n      },\n    })\n    const { themeClasses } = provideTheme(props)\n    const { rtlClasses, isRtl } = useRtl()\n    const { hasContent, onAfterLeave: _onAfterLeave } = useLazy(props, isActive)\n    const scrimColor = useBackgroundColor(computed(() => {\n      return typeof props.scrim === 'string' ? props.scrim : null\n    }))\n    const { globalTop, localTop, stackStyles } = useStack(isActive, toRef(props, 'zIndex'), props._disableGlobalStack)\n    const {\n      activatorEl, activatorRef,\n      target, targetEl, targetRef,\n      activatorEvents,\n      contentEvents,\n      scrimEvents,\n    } = useActivator(props, { isActive, isTop: localTop, contentEl })\n    const { teleportTarget } = useTeleport(() => {\n      const target = props.attach || props.contained\n      if (target) return target\n      const rootNode = activatorEl?.value?.getRootNode() || vm.proxy?.$el?.getRootNode()\n      if (rootNode instanceof ShadowRoot) return rootNode\n      return false\n    })\n    const { dimensionStyles } = useDimension(props)\n    const isMounted = useHydration()\n    const { scopeId } = useScopeId()\n\n    watch(() => props.disabled, v => {\n      if (v) isActive.value = false\n    })\n\n    const { contentStyles, updateLocation } = useLocationStrategies(props, {\n      isRtl,\n      contentEl,\n      target,\n      isActive,\n    })\n    useScrollStrategies(props, {\n      root,\n      contentEl,\n      targetEl,\n      isActive,\n      updateLocation,\n    })\n\n    function onClickOutside (e: MouseEvent) {\n      emit('click:outside', e)\n\n      if (!props.persistent) isActive.value = false\n      else animateClick()\n    }\n\n    function closeConditional (e: Event) {\n      return isActive.value && globalTop.value && (\n        // If using scrim, only close if clicking on it rather than anything opened on top\n        !props.scrim || e.target === scrimEl.value || (e instanceof MouseEvent && e.shadowTarget === scrimEl.value)\n      )\n    }\n\n    IN_BROWSER && watch(isActive, val => {\n      if (val) {\n        window.addEventListener('keydown', onKeydown)\n      } else {\n        window.removeEventListener('keydown', onKeydown)\n      }\n    }, { immediate: true })\n\n    onBeforeUnmount(() => {\n      if (!IN_BROWSER) return\n\n      window.removeEventListener('keydown', onKeydown)\n    })\n\n    function onKeydown (e: KeyboardEvent) {\n      if (e.key === 'Escape' && globalTop.value) {\n        if (!props.persistent) {\n          isActive.value = false\n          if (contentEl.value?.contains(document.activeElement)) {\n            activatorEl.value?.focus()\n          }\n        } else animateClick()\n      }\n    }\n\n    const router = useRouter()\n    useToggleScope(() => props.closeOnBack, () => {\n      useBackButton(router, next => {\n        if (globalTop.value && isActive.value) {\n          next(false)\n          if (!props.persistent) isActive.value = false\n          else animateClick()\n        } else {\n          next()\n        }\n      })\n    })\n\n    const top = ref<number>()\n    watch(() => isActive.value && (props.absolute || props.contained) && teleportTarget.value == null, val => {\n      if (val) {\n        const scrollParent = getScrollParent(root.value)\n        if (scrollParent && scrollParent !== document.scrollingElement) {\n          top.value = scrollParent.scrollTop\n        }\n      }\n    })\n\n    // Add a quick \"bounce\" animation to the content\n    function animateClick () {\n      if (props.noClickAnimation) return\n\n      contentEl.value && animate(contentEl.value, [\n        { transformOrigin: 'center' },\n        { transform: 'scale(1.03)' },\n        { transformOrigin: 'center' },\n      ], {\n        duration: 150,\n        easing: standardEasing,\n      })\n    }\n\n    function onAfterEnter () {\n      emit('afterEnter')\n    }\n\n    function onAfterLeave () {\n      _onAfterLeave()\n      emit('afterLeave')\n    }\n\n    useRender(() => (\n      <>\n        { slots.activator?.({\n          isActive: isActive.value,\n          targetRef,\n          props: mergeProps({\n            ref: activatorRef,\n          }, activatorEvents.value, props.activatorProps),\n        })}\n\n        { isMounted.value && hasContent.value && (\n          <Teleport\n            disabled={ !teleportTarget.value }\n            to={ teleportTarget.value }\n          >\n            <div\n              class={[\n                'v-overlay',\n                {\n                  'v-overlay--absolute': props.absolute || props.contained,\n                  'v-overlay--active': isActive.value,\n                  'v-overlay--contained': props.contained,\n                },\n                themeClasses.value,\n                rtlClasses.value,\n                props.class,\n              ]}\n              style={[\n                stackStyles.value,\n                {\n                  '--v-overlay-opacity': props.opacity,\n                  top: convertToUnit(top.value),\n                },\n                props.style,\n              ]}\n              ref={ root }\n              { ...scopeId }\n              { ...attrs }\n            >\n              <Scrim\n                color={ scrimColor }\n                modelValue={ isActive.value && !!props.scrim }\n                ref={ scrimEl }\n                { ...scrimEvents.value }\n              />\n              <MaybeTransition\n                appear\n                persisted\n                transition={ props.transition }\n                target={ target.value }\n                onAfterEnter={ onAfterEnter }\n                onAfterLeave={ onAfterLeave }\n              >\n                <div\n                  ref={ contentEl }\n                  v-show={ isActive.value }\n                  v-click-outside={{ handler: onClickOutside, closeConditional, include: () => [activatorEl.value] }}\n                  class={[\n                    'v-overlay__content',\n                    props.contentClass,\n                  ]}\n                  style={[\n                    dimensionStyles.value,\n                    contentStyles.value,\n                  ]}\n                  { ...contentEvents.value }\n                  { ...props.contentProps }\n                >\n                  { slots.default?.({ isActive }) }\n                </div>\n              </MaybeTransition>\n            </div>\n          </Teleport>\n        )}\n      </>\n    ))\n\n    return {\n      activatorEl,\n      scrimEl,\n      target,\n      animateClick,\n      contentEl,\n      globalTop,\n      localTop,\n      updateLocation,\n    }\n  },\n})\n\nexport type VOverlay = InstanceType<typeof VOverlay>\n", "// Types\nimport type { ParsedAnchor } from '@/util'\nimport type { Box } from '@/util/box'\n\ntype Point = { x: number, y: number }\ndeclare class As<T extends string> {\n  private as: T\n}\ntype ElementPoint = Point & As<'element'>\ntype ViewportPoint = Point & As<'viewport'>\ntype Offset = Point & As<'offset'>\n\n/** Convert a point in local space to viewport space */\nexport function elementToViewport (point: ElementPoint, offset: Offset | Box) {\n  return {\n    x: point.x + offset.x,\n    y: point.y + offset.y,\n  } as ViewportPoint\n}\n\n/** Convert a point in viewport space to local space */\nexport function viewportToElement (point: ViewportPoint, offset: Offset | Box) {\n  return {\n    x: point.x - offset.x,\n    y: point.y - offset.y,\n  } as ElementPoint\n}\n\n/** Get the difference between two points */\nexport function getOffset<T extends Point> (a: T, b: T) {\n  return {\n    x: a.x - b.x,\n    y: a.y - b.y,\n  } as Offset\n}\n\n/** Convert an anchor object to a point in local space */\nexport function anchorToPoint (anchor: ParsedAnchor, box: Box): ViewportPoint {\n  if (anchor.side === 'top' || anchor.side === 'bottom') {\n    const { side, align } = anchor\n\n    const x: number =\n      align === 'left' ? 0\n      : align === 'center' ? box.width / 2\n      : align === 'right' ? box.width\n      : align\n    const y: number =\n      side === 'top' ? 0\n      : side === 'bottom' ? box.height\n      : side\n\n    return elementToViewport({ x, y } as ElementPoint, box)\n  } else if (anchor.side === 'left' || anchor.side === 'right') {\n    const { side, align } = anchor\n\n    const x: number =\n      side === 'left' ? 0\n      : side === 'right' ? box.width\n      : side\n    const y: number =\n      align === 'top' ? 0\n      : align === 'center' ? box.height / 2\n      : align === 'bottom' ? box.height\n      : align\n\n    return elementToViewport({ x, y } as ElementPoint, box)\n  }\n\n  return elementToViewport({\n    x: box.width / 2,\n    y: box.height / 2,\n  } as ElementPoint, box)\n}\n", "// Composables\nimport { useToggleScope } from '@/composables/toggleScope'\n\n// Utilities\nimport { computed, nextTick, onScopeDispose, ref, watch } from 'vue'\nimport { anchorToPoint, getOffset } from './util/point'\nimport {\n  clamp,\n  consoleError,\n  convertToUnit,\n  destructComputed,\n  flipAlign,\n  flipCorner,\n  flipSide,\n  getAxis,\n  getScrollParents,\n  IN_BROWSER,\n  isFixedPosition,\n  nullifyTransforms,\n  parseAnchor,\n  propsFactory,\n} from '@/util'\nimport { Box, getOverflow, getTargetBox } from '@/util/box'\n\n// Types\nimport type { PropType, Ref } from 'vue'\nimport type { Anchor } from '@/util'\n\nexport interface LocationStrategyData {\n  contentEl: Ref<HTMLElement | undefined>\n  target: Ref<HTMLElement | [x: number, y: number] | undefined>\n  isActive: Ref<boolean>\n  isRtl: Ref<boolean>\n}\n\ntype LocationStrategyFn = (\n  data: LocationStrategyData,\n  props: StrategyProps,\n  contentStyles: Ref<Record<string, string>>\n) => undefined | { updateLocation: (e?: Event) => void }\n\nconst locationStrategies = {\n  static: staticLocationStrategy, // specific viewport position, usually centered\n  connected: connectedLocationStrategy, // connected to a certain element\n}\n\nexport interface StrategyProps {\n  locationStrategy: keyof typeof locationStrategies | LocationStrategyFn\n  location: Anchor\n  origin: Anchor | 'auto' | 'overlap'\n  offset?: number | string | number[]\n  maxHeight?: number | string\n  maxWidth?: number | string\n  minHeight?: number | string\n  minWidth?: number | string\n}\n\nexport const makeLocationStrategyProps = propsFactory({\n  locationStrategy: {\n    type: [String, Function] as PropType<StrategyProps['locationStrategy']>,\n    default: 'static',\n    validator: (val: any) => typeof val === 'function' || val in locationStrategies,\n  },\n  location: {\n    type: String as PropType<StrategyProps['location']>,\n    default: 'bottom',\n  },\n  origin: {\n    type: String as PropType<StrategyProps['origin']>,\n    default: 'auto',\n  },\n  offset: [Number, String, Array] as PropType<StrategyProps['offset']>,\n}, 'VOverlay-location-strategies')\n\nexport function useLocationStrategies (\n  props: StrategyProps,\n  data: LocationStrategyData\n) {\n  const contentStyles = ref({})\n  const updateLocation = ref<(e: Event) => void>()\n\n  if (IN_BROWSER) {\n    useToggleScope(() => !!(data.isActive.value && props.locationStrategy), reset => {\n      watch(() => props.locationStrategy, reset)\n      onScopeDispose(() => {\n        window.removeEventListener('resize', onResize)\n        updateLocation.value = undefined\n      })\n\n      window.addEventListener('resize', onResize, { passive: true })\n\n      if (typeof props.locationStrategy === 'function') {\n        updateLocation.value = props.locationStrategy(data, props, contentStyles)?.updateLocation\n      } else {\n        updateLocation.value = locationStrategies[props.locationStrategy](data, props, contentStyles)?.updateLocation\n      }\n    })\n  }\n\n  function onResize (e: Event) {\n    updateLocation.value?.(e)\n  }\n\n  return {\n    contentStyles,\n    updateLocation,\n  }\n}\n\nfunction staticLocationStrategy () {\n  // TODO\n}\n\n/** Get size of element ignoring max-width/max-height */\nfunction getIntrinsicSize (el: HTMLElement, isRtl: boolean) {\n  // const scrollables = new Map<Element, [number, number]>()\n  // el.querySelectorAll('*').forEach(el => {\n  //   const x = el.scrollLeft\n  //   const y = el.scrollTop\n  //   if (x || y) {\n  //     scrollables.set(el, [x, y])\n  //   }\n  // })\n\n  // const initialMaxWidth = el.style.maxWidth\n  // const initialMaxHeight = el.style.maxHeight\n  // el.style.removeProperty('max-width')\n  // el.style.removeProperty('max-height')\n\n  /* eslint-disable-next-line sonarjs/prefer-immediate-return */\n  const contentBox = nullifyTransforms(el)\n\n  if (isRtl) {\n    contentBox.x += parseFloat(el.style.right || 0)\n  } else {\n    contentBox.x -= parseFloat(el.style.left || 0)\n  }\n  contentBox.y -= parseFloat(el.style.top || 0)\n\n  // el.style.maxWidth = initialMaxWidth\n  // el.style.maxHeight = initialMaxHeight\n  // scrollables.forEach((position, el) => {\n  //   el.scrollTo(...position)\n  // })\n\n  return contentBox\n}\n\nfunction connectedLocationStrategy (data: LocationStrategyData, props: StrategyProps, contentStyles: Ref<Record<string, string>>) {\n  const activatorFixed = Array.isArray(data.target.value) || isFixedPosition(data.target.value)\n  if (activatorFixed) {\n    Object.assign(contentStyles.value, {\n      position: 'fixed',\n      top: 0,\n      [data.isRtl.value ? 'right' : 'left']: 0,\n    })\n  }\n\n  const { preferredAnchor, preferredOrigin } = destructComputed(() => {\n    const parsedAnchor = parseAnchor(props.location, data.isRtl.value)\n    const parsedOrigin =\n      props.origin === 'overlap' ? parsedAnchor\n      : props.origin === 'auto' ? flipSide(parsedAnchor)\n      : parseAnchor(props.origin, data.isRtl.value)\n\n    // Some combinations of props may produce an invalid origin\n    if (parsedAnchor.side === parsedOrigin.side && parsedAnchor.align === flipAlign(parsedOrigin).align) {\n      return {\n        preferredAnchor: flipCorner(parsedAnchor),\n        preferredOrigin: flipCorner(parsedOrigin),\n      }\n    } else {\n      return {\n        preferredAnchor: parsedAnchor,\n        preferredOrigin: parsedOrigin,\n      }\n    }\n  })\n\n  const [minWidth, minHeight, maxWidth, maxHeight] =\n    (['minWidth', 'minHeight', 'maxWidth', 'maxHeight'] as const).map(key => {\n      return computed(() => {\n        const val = parseFloat(props[key]!)\n        return isNaN(val) ? Infinity : val\n      })\n    })\n\n  const offset = computed(() => {\n    if (Array.isArray(props.offset)) {\n      return props.offset\n    }\n    if (typeof props.offset === 'string') {\n      const offset = props.offset.split(' ').map(parseFloat)\n      if (offset.length < 2) offset.push(0)\n      return offset\n    }\n    return typeof props.offset === 'number' ? [props.offset, 0] : [0, 0]\n  })\n\n  let observe = false\n  const observer = new ResizeObserver(() => {\n    if (observe) updateLocation()\n  })\n\n  watch([data.target, data.contentEl], ([newTarget, newContentEl], [oldTarget, oldContentEl]) => {\n    if (oldTarget && !Array.isArray(oldTarget)) observer.unobserve(oldTarget)\n    if (newTarget && !Array.isArray(newTarget)) observer.observe(newTarget)\n\n    if (oldContentEl) observer.unobserve(oldContentEl)\n    if (newContentEl) observer.observe(newContentEl)\n  }, {\n    immediate: true,\n  })\n\n  onScopeDispose(() => {\n    observer.disconnect()\n  })\n\n  // eslint-disable-next-line max-statements\n  function updateLocation () {\n    observe = false\n    requestAnimationFrame(() => observe = true)\n\n    if (!data.target.value || !data.contentEl.value) return\n\n    const targetBox = getTargetBox(data.target.value)\n    const contentBox = getIntrinsicSize(data.contentEl.value, data.isRtl.value)\n    const scrollParents = getScrollParents(data.contentEl.value)\n    const viewportMargin = 12\n\n    if (!scrollParents.length) {\n      scrollParents.push(document.documentElement)\n      if (!(data.contentEl.value.style.top && data.contentEl.value.style.left)) {\n        contentBox.x -= parseFloat(document.documentElement.style.getPropertyValue('--v-body-scroll-x') || 0)\n        contentBox.y -= parseFloat(document.documentElement.style.getPropertyValue('--v-body-scroll-y') || 0)\n      }\n    }\n\n    const viewport = scrollParents.reduce<Box>((box: Box | undefined, el) => {\n      const rect = el.getBoundingClientRect()\n      const scrollBox = new Box({\n        x: el === document.documentElement ? 0 : rect.x,\n        y: el === document.documentElement ? 0 : rect.y,\n        width: el.clientWidth,\n        height: el.clientHeight,\n      })\n\n      if (box) {\n        return new Box({\n          x: Math.max(box.left, scrollBox.left),\n          y: Math.max(box.top, scrollBox.top),\n          width: Math.min(box.right, scrollBox.right) - Math.max(box.left, scrollBox.left),\n          height: Math.min(box.bottom, scrollBox.bottom) - Math.max(box.top, scrollBox.top),\n        })\n      }\n      return scrollBox\n    }, undefined!)\n    viewport.x += viewportMargin\n    viewport.y += viewportMargin\n    viewport.width -= viewportMargin * 2\n    viewport.height -= viewportMargin * 2\n\n    let placement = {\n      anchor: preferredAnchor.value,\n      origin: preferredOrigin.value,\n    }\n\n    function checkOverflow (_placement: typeof placement) {\n      const box = new Box(contentBox)\n      const targetPoint = anchorToPoint(_placement.anchor, targetBox)\n      const contentPoint = anchorToPoint(_placement.origin, box)\n\n      let { x, y } = getOffset(targetPoint, contentPoint)\n\n      switch (_placement.anchor.side) {\n        case 'top': y -= offset.value[0]; break\n        case 'bottom': y += offset.value[0]; break\n        case 'left': x -= offset.value[0]; break\n        case 'right': x += offset.value[0]; break\n      }\n\n      switch (_placement.anchor.align) {\n        case 'top': y -= offset.value[1]; break\n        case 'bottom': y += offset.value[1]; break\n        case 'left': x -= offset.value[1]; break\n        case 'right': x += offset.value[1]; break\n      }\n\n      box.x += x\n      box.y += y\n\n      box.width = Math.min(box.width, maxWidth.value)\n      box.height = Math.min(box.height, maxHeight.value)\n\n      const overflows = getOverflow(box, viewport)\n\n      return { overflows, x, y }\n    }\n\n    let x = 0; let y = 0\n    const available = { x: 0, y: 0 }\n    const flipped = { x: false, y: false }\n    let resets = -1\n    while (true) {\n      if (resets++ > 10) {\n        consoleError('Infinite loop detected in connectedLocationStrategy')\n        break\n      }\n\n      const { x: _x, y: _y, overflows } = checkOverflow(placement)\n\n      x += _x\n      y += _y\n\n      contentBox.x += _x\n      contentBox.y += _y\n\n      // flip\n      {\n        const axis = getAxis(placement.anchor)\n        const hasOverflowX = overflows.x.before || overflows.x.after\n        const hasOverflowY = overflows.y.before || overflows.y.after\n\n        let reset = false\n        ;['x', 'y'].forEach(key => {\n          if (\n            (key === 'x' && hasOverflowX && !flipped.x) ||\n            (key === 'y' && hasOverflowY && !flipped.y)\n          ) {\n            const newPlacement = { anchor: { ...placement.anchor }, origin: { ...placement.origin } }\n            const flip = key === 'x'\n              ? axis === 'y' ? flipAlign : flipSide\n              : axis === 'y' ? flipSide : flipAlign\n            newPlacement.anchor = flip(newPlacement.anchor)\n            newPlacement.origin = flip(newPlacement.origin)\n            const { overflows: newOverflows } = checkOverflow(newPlacement)\n            if (\n              (newOverflows[key].before <= overflows[key].before &&\n                newOverflows[key].after <= overflows[key].after) ||\n              (newOverflows[key].before + newOverflows[key].after <\n                (overflows[key].before + overflows[key].after) / 2)\n            ) {\n              placement = newPlacement\n              reset = flipped[key] = true\n            }\n          }\n        })\n        if (reset) continue\n      }\n\n      // shift\n      if (overflows.x.before) {\n        x += overflows.x.before\n        contentBox.x += overflows.x.before\n      }\n      if (overflows.x.after) {\n        x -= overflows.x.after\n        contentBox.x -= overflows.x.after\n      }\n      if (overflows.y.before) {\n        y += overflows.y.before\n        contentBox.y += overflows.y.before\n      }\n      if (overflows.y.after) {\n        y -= overflows.y.after\n        contentBox.y -= overflows.y.after\n      }\n\n      // size\n      {\n        const overflows = getOverflow(contentBox, viewport)\n        available.x = viewport.width - overflows.x.before - overflows.x.after\n        available.y = viewport.height - overflows.y.before - overflows.y.after\n\n        x += overflows.x.before\n        contentBox.x += overflows.x.before\n        y += overflows.y.before\n        contentBox.y += overflows.y.before\n      }\n\n      break\n    }\n\n    const axis = getAxis(placement.anchor)\n\n    Object.assign(contentStyles.value, {\n      '--v-overlay-anchor-origin': `${placement.anchor.side} ${placement.anchor.align}`,\n      transformOrigin: `${placement.origin.side} ${placement.origin.align}`,\n      // transform: `translate(${pixelRound(x)}px, ${pixelRound(y)}px)`,\n      top: convertToUnit(pixelRound(y)),\n      left: data.isRtl.value ? undefined : convertToUnit(pixelRound(x)),\n      right: data.isRtl.value ? convertToUnit(pixelRound(-x)) : undefined,\n      minWidth: convertToUnit(axis === 'y' ? Math.min(minWidth.value, targetBox.width) : minWidth.value),\n      maxWidth: convertToUnit(pixelCeil(clamp(available.x, minWidth.value === Infinity ? 0 : minWidth.value, maxWidth.value))),\n      maxHeight: convertToUnit(pixelCeil(clamp(available.y, minHeight.value === Infinity ? 0 : minHeight.value, maxHeight.value))),\n    })\n\n    return {\n      available,\n      contentBox,\n    }\n  }\n\n  watch(\n    () => [\n      preferredAnchor.value,\n      preferredOrigin.value,\n      props.offset,\n      props.minWidth,\n      props.minHeight,\n      props.maxWidth,\n      props.maxHeight,\n    ],\n    () => updateLocation(),\n  )\n\n  nextTick(() => {\n    const result = updateLocation()\n\n    // TODO: overflowing content should only require a single updateLocation call\n    // Icky hack to make sure the content is positioned consistently\n    if (!result) return\n    const { available, contentBox } = result\n    if (contentBox.height > available.y) {\n      requestAnimationFrame(() => {\n        updateLocation()\n        requestAnimationFrame(() => {\n          updateLocation()\n        })\n      })\n    }\n  })\n\n  return { updateLocation }\n}\n\nfunction pixelRound (val: number) {\n  return Math.round(val * devicePixelRatio) / devicePixelRatio\n}\n\nfunction pixelCeil (val: number) {\n  return Math.ceil(val * devicePixelRatio) / devicePixelRatio\n}\n", "let clean = true\nconst frames = [] as any[]\n\n/**\n * Schedule a task to run in an animation frame on its own\n * This is useful for heavy tasks that may cause jank if all ran together\n */\nexport function requestNewFrame (cb: () => void) {\n  if (!clean || frames.length) {\n    frames.push(cb)\n    run()\n  } else {\n    clean = false\n    cb()\n    run()\n  }\n}\n\nlet raf = -1\nfunction run () {\n  cancelAnimationFrame(raf)\n  raf = requestAnimationFrame(() => {\n    const frame = frames.shift()\n    if (frame) frame()\n\n    if (frames.length) run()\n    else clean = true\n  })\n}\n", "// Utilities\nimport { effectScope, onScopeDispose, watchEffect } from 'vue'\nimport { requestNewFrame } from './requestNewFrame'\nimport { convertToUnit, getScrollParents, hasScrollbar, IN_BROWSER, propsFactory } from '@/util'\n\n// Types\nimport type { EffectScope, PropType, Ref } from 'vue'\n\nexport interface ScrollStrategyData {\n  root: Ref<HTMLElement | undefined>\n  contentEl: Ref<HTMLElement | undefined>\n  targetEl: Ref<HTMLElement | undefined>\n  isActive: Ref<boolean>\n  updateLocation: Ref<((e: Event) => void) | undefined>\n}\n\ntype ScrollStrategyFn = (data: ScrollStrategyData, props: StrategyProps, scope: EffectScope) => void\n\nconst scrollStrategies = {\n  none: null,\n  close: closeScrollStrategy,\n  block: blockScrollStrategy,\n  reposition: repositionScrollStrategy,\n}\n\nexport interface StrategyProps {\n  scrollStrategy: keyof typeof scrollStrategies | ScrollStrategyFn\n  contained: boolean | undefined\n}\n\nexport const makeScrollStrategyProps = propsFactory({\n  scrollStrategy: {\n    type: [String, Function] as PropType<StrategyProps['scrollStrategy']>,\n    default: 'block',\n    validator: (val: any) => typeof val === 'function' || val in scrollStrategies,\n  },\n}, 'VOverlay-scroll-strategies')\n\nexport function useScrollStrategies (\n  props: StrategyProps,\n  data: ScrollStrategyData\n) {\n  if (!IN_BROWSER) return\n\n  let scope: EffectScope | undefined\n  watchEffect(async () => {\n    scope?.stop()\n\n    if (!(data.isActive.value && props.scrollStrategy)) return\n\n    scope = effectScope()\n    await new Promise(resolve => setTimeout(resolve))\n    scope.active && scope.run(() => {\n      if (typeof props.scrollStrategy === 'function') {\n        props.scrollStrategy(data, props, scope!)\n      } else {\n        scrollStrategies[props.scrollStrategy]?.(data, props, scope!)\n      }\n    })\n  })\n\n  onScopeDispose(() => {\n    scope?.stop()\n  })\n}\n\nfunction closeScrollStrategy (data: ScrollStrategyData) {\n  function onScroll (e: Event) {\n    data.isActive.value = false\n  }\n\n  bindScroll(data.targetEl.value ?? data.contentEl.value, onScroll)\n}\n\nfunction blockScrollStrategy (data: ScrollStrategyData, props: StrategyProps) {\n  const offsetParent = data.root.value?.offsetParent\n  const scrollElements = [...new Set([\n    ...getScrollParents(data.targetEl.value, props.contained ? offsetParent : undefined),\n    ...getScrollParents(data.contentEl.value, props.contained ? offsetParent : undefined),\n  ])].filter(el => !el.classList.contains('v-overlay-scroll-blocked'))\n  const scrollbarWidth = window.innerWidth - document.documentElement.offsetWidth\n\n  const scrollableParent = (el => hasScrollbar(el) && el)(offsetParent || document.documentElement)\n  if (scrollableParent) {\n    data.root.value!.classList.add('v-overlay--scroll-blocked')\n  }\n\n  scrollElements.forEach((el, i) => {\n    el.style.setProperty('--v-body-scroll-x', convertToUnit(-el.scrollLeft))\n    el.style.setProperty('--v-body-scroll-y', convertToUnit(-el.scrollTop))\n\n    if (el !== document.documentElement) {\n      el.style.setProperty('--v-scrollbar-offset', convertToUnit(scrollbarWidth))\n    }\n\n    el.classList.add('v-overlay-scroll-blocked')\n  })\n\n  onScopeDispose(() => {\n    scrollElements.forEach((el, i) => {\n      const x = parseFloat(el.style.getPropertyValue('--v-body-scroll-x'))\n      const y = parseFloat(el.style.getPropertyValue('--v-body-scroll-y'))\n\n      const scrollBehavior = el.style.scrollBehavior\n\n      el.style.scrollBehavior = 'auto'\n      el.style.removeProperty('--v-body-scroll-x')\n      el.style.removeProperty('--v-body-scroll-y')\n      el.style.removeProperty('--v-scrollbar-offset')\n      el.classList.remove('v-overlay-scroll-blocked')\n\n      el.scrollLeft = -x\n      el.scrollTop = -y\n\n      el.style.scrollBehavior = scrollBehavior\n    })\n    if (scrollableParent) {\n      data.root.value!.classList.remove('v-overlay--scroll-blocked')\n    }\n  })\n}\n\nfunction repositionScrollStrategy (data: ScrollStrategyData, props: StrategyProps, scope: EffectScope) {\n  let slow = false\n  let raf = -1\n  let ric = -1\n\n  function update (e: Event) {\n    requestNewFrame(() => {\n      const start = performance.now()\n      data.updateLocation.value?.(e)\n      const time = performance.now() - start\n      slow = time / (1000 / 60) > 2\n    })\n  }\n\n  ric = (typeof requestIdleCallback === 'undefined' ? (cb: Function) => cb() : requestIdleCallback)(() => {\n    scope.run(() => {\n      bindScroll(data.targetEl.value ?? data.contentEl.value, e => {\n        if (slow) {\n          // If the position calculation is slow,\n          // defer updates until scrolling is finished.\n          // Browsers usually fire one scroll event per frame so\n          // we just wait until we've got two frames without an event\n          cancelAnimationFrame(raf)\n          raf = requestAnimationFrame(() => {\n            raf = requestAnimationFrame(() => {\n              update(e)\n            })\n          })\n        } else {\n          update(e)\n        }\n      })\n    })\n  })\n\n  onScopeDispose(() => {\n    typeof cancelIdleCallback !== 'undefined' && cancelIdleCallback(ric)\n    cancelAnimationFrame(raf)\n  })\n}\n\n/** @private */\nfunction bindScroll (el: HTMLElement | undefined, onScroll: (e: Event) => void) {\n  const scrollElements = [document, ...getScrollParents(el)]\n  scrollElements.forEach(el => {\n    el.addEventListener('scroll', onScroll, { passive: true })\n  })\n\n  onScopeDispose(() => {\n    scrollElements.forEach(el => {\n      el.removeEventListener('scroll', onScroll)\n    })\n  })\n}\n", "// Types\nimport type { InjectionKey } from 'vue'\n\ninterface MenuProvide {\n  register (): void\n  unregister (): void\n  closeParents (e?: MouseEvent): void\n}\n\nexport const VMenuSymbol: InjectionKey<MenuProvide> = Symbol.for('vuetify:v-menu')\n", "// Utilities\nimport { defer, propsFactory } from '@/util'\n\n// Types\nexport interface DelayProps {\n  closeDelay?: number | string\n  openDelay?: number | string\n}\n\n// Composables\nexport const makeDelayProps = propsFactory({\n  closeDelay: [Number, String],\n  openDelay: [Number, String],\n}, 'delay')\n\nexport function useDelay (props: DelayProps, cb?: (value: boolean) => void) {\n  let clearDelay: (() => void) = () => {}\n\n  function runDelay (isOpening: boolean) {\n    clearDelay?.()\n\n    const delay = Number(isOpening ? props.openDelay : props.closeDelay)\n\n    return new Promise(resolve => {\n      clearDelay = defer(delay, () => {\n        cb?.(isOpening)\n        resolve(isOpening)\n      })\n    })\n  }\n\n  function runOpenDelay () {\n    return runDelay(true)\n  }\n\n  function runCloseDelay () {\n    return runDelay(false)\n  }\n\n  return {\n    clearDelay,\n    runOpenDelay,\n    runCloseDelay,\n  }\n}\n", "// Components\nimport { VMenuSymbol } from '@/components/VMenu/shared'\n\n// Composables\nimport { makeDelayProps, useDelay } from '@/composables/delay'\n\n// Utilities\nimport {\n  computed,\n  effectScope,\n  inject,\n  mergeProps,\n  nextTick,\n  onScopeDispose,\n  ref,\n  watch,\n  watchEffect,\n} from 'vue'\nimport {\n  bindProps,\n  getCurrentInstance,\n  IN_BROWSER,\n  matchesSelector,\n  propsFactory,\n  templateRef,\n  unbindProps,\n} from '@/util'\n\n// Types\nimport type {\n  ComponentInternalInstance,\n  ComponentPublicInstance,\n  EffectScope,\n  PropType,\n  Ref,\n} from 'vue'\nimport type { DelayProps } from '@/composables/delay'\n\ninterface ActivatorProps extends DelayProps {\n  target: 'parent' | 'cursor' | (string & {}) | Element | ComponentPublicInstance | [x: number, y: number] | undefined\n  activator: 'parent' | (string & {}) | Element | ComponentPublicInstance | undefined\n  activatorProps: Record<string, any>\n\n  openOnClick: boolean | undefined\n  openOnHover: boolean\n  openOnFocus: boolean | undefined\n\n  closeOnContentClick: boolean\n}\n\nexport const makeActivatorProps = propsFactory({\n  target: [String, Object] as PropType<ActivatorProps['target']>,\n  activator: [String, Object] as PropType<ActivatorProps['activator']>,\n  activatorProps: {\n    type: Object as PropType<ActivatorProps['activatorProps']>,\n    default: () => ({}),\n  },\n\n  openOnClick: {\n    type: Boolean,\n    default: undefined,\n  },\n  openOnHover: Boolean,\n  openOnFocus: {\n    type: Boolean,\n    default: undefined,\n  },\n\n  closeOnContentClick: Boolean,\n\n  ...makeDelayProps(),\n}, 'VOverlay-activator')\n\nexport function useActivator (\n  props: ActivatorProps,\n  { isActive, isTop, contentEl }: {\n    isActive: Ref<boolean>\n    isTop: Ref<boolean>\n    contentEl: Ref<HTMLElement | undefined>\n  }\n) {\n  const vm = getCurrentInstance('useActivator')\n  const activatorEl = ref<HTMLElement>()\n\n  let isHovered = false\n  let isFocused = false\n  let firstEnter = true\n\n  const openOnFocus = computed(() => props.openOnFocus || (props.openOnFocus == null && props.openOnHover))\n  const openOnClick = computed(() => props.openOnClick || (props.openOnClick == null && !props.openOnHover && !openOnFocus.value))\n\n  const { runOpenDelay, runCloseDelay } = useDelay(props, value => {\n    if (\n      value === (\n        (props.openOnHover && isHovered) ||\n        (openOnFocus.value && isFocused)\n      ) && !(props.openOnHover && isActive.value && !isTop.value)\n    ) {\n      if (isActive.value !== value) {\n        firstEnter = true\n      }\n      isActive.value = value\n    }\n  })\n\n  const cursorTarget = ref<[x: number, y: number]>()\n  const availableEvents = {\n    onClick: (e: MouseEvent) => {\n      e.stopPropagation()\n      activatorEl.value = (e.currentTarget || e.target) as HTMLElement\n      if (!isActive.value) {\n        cursorTarget.value = [e.clientX, e.clientY]\n      }\n      isActive.value = !isActive.value\n    },\n    onMouseenter: (e: MouseEvent) => {\n      if (e.sourceCapabilities?.firesTouchEvents) return\n\n      isHovered = true\n      activatorEl.value = (e.currentTarget || e.target) as HTMLElement\n      runOpenDelay()\n    },\n    onMouseleave: (e: MouseEvent) => {\n      isHovered = false\n      runCloseDelay()\n    },\n    onFocus: (e: FocusEvent) => {\n      if (matchesSelector(e.target as HTMLElement, ':focus-visible') === false) return\n\n      isFocused = true\n      e.stopPropagation()\n      activatorEl.value = (e.currentTarget || e.target) as HTMLElement\n\n      runOpenDelay()\n    },\n    onBlur: (e: FocusEvent) => {\n      isFocused = false\n      e.stopPropagation()\n\n      runCloseDelay()\n    },\n  }\n\n  const activatorEvents = computed(() => {\n    const events: Partial<typeof availableEvents> = {}\n\n    if (openOnClick.value) {\n      events.onClick = availableEvents.onClick\n    }\n    if (props.openOnHover) {\n      events.onMouseenter = availableEvents.onMouseenter\n      events.onMouseleave = availableEvents.onMouseleave\n    }\n    if (openOnFocus.value) {\n      events.onFocus = availableEvents.onFocus\n      events.onBlur = availableEvents.onBlur\n    }\n\n    return events\n  })\n\n  const contentEvents = computed(() => {\n    const events: Record<string, EventListener> = {}\n\n    if (props.openOnHover) {\n      events.onMouseenter = () => {\n        isHovered = true\n        runOpenDelay()\n      }\n      events.onMouseleave = () => {\n        isHovered = false\n        runCloseDelay()\n      }\n    }\n\n    if (openOnFocus.value) {\n      events.onFocusin = () => {\n        isFocused = true\n        runOpenDelay()\n      }\n      events.onFocusout = () => {\n        isFocused = false\n        runCloseDelay()\n      }\n    }\n\n    if (props.closeOnContentClick) {\n      const menu = inject(VMenuSymbol, null)\n      events.onClick = () => {\n        isActive.value = false\n        menu?.closeParents()\n      }\n    }\n\n    return events\n  })\n\n  const scrimEvents = computed(() => {\n    const events: Record<string, EventListener> = {}\n\n    if (props.openOnHover) {\n      events.onMouseenter = () => {\n        if (firstEnter) {\n          isHovered = true\n          firstEnter = false\n          runOpenDelay()\n        }\n      }\n      events.onMouseleave = () => {\n        isHovered = false\n        runCloseDelay()\n      }\n    }\n\n    return events\n  })\n\n  watch(isTop, val => {\n    if (val && (\n      (props.openOnHover && !isHovered && (!openOnFocus.value || !isFocused)) ||\n      (openOnFocus.value && !isFocused && (!props.openOnHover || !isHovered))\n    ) && !contentEl.value?.contains(document.activeElement)) {\n      isActive.value = false\n    }\n  })\n\n  watch(isActive, val => {\n    if (!val) {\n      setTimeout(() => {\n        cursorTarget.value = undefined\n      })\n    }\n  }, { flush: 'post' })\n\n  const activatorRef = templateRef()\n  watchEffect(() => {\n    if (!activatorRef.value) return\n\n    nextTick(() => {\n      activatorEl.value = activatorRef.el\n    })\n  })\n\n  const targetRef = templateRef()\n  const target = computed(() => {\n    if (props.target === 'cursor' && cursorTarget.value) return cursorTarget.value\n    if (targetRef.value) return targetRef.el\n    return getTarget(props.target, vm) || activatorEl.value\n  })\n  const targetEl = computed(() => {\n    return Array.isArray(target.value)\n      ? undefined\n      : target.value\n  })\n\n  let scope: EffectScope\n  watch(() => !!props.activator, val => {\n    if (val && IN_BROWSER) {\n      scope = effectScope()\n      scope.run(() => {\n        _useActivator(props, vm, { activatorEl, activatorEvents })\n      })\n    } else if (scope) {\n      scope.stop()\n    }\n  }, { flush: 'post', immediate: true })\n\n  onScopeDispose(() => {\n    scope?.stop()\n  })\n\n  return { activatorEl, activatorRef, target, targetEl, targetRef, activatorEvents, contentEvents, scrimEvents }\n}\n\nfunction _useActivator (\n  props: ActivatorProps,\n  vm: ComponentInternalInstance,\n  { activatorEl, activatorEvents }: Pick<ReturnType<typeof useActivator>, 'activatorEl' | 'activatorEvents'>\n) {\n  watch(() => props.activator, (val, oldVal) => {\n    if (oldVal && val !== oldVal) {\n      const activator = getActivator(oldVal)\n      activator && unbindActivatorProps(activator)\n    }\n    if (val) {\n      nextTick(() => bindActivatorProps())\n    }\n  }, { immediate: true })\n\n  watch(() => props.activatorProps, () => {\n    bindActivatorProps()\n  })\n\n  onScopeDispose(() => {\n    unbindActivatorProps()\n  })\n\n  function bindActivatorProps (el = getActivator(), _props = props.activatorProps) {\n    if (!el) return\n\n    bindProps(el, mergeProps(activatorEvents.value, _props))\n  }\n\n  function unbindActivatorProps (el = getActivator(), _props = props.activatorProps) {\n    if (!el) return\n\n    unbindProps(el, mergeProps(activatorEvents.value, _props))\n  }\n\n  function getActivator (selector = props.activator): HTMLElement | undefined {\n    const activator = getTarget(selector, vm)\n\n    // The activator should only be a valid element (Ignore comments and text nodes)\n    activatorEl.value = activator?.nodeType === Node.ELEMENT_NODE ? activator : undefined\n\n    return activatorEl.value\n  }\n}\n\nfunction getTarget<T extends 'parent' | string | Element | ComponentPublicInstance | [x: number, y: number] | undefined> (\n  selector: T,\n  vm: ComponentInternalInstance\n): HTMLElement | undefined | (T extends any[] ? [x: number, y: number] : never) {\n  if (!selector) return\n\n  let target\n  if (selector === 'parent') {\n    let el = vm?.proxy?.$el?.parentNode\n    while (el?.hasAttribute('data-no-activator')) {\n      el = el.parentNode\n    }\n    target = el\n  } else if (typeof selector === 'string') {\n    // Selector\n    target = document.querySelector(selector)\n  } else if ('$el' in selector) {\n    // Component (ref)\n    target = selector.$el\n  } else {\n    // HTMLElement | Element | [x, y]\n    target = selector\n  }\n\n  return target\n}\n", "// Composables\nimport { useDisplay } from '@/composables/display'\n\n// Utilities\nimport { onMounted, shallowRef } from 'vue'\nimport { IN_BROWSER } from '@/util'\n\nexport function useHydration () {\n  if (!IN_BROWSER) return shallowRef(false)\n\n  const { ssr } = useDisplay()\n\n  if (ssr) {\n    const isMounted = shallowRef(false)\n    onMounted(() => {\n      isMounted.value = true\n    })\n    return isMounted\n  } else {\n    return shallowRef(true)\n  }\n}\n", "// Utilities\nimport { computed, shallowRef, watch } from 'vue'\nimport { propsFactory } from '@/util'\n\n// Types\nimport type { Ref } from 'vue'\n\nexport const makeLazyProps = propsFactory({\n  eager: Boolean,\n}, 'lazy')\n\nexport function useLazy (props: { eager: boolean }, active: Ref<boolean>) {\n  const isBooted = shallowRef(false)\n  const hasContent = computed(() => isBooted.value || props.eager || active.value)\n\n  watch(active, () => isBooted.value = true)\n\n  function onAfterLeave () {\n    if (!props.eager) isBooted.value = false\n  }\n\n  return { isBooted, hasContent, onAfterLeave }\n}\n", "// Utilities\nimport { getCurrentInstance } from '@/util'\n\nexport function useScopeId () {\n  const vm = getCurrentInstance('useScopeId')\n\n  const scopeId = vm!.vnode.scopeId\n\n  return { scopeId: scopeId ? { [scopeId]: '' } : undefined }\n}\n", "// Composables\nimport { useToggleScope } from '@/composables/toggleScope'\n\n// Utilities\nimport { computed, inject, onScopeDispose, provide, reactive, readonly, shallowRef, toRaw, watchEffect } from 'vue'\nimport { getCurrentInstance } from '@/util'\n\n// Types\nimport type { InjectionKey, Ref } from 'vue'\n\nconst StackSymbol: InjectionKey<StackProvide> = Symbol.for('vuetify:stack')\n\ninterface StackProvide {\n  activeChildren: Set<number>\n}\n\nconst globalStack = reactive<[uid: number, zIndex: number][]>([])\n\nexport function useStack (\n  isActive: Readonly<Ref<boolean>>,\n  zIndex: Readonly<Ref<string | number>>,\n  disableGlobalStack: boolean\n) {\n  const vm = getCurrentInstance('useStack')\n  const createStackEntry = !disableGlobalStack\n\n  const parent = inject(StackSymbol, undefined)\n  const stack: StackProvide = reactive({\n    activeChildren: new Set<number>(),\n  })\n  provide(StackSymbol, stack)\n\n  const _zIndex = shallowRef(+zIndex.value)\n  useToggleScope(isActive, () => {\n    const lastZIndex = globalStack.at(-1)?.[1]\n    _zIndex.value = lastZIndex ? lastZIndex + 10 : +zIndex.value\n\n    if (createStackEntry) {\n      globalStack.push([vm.uid, _zIndex.value])\n    }\n\n    parent?.activeChildren.add(vm.uid)\n\n    onScopeDispose(() => {\n      if (createStackEntry) {\n        const idx = toRaw(globalStack).findIndex(v => v[0] === vm.uid)\n        globalStack.splice(idx, 1)\n      }\n\n      parent?.activeChildren.delete(vm.uid)\n    })\n  })\n\n  const globalTop = shallowRef(true)\n  if (createStackEntry) {\n    watchEffect(() => {\n      const _isTop = globalStack.at(-1)?.[0] === vm.uid\n      setTimeout(() => globalTop.value = _isTop)\n    })\n  }\n\n  const localTop = computed(() => !stack.activeChildren.size)\n\n  return {\n    globalTop: readonly(globalTop),\n    localTop,\n    stackStyles: computed(() => ({ zIndex: _zIndex.value })),\n  }\n}\n", "// Utilities\nimport { computed, warn } from 'vue'\nimport { IN_BROWSER } from '@/util'\n\nexport function useTeleport (target: () => (boolean | string | ParentNode)) {\n  const teleportTarget = computed(() => {\n    const _target = target()\n\n    if (_target === true || !IN_BROWSER) return undefined\n\n    const targetElement =\n      _target === false ? document.body\n      : typeof _target === 'string' ? document.querySelector(_target)\n      : _target\n\n    if (targetElement == null) {\n      warn(`Unable to locate target ${_target}`)\n      return undefined\n    }\n\n    let container = [...targetElement.children].find(el => el.matches('.v-overlay-container'))\n\n    if (!container) {\n      container = document.createElement('div')\n      container.className = 'v-overlay-container'\n      targetElement.appendChild(container)\n    }\n\n    return container\n  })\n\n  return { teleportTarget }\n}\n", "// Utilities\nimport { attachedRoot } from '@/util'\n\n// Types\nimport type { DirectiveBinding } from 'vue'\n\ninterface ClickOutsideBindingArgs {\n  handler: (e: MouseEvent) => void\n  closeConditional?: (e: Event) => boolean\n  include?: () => HTMLElement[]\n}\n\ninterface ClickOutsideDirectiveBinding extends DirectiveBinding {\n  value: ((e: MouseEvent) => void) | ClickOutsideBindingArgs\n}\n\nfunction defaultConditional () {\n  return true\n}\n\nfunction checkEvent (e: MouseEvent, el: HTMLElement, binding: ClickOutsideDirectiveBinding): boolean {\n  // The include element callbacks below can be expensive\n  // so we should avoid calling them when we're not active.\n  // Explicitly check for false to allow fallback compatibility\n  // with non-toggleable components\n  if (!e || checkIsActive(e, binding) === false) return false\n\n  // If we're clicking inside the shadowroot, then the app root doesn't get the same\n  // level of introspection as to _what_ we're clicking. We want to check to see if\n  // our target is the shadowroot parent container, and if it is, ignore.\n  const root = attachedRoot(el)\n  if (\n    typeof ShadowRoot !== 'undefined' &&\n    root instanceof ShadowRoot &&\n    root.host === e.target\n  ) return false\n\n  // Check if additional elements were passed to be included in check\n  // (click must be outside all included elements, if any)\n  const elements = ((typeof binding.value === 'object' && binding.value.include) || (() => []))()\n  // Add the root element for the component this directive was defined on\n  elements.push(el)\n\n  // Check if it's a click outside our elements, and then if our callback returns true.\n  // Non-toggleable components should take action in their callback and return falsy.\n  // Toggleable can return true if it wants to deactivate.\n  // Note that, because we're in the capture phase, this callback will occur before\n  // the bubbling click event on any outside elements.\n  return !elements.some(el => el?.contains(e.target as Node))\n}\n\nfunction checkIsActive (e: MouseEvent, binding: ClickOutsideDirectiveBinding): boolean | void {\n  const isActive = (typeof binding.value === 'object' && binding.value.closeConditional) || defaultConditional\n\n  return isActive(e)\n}\n\nfunction directive (e: MouseEvent, el: HTMLElement, binding: ClickOutsideDirectiveBinding) {\n  const handler = typeof binding.value === 'function' ? binding.value : binding.value.handler\n\n  // Clicks in the Shadow DOM change their target while using setTimeout, so the original target is saved here\n  e.shadowTarget = e.target\n\n  el._clickOutside!.lastMousedownWasOutside && checkEvent(e, el, binding) && setTimeout(() => {\n    checkIsActive(e, binding) && handler && handler(e)\n  }, 0)\n}\n\nfunction handleShadow (el: HTMLElement, callback: Function): void {\n  const root = attachedRoot(el)\n\n  callback(document)\n\n  if (typeof ShadowRoot !== 'undefined' && root instanceof ShadowRoot) {\n    callback(root)\n  }\n}\n\nexport const ClickOutside = {\n  // [data-app] may not be found\n  // if using bind, inserted makes\n  // sure that the root element is\n  // available, iOS does not support\n  // clicks on body\n  mounted (el: HTMLElement, binding: ClickOutsideDirectiveBinding) {\n    const onClick = (e: Event) => directive(e as MouseEvent, el, binding)\n    const onMousedown = (e: Event) => {\n      el._clickOutside!.lastMousedownWasOutside = checkEvent(e as MouseEvent, el, binding)\n    }\n\n    handleShadow(el, (app: HTMLElement) => {\n      app.addEventListener('click', onClick, true)\n      app.addEventListener('mousedown', onMousedown, true)\n    })\n    if (!el._clickOutside) {\n      el._clickOutside = {\n        lastMousedownWasOutside: false,\n      }\n    }\n\n    el._clickOutside[binding.instance!.$.uid] = {\n      onClick,\n      onMousedown,\n    }\n  },\n\n  beforeUnmount (el: HTMLElement, binding: ClickOutsideDirectiveBinding) {\n    if (!el._clickOutside) return\n\n    handleShadow(el, (app: HTMLElement) => {\n      if (!app || !el._clickOutside?.[binding.instance!.$.uid]) return\n\n      const { onClick, onMousedown } = el._clickOutside[binding.instance!.$.uid]!\n\n      app.removeEventListener('click', onClick, true)\n      app.removeEventListener('mousedown', onMousedown, true)\n    })\n\n    delete el._clickOutside[binding.instance!.$.uid]\n  },\n}\n\nexport default ClickOutside\n", "// Utilities\nimport { shallowRef, watch } from 'vue'\n\n// Types\nimport type { Ref } from 'vue'\nimport type { VList } from '@/components/VList'\nimport type { VTextField } from '@/components/VTextField'\n\nexport function useScrolling (listRef: Ref<VList | undefined>, textFieldRef: Ref<VTextField | undefined>) {\n  const isScrolling = shallowRef(false)\n  let scrollTimeout: number\n  function onListScroll (e: Event) {\n    cancelAnimationFrame(scrollTimeout)\n    isScrolling.value = true\n    scrollTimeout = requestAnimationFrame(() => {\n      scrollTimeout = requestAnimationFrame(() => {\n        isScrolling.value = false\n      })\n    })\n  }\n  async function finishScrolling () {\n    await new Promise(resolve => requestAnimationFrame(resolve))\n    await new Promise(resolve => requestAnimationFrame(resolve))\n    await new Promise(resolve => requestAnimationFrame(resolve))\n    await new Promise<void>(resolve => {\n      if (isScrolling.value) {\n        const stop = watch(isScrolling, () => {\n          stop()\n          resolve()\n        })\n      } else resolve()\n    })\n  }\n  async function onListKeydown (e: KeyboardEvent) {\n    if (e.key === 'Tab') {\n      textFieldRef.value?.focus()\n    }\n\n    if (!['PageDown', 'PageUp', 'Home', 'End'].includes(e.key)) return\n    const el: HTMLElement = listRef.value?.$el\n    if (!el) return\n\n    if (e.key === 'Home' || e.key === 'End') {\n      el.scrollTo({\n        top: e.key === 'Home' ? 0 : el.scrollHeight,\n        behavior: 'smooth',\n      })\n    }\n\n    await finishScrolling()\n\n    const children = el.querySelectorAll(':scope > :not(.v-virtual-scroll__spacer)')\n\n    if (e.key === 'PageDown' || e.key === 'Home') {\n      const top = el.getBoundingClientRect().top\n      for (const child of children) {\n        if (child.getBoundingClientRect().top >= top) {\n          (child as HTMLElement).focus()\n          break\n        }\n      }\n    } else {\n      const bottom = el.getBoundingClientRect().bottom\n      for (const child of [...children].reverse()) {\n        if (child.getBoundingClientRect().bottom <= bottom) {\n          (child as HTMLElement).focus()\n          break\n        }\n      }\n    }\n  }\n\n  return {\n    onScrollPassive: onListScroll,\n    onKeydown: onListKeydown,\n  } as Record<string, Function> // typescript doesn't know about vue's event merging\n}\n"],
  "mappings": "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",
  "names": ["VSelectionControlGroupSymbol", "Symbol", "for", "makeSelectionControlGroupProps", "propsFactory", "color", "String", "disabled", "type", "Boolean", "default", "defaultsTarget", "error", "id", "inline", "falseIcon", "IconValue", "trueIcon", "ripple", "Object", "multiple", "name", "readonly", "modelValue", "valueComparator", "Function", "deepEqual", "makeComponentProps", "makeDensityProps", "makeThemeProps", "makeVSelectionControlGroupProps", "VSelectionControlGroup", "genericComponent", "props", "emits", "value", "setup", "_ref", "slots", "useProxiedModel", "uid", "getUid", "computed", "updateHandlers", "Set", "provide", "forceUpdate", "forEach", "fn", "onForceUpdate", "cb", "add", "onScopeDispose", "delete", "provideDefaults", "toRef", "density", "Array", "isArray", "useRender", "_createVNode", "class", "style", "undefined", "makeVSelectionControlProps", "propsFactory", "label", "String", "baseColor", "trueValue", "falseValue", "value", "makeComponentProps", "makeSelectionControlGroupProps", "useSelectionControl", "props", "group", "inject", "VSelectionControlGroupSymbol", "undefined", "densityClasses", "useDensity", "modelValue", "useProxiedModel", "computed", "isMultiple", "multiple", "Array", "isArray", "model", "get", "val", "wrapInArray", "some", "v", "valueComparator", "set", "readonly", "currentValue", "newVal", "filter", "item", "textColorClasses", "textColorStyles", "useTextColor", "error", "disabled", "color", "backgroundColorClasses", "backgroundColorStyles", "useBackgroundColor", "icon", "trueIcon", "falseIcon", "VSelectionControl", "genericComponent", "name", "directives", "Ripple", "inheritAttrs", "emits", "setup", "_ref", "attrs", "slots", "uid", "getUid", "isFocused", "shallowRef", "isFocusVisible", "input", "ref", "id", "isInteractive", "onForceUpdate", "checked", "onFocus", "e", "matchesSelector", "target", "onBlur", "onClickLabel", "stopPropagation", "onInput", "nextTick", "forceUpdate", "useRender", "for", "rootAttrs", "inputAttrs", "filterInputAttrs", "inputNode", "_createVNode", "_mergeProps", "type", "inline", "class", "style", "default", "_withDirectives", "_Fragment", "VIcon", "_resolveDirective", "ripple", "VLabel", "makeVCheckboxBtnProps", "propsFactory", "indeterminate", "Boolean", "indeterminateIcon", "type", "IconValue", "default", "makeVSelectionControlProps", "falseIcon", "trueIcon", "VCheckboxBtn", "genericComponent", "name", "props", "emits", "value", "setup", "_ref", "slots", "useProxiedModel", "model", "onChange", "v", "computed", "useRender", "controlProps", "omit", "VSelectionControl", "filterProps", "_createVNode", "_mergeProps", "$event", "class", "style", "undefined", "makeVCheckboxProps", "propsFactory", "makeVInputProps", "omit", "makeVCheckboxBtnProps", "VCheckbox", "genericComponent", "name", "inheritAttrs", "props", "emits", "value", "focused", "setup", "_ref", "attrs", "slots", "model", "useProxiedModel", "isFocused", "focus", "blur", "useFocus", "uid", "getUid", "id", "computed", "useRender", "rootAttrs", "controlAttrs", "filterInputAttrs", "inputProps", "VInput", "filterProps", "checkboxProps", "VCheckboxBtn", "_createVNode", "_mergeProps", "class", "$event", "style", "default", "_ref2", "messagesId", "isDisabled", "isReadonly", "isValid", "calculateUpdatedTarget", "_ref", "selectedElement", "containerElement", "isRtl", "isHorizontal", "containerSize", "getOffsetSize", "scrollPosition", "getScrollPosition", "childrenSize", "childrenStartPosition", "getOffsetPosition", "additionalOffset", "calculateCenteredTarget", "_ref2", "containerOffsetSize", "childrenOffsetPosition", "childrenOffsetSize", "getScrollSize", "element", "key", "getClientSize", "rtl", "scrollLeft", "offsetWidth", "scrollWidth", "scrollTop", "VSlideGroupSymbol", "Symbol", "for", "makeVSlideGroupProps", "propsFactory", "centerActive", "Boolean", "direction", "type", "String", "default", "symbol", "nextIcon", "IconValue", "prevIcon", "showArrows", "validator", "v", "includes", "makeComponentProps", "makeDisplayProps", "mobile", "makeTagProps", "makeGroupProps", "selectedClass", "VSlideGroup", "genericComponent", "name", "props", "emits", "value", "setup", "_ref", "slots", "isRtl", "useRtl", "displayClasses", "useDisplay", "group", "useGroup", "isOverflowing", "shallowRef", "scrollOffset", "containerSize", "contentSize", "isHorizontal", "computed", "resizeRef", "containerRef", "contentRect", "containerRect", "useResizeObserver", "contentRef", "goTo", "useGoTo", "goToOptions", "container", "el", "duration", "easing", "firstSelectedIndex", "selected", "length", "items", "findIndex", "item", "id", "lastSelectedIndex", "IN_BROWSER", "frame", "watch", "cancelAnimationFrame", "requestAnimationFrame", "sizeProperty", "selectedElement", "children", "scrollToChildren", "isFocused", "center", "target", "calculateCenteredTarget", "containerElement", "calculateUpdatedTarget", "scrollToPosition", "newPosition", "offsetSize", "getOffsetSize", "scrollPosition", "getScrollPosition", "scrollSize", "getScrollSize", "Math", "abs", "scrollWidth", "offsetWidth", "containerWidth", "horizontal", "onScroll", "e", "scrollTop", "scrollLeft", "onFocusin", "composedPath", "onFocusout", "ignoreFocusEvent", "onFocus", "relatedTarget", "contains", "focus", "onFocusAffixes", "onKeydown", "toFocus", "location", "preventDefault", "key", "focusable", "focusableChildren", "querySelector", "nextElementSibling", "previousElementSibling", "firstElementChild", "lastElementChild", "preventScroll", "scrollTo", "offsetStep", "slotProps", "next", "prev", "select", "isSelected", "hasAffixes", "hasPrev", "hasNext", "clientSize", "getClientSize", "scrollSizeMax", "useRender", "_createVNode", "tag", "class", "style", "onClick", "VFadeTransition", "VIcon", "VChipGroupSymbol", "Symbol", "for", "makeVChipGroupProps", "propsFactory", "column", "Boolean", "filter", "valueComparator", "type", "Function", "default", "deepEqual", "makeVSlideGroupProps", "makeComponentProps", "makeGroupProps", "selectedClass", "makeTagProps", "makeThemeProps", "makeVariantProps", "variant", "VChipGroup", "genericComponent", "name", "props", "emits", "value", "setup", "_ref", "slots", "themeClasses", "provideTheme", "isSelected", "select", "next", "prev", "selected", "useGroup", "provideDefaults", "VChip", "color", "toRef", "disabled", "useRender", "slideGroupProps", "VSlideGroup", "filterProps", "_createVNode", "_mergeProps", "class", "style", "makeVChipProps", "propsFactory", "activeClass", "String", "appendAvatar", "appendIcon", "IconValue", "closable", "Boolean", "closeIcon", "type", "default", "closeLabel", "draggable", "filter", "filterIcon", "label", "link", "undefined", "pill", "prependAvatar", "prependIcon", "ripple", "Object", "text", "modelValue", "onClick", "EventProp", "onClickOnce", "makeBorderProps", "makeComponentProps", "makeDensityProps", "makeElevationProps", "makeGroupItemProps", "makeRoundedProps", "makeRouterProps", "makeSizeProps", "makeTagProps", "tag", "makeThemeProps", "makeVariantProps", "variant", "VChip", "genericComponent", "name", "directives", "Ripple", "props", "emits", "e", "value", "val", "click", "setup", "_ref", "attrs", "emit", "slots", "t", "useLocale", "borderClasses", "useBorder", "colorClasses", "colorStyles", "variantClasses", "useVariant", "densityClasses", "useDensity", "elevationClasses", "useElevation", "roundedClasses", "useRounded", "sizeClasses", "useSize", "themeClasses", "provideTheme", "isActive", "useProxiedModel", "group", "useGroupItem", "VChipGroupSymbol", "useLink", "isLink", "computed", "isClickable", "disabled", "closeProps", "preventDefault", "stopPropagation", "navigate", "toggle", "onKeyDown", "key", "Tag", "hasAppendMedia", "hasAppend", "append", "hasClose", "close", "hasFilter", "hasPrependMedia", "hasPrepend", "prepend", "hasColor", "isSelected", "_withDirectives", "_createVNode", "selectedClass", "class", "style", "href", "genOverlays", "VExpandXTransition", "VIcon", "VDefaultsProvider", "icon", "_vShow", "_Fragment", "VAvatar", "image", "start", "select", "end", "_mergeProps", "size", "_resolveDirective", "DepthKey", "Symbol", "for", "ListKey", "Symbol", "for", "createList", "parent", "inject", "hasPrepend", "shallowRef", "updateHasPrepend", "data", "value", "provide", "useList", "independentActiveStrategy", "mandatory", "strategy", "activate", "_ref", "id", "value", "activated", "toRaw", "size", "has", "add", "delete", "in", "v", "children", "parents", "set", "Set", "wrapInArray", "out", "Array", "from", "independentSingleActiveStrategy", "parentStrategy", "_ref2", "rest", "singleSelected", "arr", "length", "slice", "leafActiveStrategy", "_ref3", "leafSingleActiveStrategy", "_ref4", "singleOpenStrategy", "open", "_ref", "id", "value", "opened", "parents", "newOpened", "Set", "add", "parent", "get", "delete", "select", "multipleOpenStrategy", "_ref2", "toRaw", "listOpenStrategy", "_ref3", "path", "push", "independentSelectStrategy", "mandatory", "strategy", "select", "_ref", "id", "value", "selected", "toRaw", "on", "Array", "from", "entries", "reduce", "arr", "_ref2", "key", "push", "length", "set", "in", "v", "children", "parents", "map", "Map", "out", "independentSingleSelectStrategy", "parentStrategy", "_ref3", "rest", "singleSelected", "has", "get", "slice", "leafSelectStrategy", "_ref4", "leafSingleSelectStrategy", "_ref5", "classicSelectStrategy", "_ref6", "original", "items", "item", "shift", "parent", "childrenIds", "everySelected", "every", "cid", "noneSelected", "_ref7", "VNestedSymbol", "Symbol", "for", "emptyNested", "id", "shallowRef", "root", "register", "unregister", "parents", "ref", "Map", "children", "open", "openOnSelect", "activate", "select", "activatable", "selectable", "opened", "Set", "activated", "selected", "selectedValues", "makeNestedProps", "propsFactory", "Boolean", "activeStrategy", "String", "Function", "Object", "selectStrategy", "openStrategy", "mandatory", "useNested", "props", "isUnmounted", "useProxiedModel", "v", "toRaw", "values", "computed", "leafActiveStrategy", "leafSingleActiveStrategy", "independentActiveStrategy", "independentSingleActiveStrategy", "leafSingleSelectStrategy", "leafSelectStrategy", "independentSelectStrategy", "independentSingleSelectStrategy", "classicSelectStrategy", "listOpenStrategy", "singleOpenStrategy", "multipleOpenStrategy", "value", "in", "out", "onBeforeUnmount", "getPath", "path", "parent", "unshift", "get", "vm", "getCurrentInstance", "nested", "toRef", "arr", "key", "entries", "push", "parentId", "isGroup", "set", "delete", "list", "filter", "child", "event", "emit", "newOpened", "newSelected", "newActivated", "provide", "useNestedItem", "inject", "uidSymbol", "getUid", "computedId", "undefined", "item", "e", "isOpen", "has", "isActivated", "isSelected", "isIndeterminate", "isLeaf", "isGroupActivator", "useNestedGroupActivator", "VListGroupActivator", "defineComponent", "name", "setup", "_", "_ref", "slots", "useNestedGroupActivator", "default", "makeVListGroupProps", "propsFactory", "activeColor", "String", "baseColor", "color", "collapseIcon", "type", "IconValue", "expandIcon", "prependIcon", "appendIcon", "fluid", "Boolean", "subgroup", "title", "value", "makeComponentProps", "makeTagProps", "VListGroup", "genericComponent", "props", "_ref2", "isOpen", "open", "id", "_id", "useNestedItem", "toRef", "computed", "list", "useList", "isBooted", "useSsrBoot", "onClick", "e", "stopPropagation", "activatorProps", "class", "toggleIcon", "activatorDefaults", "VListItem", "active", "useRender", "_createVNode", "tag", "hasPrepend", "style", "activator", "VDefaultsProvider", "MaybeTransition", "component", "VExpandTransition", "_withDirectives", "_vShow", "makeVListItemSubtitleProps", "propsFactory", "opacity", "Number", "String", "makeComponentProps", "makeTagProps", "VListItemSubtitle", "genericComponent", "name", "props", "setup", "_ref", "slots", "useRender", "_createVNode", "tag", "class", "style", "VListItemTitle", "createSimpleFunctional", "makeVListItemProps", "propsFactory", "active", "type", "Boolean", "default", "undefined", "activeClass", "String", "activeColor", "appendAvatar", "appendIcon", "IconValue", "baseColor", "disabled", "lines", "link", "nav", "prependAvatar", "prependIcon", "ripple", "Object", "slim", "subtitle", "Number", "title", "value", "onClick", "EventProp", "onClickOnce", "makeBorderProps", "makeComponentProps", "makeDensityProps", "makeDimensionProps", "makeElevationProps", "makeRoundedProps", "makeRouterProps", "makeTagProps", "makeThemeProps", "makeVariantProps", "variant", "VListItem", "genericComponent", "name", "directives", "Ripple", "props", "emits", "click", "e", "setup", "_ref", "attrs", "slots", "emit", "useLink", "id", "computed", "href", "activate", "isActivated", "select", "isOpen", "isSelected", "isIndeterminate", "isGroupActivator", "root", "parent", "openOnSelect", "useNestedItem", "list", "useList", "isActive", "activatable", "isLink", "isClickable", "selectable", "roundedProps", "rounded", "color", "variantProps", "watch", "val", "open", "immediate", "themeClasses", "provideTheme", "borderClasses", "useBorder", "colorClasses", "colorStyles", "variantClasses", "useVariant", "densityClasses", "useDensity", "dimensionStyles", "useDimension", "elevationClasses", "useElevation", "roundedClasses", "useRounded", "lineClasses", "slotProps", "navigate", "onKeyDown", "key", "preventDefault", "target", "dispatchEvent", "MouseEvent", "useRender", "Tag", "tag", "hasTitle", "hasSubtitle", "hasAppendMedia", "hasAppend", "append", "hasPrependMedia", "hasPrepend", "prepend", "updateHasPrepend", "deprecate", "_withDirectives", "_createVNode", "class", "style", "genOverlays", "_Fragment", "VAvatar", "density", "VIcon", "VDefaultsProvider", "image", "icon", "VListItemAction", "start", "VListItemTitle", "VListItemSubtitle", "end", "_resolveDirective", "makeVListSubheaderProps", "propsFactory", "color", "String", "inset", "Boolean", "sticky", "title", "makeComponentProps", "makeTagProps", "VListSubheader", "genericComponent", "name", "props", "setup", "_ref", "slots", "textColorClasses", "textColorStyles", "useTextColor", "toRef", "useRender", "hasText", "default", "_createVNode", "tag", "value", "class", "style", "makeVDividerProps", "propsFactory", "color", "String", "inset", "Boolean", "length", "Number", "opacity", "thickness", "vertical", "makeComponentProps", "makeThemeProps", "VDivider", "genericComponent", "name", "props", "setup", "_ref", "attrs", "slots", "themeClasses", "provideTheme", "textColorClasses", "textColorStyles", "useTextColor", "toRef", "dividerStyles", "computed", "styles", "convertToUnit", "useRender", "divider", "_createVNode", "value", "class", "style", "role", "undefined", "default", "makeVListChildrenProps", "propsFactory", "items", "Array", "returnObject", "Boolean", "VListChildren", "genericComponent", "name", "props", "setup", "_ref", "slots", "createList", "default", "map", "_ref2", "children", "itemProps", "type", "raw", "item", "divider", "_createVNode", "VDivider", "subheader", "VListSubheader", "slotsWithItem", "subtitle", "slotProps", "undefined", "prepend", "append", "title", "listGroupProps", "VListGroup", "filterProps", "_mergeProps", "value", "activator", "_ref3", "activatorProps", "listItemProps", "header", "VListItem", "makeItemsProps", "propsFactory", "items", "type", "Array", "default", "itemTitle", "String", "Function", "itemValue", "itemChildren", "Boolean", "itemProps", "returnObject", "valueComparator", "deepEqual", "transformItem", "props", "item", "title", "getPropertyFromItem", "value", "children", "isArray", "omit", "undefined", "_props", "transformItems", "raw", "array", "push", "useItems", "computed", "hasNullItem", "some", "transformIn", "filter", "v", "map", "find", "transformOut", "_ref", "_ref2", "isPrimitive", "value", "transformItem", "props", "item", "type", "getPropertyFromItem", "itemType", "title", "itemTitle", "itemValue", "undefined", "children", "itemChildren", "itemProps", "omit", "_props", "transformItems", "raw", "items", "array", "push", "useListItems", "computed", "makeVListProps", "propsFactory", "baseColor", "String", "activeColor", "activeClass", "bgColor", "disabled", "Boolean", "expandIcon", "collapseIcon", "lines", "default", "slim", "nav", "EventProp", "makeNestedProps", "selectStrategy", "openStrategy", "makeBorderProps", "makeComponentProps", "makeDensityProps", "makeDimensionProps", "makeElevationProps", "makeItemsProps", "makeRoundedProps", "makeTagProps", "makeThemeProps", "makeVariantProps", "variant", "VList", "genericComponent", "name", "emits", "setup", "_ref", "slots", "themeClasses", "provideTheme", "backgroundColorClasses", "backgroundColorStyles", "useBackgroundColor", "toRef", "borderClasses", "useBorder", "densityClasses", "useDensity", "dimensionStyles", "useDimension", "elevationClasses", "useElevation", "roundedClasses", "useRounded", "open", "parents", "select", "useNested", "lineClasses", "color", "createList", "provideDefaults", "VListGroup", "VListItem", "density", "isFocused", "shallowRef", "contentRef", "ref", "onFocusin", "e", "onFocusout", "onFocus", "relatedTarget", "contains", "focus", "onKeydown", "target", "includes", "tagName", "key", "preventDefault", "onMousedown", "location", "focusChild", "useRender", "_createVNode", "tag", "class", "style", "VListChildren", "returnObject", "VListImg", "createSimpleFunctional", "makeVListItemActionProps", "propsFactory", "start", "Boolean", "end", "makeComponentProps", "makeTagProps", "VListItemAction", "genericComponent", "name", "props", "setup", "_ref", "slots", "useRender", "_createVNode", "tag", "class", "style", "makeVListItemMediaProps", "propsFactory", "start", "Boolean", "end", "makeComponentProps", "makeTagProps", "VListItemMedia", "genericComponent", "name", "props", "setup", "_ref", "slots", "useRender", "_createVNode", "tag", "class", "style", "elementToViewport", "point", "offset", "x", "y", "getOffset", "a", "b", "x", "y", "anchorToPoint", "anchor", "box", "side", "align", "width", "height", "elementToViewport", "locationStrategies", "static", "staticLocationStrategy", "connected", "connectedLocationStrategy", "makeLocationStrategyProps", "propsFactory", "locationStrategy", "type", "String", "Function", "default", "validator", "val", "location", "origin", "offset", "Number", "Array", "useLocationStrategies", "props", "data", "contentStyles", "ref", "updateLocation", "IN_BROWSER", "useToggleScope", "isActive", "value", "reset", "watch", "onScopeDispose", "window", "removeEventListener", "onResize", "undefined", "addEventListener", "passive", "e", "getIntrinsicSize", "el", "isRtl", "contentBox", "nullifyTransforms", "x", "parseFloat", "style", "right", "left", "y", "top", "activatorFixed", "isArray", "target", "isFixedPosition", "Object", "assign", "position", "preferredAnchor", "preferredOrigin", "destructComputed", "parsedAnchor", "parseAnchor", "parsedOrigin", "flipSide", "side", "align", "flipAlign", "flipCorner", "minWidth", "minHeight", "maxWidth", "maxHeight", "map", "key", "computed", "isNaN", "Infinity", "split", "length", "push", "observe", "observer", "ResizeObserver", "contentEl", "_ref", "_ref2", "newTarget", "newContentEl", "oldTarget", "oldContentEl", "unobserve", "immediate", "disconnect", "requestAnimationFrame", "targetBox", "getTargetBox", "scrollParents", "getScrollParents", "viewportMargin", "document", "documentElement", "getPropertyValue", "viewport", "reduce", "box", "rect", "getBoundingClientRect", "scrollBox", "Box", "width", "clientWidth", "height", "clientHeight", "Math", "max", "min", "bottom", "placement", "anchor", "checkOverflow", "_placement", "targetPoint", "anchorToPoint", "contentPoint", "getOffset", "overflows", "getOverflow", "available", "flipped", "resets", "consoleError", "_x", "_y", "axis", "getAxis", "hasOverflowX", "before", "after", "hasOverflowY", "forEach", "newPlacement", "flip", "newOverflows", "transformOrigin", "convertToUnit", "pixelRound", "pixelCeil", "clamp", "nextTick", "result", "round", "devicePixelRatio", "ceil", "clean", "frames", "requestNewFrame", "cb", "length", "push", "run", "raf", "cancelAnimationFrame", "requestAnimationFrame", "frame", "shift", "scrollStrategies", "none", "close", "closeScrollStrategy", "block", "blockScrollStrategy", "reposition", "repositionScrollStrategy", "makeScrollStrategyProps", "propsFactory", "scrollStrategy", "type", "String", "Function", "default", "validator", "val", "useScrollStrategies", "props", "data", "IN_BROWSER", "scope", "watchEffect", "stop", "isActive", "value", "effectScope", "Promise", "resolve", "setTimeout", "active", "run", "onScopeDispose", "onScroll", "e", "bindScroll", "targetEl", "contentEl", "offsetParent", "root", "scrollElements", "Set", "getScrollParents", "contained", "undefined", "filter", "el", "classList", "contains", "scrollbarWidth", "window", "innerWidth", "document", "documentElement", "offsetWidth", "scrollableParent", "hasScrollbar", "add", "forEach", "i", "style", "setProperty", "convertToUnit", "scrollLeft", "scrollTop", "x", "parseFloat", "getPropertyValue", "y", "scrollBehavior", "removeProperty", "remove", "slow", "raf", "ric", "update", "requestNewFrame", "start", "performance", "now", "updateLocation", "time", "requestIdleCallback", "cb", "cancelAnimationFrame", "requestAnimationFrame", "cancelIdleCallback", "addEventListener", "passive", "removeEventListener", "VMenuSymbol", "Symbol", "for", "makeDelayProps", "propsFactory", "closeDelay", "Number", "String", "openDelay", "useDelay", "props", "cb", "clearDelay", "runDelay", "isOpening", "delay", "Promise", "resolve", "defer", "runOpenDelay", "runCloseDelay", "makeActivatorProps", "propsFactory", "target", "String", "Object", "activator", "activatorProps", "type", "default", "openOnClick", "Boolean", "undefined", "openOnHover", "openOnFocus", "closeOnContentClick", "makeDelayProps", "useActivator", "props", "_ref", "isActive", "isTop", "contentEl", "vm", "getCurrentInstance", "activatorEl", "ref", "isHovered", "isFocused", "firstEnter", "computed", "value", "runOpenDelay", "runCloseDelay", "useDelay", "cursorTarget", "availableEvents", "onClick", "e", "stopPropagation", "currentTarget", "clientX", "clientY", "onMouseenter", "sourceCapabilities", "firesTouchEvents", "onMouseleave", "onFocus", "matchesSelector", "onBlur", "activatorEvents", "events", "contentEvents", "onFocusin", "onFocusout", "menu", "inject", "VMenuSymbol", "closeParents", "scrimEvents", "watch", "val", "contains", "document", "activeElement", "setTimeout", "flush", "activatorRef", "templateRef", "watchEffect", "nextTick", "el", "targetRef", "getTarget", "targetEl", "Array", "isArray", "scope", "IN_BROWSER", "effectScope", "run", "_useActivator", "stop", "immediate", "onScopeDispose", "_ref2", "oldVal", "getActivator", "unbindActivatorProps", "bindActivatorProps", "arguments", "length", "_props", "bindProps", "mergeProps", "unbindProps", "selector", "nodeType", "Node", "ELEMENT_NODE", "proxy", "$el", "parentNode", "hasAttribute", "querySelector", "useHydration", "IN_BROWSER", "shallowRef", "ssr", "useDisplay", "isMounted", "onMounted", "value", "makeLazyProps", "propsFactory", "eager", "Boolean", "useLazy", "props", "active", "isBooted", "shallowRef", "hasContent", "computed", "value", "watch", "onAfterLeave", "useScopeId", "vm", "getCurrentInstance", "scopeId", "vnode", "undefined", "StackSymbol", "Symbol", "for", "globalStack", "reactive", "useStack", "isActive", "zIndex", "disableGlobalStack", "vm", "getCurrentInstance", "createStackEntry", "parent", "inject", "undefined", "stack", "activeChildren", "Set", "provide", "_zIndex", "shallowRef", "value", "useToggleScope", "lastZIndex", "at", "push", "uid", "add", "onScopeDispose", "idx", "toRaw", "findIndex", "v", "splice", "delete", "globalTop", "watchEffect", "_isTop", "setTimeout", "localTop", "computed", "size", "readonly", "stackStyles", "useTeleport", "target", "teleportTarget", "computed", "_target", "IN_BROWSER", "undefined", "targetElement", "document", "body", "querySelector", "warn", "container", "children", "find", "el", "matches", "createElement", "className", "appendChild", "defaultConditional", "checkEvent", "e", "el", "binding", "checkIsActive", "root", "attachedRoot", "ShadowRoot", "host", "target", "elements", "value", "include", "push", "some", "contains", "isActive", "closeConditional", "directive", "handler", "shadowTarget", "_clickOutside", "lastMousedownWasOutside", "setTimeout", "handleShadow", "callback", "document", "ClickOutside", "mounted", "onClick", "onMousedown", "app", "addEventListener", "instance", "$", "uid", "beforeUnmount", "removeEventListener", "Scrim", "props", "modelValue", "color", "rest", "_createVNode", "Transition", "default", "_mergeProps", "backgroundColorClasses", "value", "backgroundColorStyles", "makeVOverlayProps", "propsFactory", "absolute", "Boolean", "attach", "String", "Object", "closeOnBack", "type", "contained", "contentClass", "contentProps", "disabled", "opacity", "Number", "noClickAnimation", "persistent", "scrim", "zIndex", "makeActivatorProps", "makeComponentProps", "makeDimensionProps", "makeLazyProps", "makeLocationStrategyProps", "makeScrollStrategyProps", "makeThemeProps", "makeTransitionProps", "VOverlay", "genericComponent", "name", "directives", "ClickOutside", "inheritAttrs", "_disableGlobalStack", "emits", "e", "afterEnter", "afterLeave", "setup", "_ref", "slots", "attrs", "emit", "vm", "getCurrentInstance", "root", "ref", "scrimEl", "contentEl", "model", "useProxiedModel", "isActive", "computed", "get", "set", "v", "themeClasses", "provideTheme", "rtlClasses", "isRtl", "useRtl", "hasContent", "onAfterLeave", "_onAfterLeave", "useLazy", "scrimColor", "useBackgroundColor", "globalTop", "localTop", "stackStyles", "useStack", "toRef", "activatorEl", "activatorRef", "target", "targetEl", "targetRef", "activatorEvents", "contentEvents", "scrimEvents", "useActivator", "isTop", "teleportTarget", "useTeleport", "rootNode", "getRootNode", "proxy", "$el", "ShadowRoot", "dimensionStyles", "useDimension", "isMounted", "useHydration", "scopeId", "useScopeId", "watch", "contentStyles", "updateLocation", "useLocationStrategies", "useScrollStrategies", "onClickOutside", "animateClick", "closeConditional", "MouseEvent", "shadowTarget", "IN_BROWSER", "val", "window", "addEventListener", "onKeydown", "removeEventListener", "immediate", "onBeforeUnmount", "key", "contains", "document", "activeElement", "focus", "router", "useRouter", "useToggleScope", "useBackButton", "next", "top", "scrollParent", "getScrollParent", "scrollingElement", "scrollTop", "animate", "transformOrigin", "transform", "duration", "easing", "standardEasing", "onAfterEnter", "useRender", "_Fragment", "activator", "mergeProps", "activatorProps", "Teleport", "class", "convertToUnit", "style", "MaybeTransition", "transition", "_withDirectives", "_vShow", "_resolveDirective", "handler", "include", "makeVMenuProps", "propsFactory", "id", "String", "submenu", "Boolean", "omit", "makeVOverlayProps", "closeDelay", "closeOnContentClick", "locationStrategy", "location", "undefined", "openDelay", "scrim", "scrollStrategy", "transition", "component", "VDialogTransition", "VMenu", "genericComponent", "name", "props", "emits", "value", "setup", "_ref", "slots", "isActive", "useProxiedModel", "scopeId", "useScopeId", "isRtl", "useRtl", "uid", "getUid", "computed", "overlay", "ref", "parent", "inject", "VMenuSymbol", "openChildren", "shallowRef", "Set", "provide", "register", "add", "unregister", "delete", "closeParents", "e", "setTimeout", "size", "persistent", "contentEl", "isClickInsideElement", "onBeforeUnmount", "onDeactivated", "onFocusIn", "before", "relatedTarget", "after", "target", "nextTick", "globalTop", "document", "includes", "contains", "focusable", "focusableChildren", "focus", "watch", "val", "addEventListener", "once", "removeEventListener", "onClickOutside", "onKeydown", "disabled", "key", "HTMLTextAreaElement", "HTMLInputElement", "closest", "preventDefault", "nextElement", "getNextElement", "shiftKey", "el", "tabIndex", "activatorEl", "onActivatorKeydown", "stopImmediatePropagation", "focusChild", "activatorProps", "mergeProps", "useRender", "overlayProps", "VOverlay", "filterProps", "_createVNode", "_mergeProps", "class", "style", "$event", "activator", "default", "_len", "arguments", "length", "args", "Array", "_key", "VDefaultsProvider", "forwardRefs", "Î¨openChildren", "useScrolling", "listRef", "textFieldRef", "isScrolling", "shallowRef", "scrollTimeout", "onListScroll", "e", "cancelAnimationFrame", "value", "requestAnimationFrame", "finishScrolling", "Promise", "resolve", "stop", "watch", "onListKeydown", "key", "focus", "includes", "el", "$el", "scrollTo", "top", "scrollHeight", "behavior", "children", "querySelectorAll", "getBoundingClientRect", "child", "bottom", "reverse", "onScrollPassive", "onKeydown", "makeSelectProps", "propsFactory", "chips", "Boolean", "closableChips", "closeText", "type", "String", "default", "openText", "eager", "hideNoData", "hideSelected", "listProps", "Object", "menu", "menuIcon", "IconValue", "menuProps", "multiple", "noDataText", "openOnClear", "itemColor", "makeItemsProps", "itemChildren", "makeVSelectProps", "omit", "makeVTextFieldProps", "modelValue", "role", "makeTransitionProps", "transition", "component", "VDialogTransition", "VSelect", "genericComponent", "name", "props", "emits", "focused", "value", "ue", "setup", "_ref", "slots", "t", "useLocale", "vTextFieldRef", "ref", "vMenuRef", "vVirtualScrollRef", "_menu", "useProxiedModel", "computed", "get", "set", "v", "Î¨openChildren", "size", "items", "transformIn", "transformOut", "useItems", "model", "wrapInArray", "transformed", "counterValue", "length", "form", "useForm", "selectedValues", "map", "selection", "isFocused", "shallowRef", "label", "keyboardLookupPrefix", "keyboardLookupLastTime", "displayItems", "filter", "item", "some", "s", "valueComparator", "menuDisabled", "readonly", "isReadonly", "computedMenuProps", "activatorProps", "listRef", "listEvents", "useScrolling", "onClear", "e", "onMousedownControl", "onListKeydown", "checkPrintable", "onKeydown", "key", "includes", "preventDefault", "focus", "KEYBOARD_LOOKUP_THRESHOLD", "now", "performance", "toLowerCase", "find", "title", "startsWith", "undefined", "index", "indexOf", "IN_BROWSER", "window", "requestAnimationFrame", "scrollToIndex", "select", "arguments", "disabled", "findIndex", "add", "splice", "nextTick", "onBlur", "$el", "contains", "relatedTarget", "onAfterEnter", "calculateVisibleItems", "onAfterLeave", "onFocusin", "onModelUpdate", "matchesSelector", "watch", "newVal", "oldVal", "useRender", "hasChips", "chip", "hasList", "isDirty", "textFieldProps", "VTextField", "filterProps", "placeholder", "persistentPlaceholder", "_createVNode", "_mergeProps", "join", "$event", "externalValue", "class", "style", "_Fragment", "VMenu", "VList", "color", "VListItem", "VVirtualScroll", "_ref2", "itemRef", "itemProps", "mergeProps", "onClick", "prepend", "_ref3", "isSelected", "VCheckboxBtn", "prependAvatar", "VAvatar", "prependIcon", "VIcon", "onChipClose", "stopPropagation", "slotProps", "onMousedown", "hasSlot", "slotContent", "ensureValidVNode", "VChip", "VDefaultsProvider", "closable", "text", "_createTextVNode", "_len", "args", "Array", "_key", "forwardRefs"]
}
